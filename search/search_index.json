{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projekt semestralny: Analiza danych w naukach o Ziemi","text":"<p>Projekt realizowany w ramach przedmiotu Analiza danych w naukach o Ziemi na kierunku Geoinformatyka. Temat projektu: Zmiany klimatyczne w miastach.</p> <p>W ramach projektu przeprowadzana jest analiza wybranych danych \u015brodowiskowych i meteorologicznych dotycz\u0105cych miast, maj\u0105ca na celu identyfikacj\u0119 trend\u00f3w i anomalii zwi\u0105zanych ze zmianami klimatu. Szczeg\u00f3\u0142owy opis projektu znajduje si\u0119 w pliku <code>desc.md</code>.</p>"},{"location":"#autorzy","title":"Autorzy","text":"<ul> <li>Miko\u0142aj Marchut </li> <li>Aleksander Duda</li> </ul>"},{"location":"desc/","title":"\ud83d\udcca Projekt: Zmiany klimatyczne w miastach \u2013 analiza danych meteorologicznych","text":""},{"location":"desc/#cel","title":"\ud83c\udfaf Cel","text":"<p>Celem projektu jest analiza d\u0142ugoterminowych zmian parametr\u00f3w klimatycznych (temperatura, wyst\u0119powanie opad\u00f3w, wyst\u0119powanie ekstremalnych zjawisk pogodowych) w wybranych miastach europejskich. Analiza oparta jest na danych meteorologicznych z wieloletnich serii czasowych, a celem jest:</p> <ul> <li>identyfikacja lokalnych trend\u00f3w klimatycznych,</li> <li>por\u00f3wnanie zmian pomi\u0119dzy r\u00f3\u017cnymi miastami,</li> <li>detekcja istotnych statystycznie trend\u00f3w,</li> <li>ocena sezonowo\u015bci i zmienno\u015bci parametr\u00f3w klimatycznych.</li> </ul>"},{"location":"desc/#metody","title":"\ud83e\uddea Metody","text":"<p>Projekt opiera si\u0119 na eksploracyjnej analizie danych (EDA), analizie statystycznej oraz modelowaniu szeregu czasowego.</p>"},{"location":"desc/#1-wczytanie-i-przygotowanie-danych","title":"1. Wczytanie i przygotowanie danych","text":"<ul> <li>Dane przechowywane s\u0105 w plikach <code>.pkl</code> oraz <code>.csv</code></li> <li>Struktura danych to s\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi szeregami czasowymi</li> <li>Dodatkowe metadane zawieraj\u0105 m.in. wsp\u00f3\u0142rz\u0119dne stacji</li> </ul>"},{"location":"desc/#2-eksploracyjna-analiza-danych-eda","title":"2. Eksploracyjna analiza danych (EDA)","text":"<ul> <li>Analiza brak\u00f3w danych i jako\u015bci pomiar\u00f3w</li> <li>Agregacja miesi\u0119czna i roczna danych</li> <li>Wizualizacja trend\u00f3w i rozk\u0142ad\u00f3w</li> </ul>"},{"location":"desc/#3-analiza-trendu-i-zmiennosci","title":"3. Analiza trendu i zmienno\u015bci","text":"<ul> <li>Dopasowanie modeli trendu (LOWESS)</li> <li>Dekonstrukcja sezonowo\u015bci metod\u0105 STL</li> <li>Obliczanie i wizualizacja zmienno\u015bci rocznej i sezonowej</li> </ul>"},{"location":"desc/#4-testy-statystyczne","title":"4. Testy statystyczne","text":"<ul> <li>Testy normalno\u015bci (Shapiro-Wilka)</li> <li>Por\u00f3wnanie rozk\u0142ad\u00f3w mi\u0119dzy miastami i okresami (testy t-Studenta, Manna\u2013Whitneya, Levene\u2019a)</li> </ul>"},{"location":"desc/#techniczna-implementacja","title":"\ud83d\udee0 Techniczna implementacja","text":"<p>Projekt zosta\u0142 zrealizowany w j\u0119zyku Python 3.12, z wykorzystaniem notatnik\u00f3w Jupyter. Wykorzystane biblioteki:</p> <ul> <li><code>pandas</code>, <code>numpy</code> \u2013 przetwarzanie danych</li> <li><code>matplotlib</code>, <code>seaborn</code> \u2013 wizualizacja</li> <li><code>statsmodels</code> \u2013 dekompozycja szeregu czasowego i analiza trend\u00f3w</li> <li><code>scipy.stats</code> \u2013 testy statystyczne</li> <li><code>pickle</code>, <code>os</code>, <code>re</code> \u2013 obs\u0142uga danych i automatyzacja operacji</li> </ul> <p>Szczeg\u00f3\u0142owy kod i wyniki analiz znajduj\u0105 si\u0119 w notatnikach w sekcji Kod.</p>"},{"location":"log/","title":"\ud83d\uddd3\ufe0f Dziennik projektu","text":""},{"location":"log/#21032025","title":"21.03.2025","text":"<p>Post\u0119p: - Zapoznanie si\u0119 z og\u00f3lnymi za\u0142o\u017ceniami projektu semestralnego - Przegl\u0105d temat\u00f3w i wyb\u00f3r: Zmiany klimatyczne w miastach</p> <p>Problemy / kwestie do przedyskutowania: - Doprecyzowanie zakresu analizy i liczby miast - Wyb\u00f3r podej\u015bcia: notatniki vs struktura jako pakiet</p>"},{"location":"log/#28032025","title":"28.03.2025","text":"<p>Post\u0119p: - Przegl\u0105d potencjalnych \u017ar\u00f3de\u0142 danych (m.in. ERA5, dane udost\u0119pnione przez prowadz\u0105cego) - Wst\u0119pna koncepcja: analiza temperatury i opad\u00f3w w wybranych miastach - Zapoznanie si\u0119 ze struktur\u0105 gotowego repozytorium GitHub Classroom</p> <p>Problemy / kwestie do przedyskutowania: - Format danych wej\u015bciowych i organizacja katalog\u00f3w projektu - Spos\u00f3b przygotowania dokumentacji (MkDocs)</p>"},{"location":"log/#04042025","title":"04.04.2025","text":"<p>Post\u0119p: - Wczytanie danych z pliku <code>climate_data.pkl</code> - Struktura danych: s\u0142ownik miast oraz informacje o stacjach - Wst\u0119pna eksploracja danych (d\u0142ugo\u015bci szereg\u00f3w, obecno\u015b\u0107 brak\u00f3w)</p> <p>Problemy / kwestie do przedyskutowania: - Jak ujednolici\u0107 d\u0142ugo\u015bci danych w miastach o du\u017cych brakach - Czy analizowa\u0107 wszystkie miasta, czy tylko z pe\u0142nymi danymi</p>"},{"location":"log/#11042025","title":"11.04.2025","text":"<p>Post\u0119p: - Weryfikacja jako\u015bci danych: wyszukiwanie warto\u015bci odstaj\u0105cych i brak\u00f3w (<code>9999.9</code>) - Identyfikacja przerw w danych (braki ci\u0105g\u0142o\u015bci) - Wst\u0119pne agregacje miesi\u0119czne i roczne</p> <p>Problemy / kwestie do przedyskutowania: - Jak obchodzi\u0107 si\u0119 z brakami w agregacji (pomija\u0107 miesi\u0105ce z brakami?) - Standaryzacja nazw i struktur dataframe\u2019\u00f3w dla miast</p>"},{"location":"log/#25042025","title":"25.04.2025","text":"<p>Post\u0119p: - Czyszczenie danych i tworzenie funkcji do przetwarzania czasowego - \u0141\u0105czenie danych z metainformacjami o lokalizacji - Weryfikacja zmienno\u015bci i sezonowo\u015bci danych</p> <p>Problemy / kwestie do przedyskutowania: - Czy wycina\u0107 miesi\u0105ce z najwi\u0119kszymi brakami - Format plik\u00f3w po\u015brednich (pkl, feather, parquet?)</p>"},{"location":"log/#30042025","title":"30.04.2025","text":"<p>Post\u0119p: - Finalizacja przygotowania danych do analizy - Eksploracyjna analiza danych: wykresy pude\u0142kowe, \u015brednie roczne, sezonowo\u015b\u0107 - Uporz\u0105dkowanie struktury folder\u00f3w i notatnik\u00f3w</p> <p>Problemy / kwestie do przedyskutowania: - Czy przekszta\u0142ca\u0107 dane do d\u0142ugiego formatu - Jak najlepiej prezentowa\u0107 dane wielowymiarowe (miasta \u00d7 zmienne \u00d7 czas)</p>"},{"location":"log/#09052025","title":"09.05.2025","text":"<p>Post\u0119p: - Wst\u0119pna analiza trendu: regresje liniowe dla temperatury i opad\u00f3w - Testowanie dekompozycji sezonowej (STL) - Przygotowanie wykres\u00f3w trend\u00f3w</p> <p>Problemy / kwestie do przedyskutowania: - Wyb\u00f3r skali czasowej dla analizy trendu (roczna vs sezonowa) - Weryfikacja za\u0142o\u017ce\u0144 regresji</p>"},{"location":"log/#16052025","title":"16.05.2025","text":"<p>Post\u0119p: - Zastosowanie test\u00f3w statystycznych: Shapiro, Levene, t-test, Mann\u2013Whitney - Por\u00f3wnanie rozk\u0142ad\u00f3w mi\u0119dzy miastami - Identyfikacja miast z istotnymi r\u00f3\u017cnicami i anomaliami</p> <p>Problemy / kwestie do przedyskutowania: - Jak wizualizowa\u0107 wyniki test\u00f3w por\u00f3wnawczych - Jak dobra\u0107 odpowiednie testy dla konkretnych pyta\u0144 badawczych</p>"},{"location":"log/#23052025","title":"23.05.2025","text":"<p>Post\u0119p: - Doprecyzowanie wniosk\u00f3w z test\u00f3w statystycznych - Konsolidacja wynik\u00f3w do wsp\u00f3lnych tabel i wykres\u00f3w - Przygotowanie materia\u0142u do publikacji przez MkDocs</p> <p>Problemy / kwestie do przedyskutowania: - Jak zintegrowa\u0107 wyniki w dokumentacji projektu - Spos\u00f3b opisu i interpretacji statystyk</p>"},{"location":"log/#30052025","title":"30.05.2025","text":"<p>Post\u0119p: - Wizualizacja trend\u00f3w i por\u00f3wna\u0144 mi\u0119dzy miastami - Tworzenie map cieplnych i wykres\u00f3w z opisami - Ostateczne poprawki w kodzie analizy</p> <p>Problemy / kwestie do przedyskutowania: - Czy doda\u0107 dodatkowe miary (np. zmienno\u015b\u0107 mi\u0119dzylat) - Jak wyr\u00f3\u017cni\u0107 ciekawe przypadki miast</p>"},{"location":"log/#06062025","title":"06.06.2025","text":"<p>Post\u0119p: - Finalizacja wizualizacji - Tworzenie sp\u00f3jnego zestawu wykres\u00f3w do prezentacji - Integracja wykres\u00f3w w dokumentacji</p> <p>Problemy / kwestie do przedyskutowania: - Jakie wizualizacje powinny trafi\u0107 do strony g\u0142\u00f3wnej - Jak zorganizowa\u0107 tre\u015b\u0107 w MkDocs</p>"},{"location":"notebooks/Data_Extraction/","title":"\ud83d\udd0d Ekstrakcja Danych","text":"In\u00a0[1]: Copied! <pre>import pandas as pd\nimport tarfile\nimport os\nfrom io import StringIO\n</pre> import pandas as pd import tarfile import os from io import StringIO In\u00a0[16]: Copied! <pre>DATA_DIR = \"Data\"  # Directory containing Year.tar.gz files\n# STATIONS_OF_INTEREST = [\"12375099999\",\n#                         \"11035099999\",\n#                         \"06451099999\",\n#                         \"11518099999\",\n#                         \"07156099999\",\n#                         \"10384099999\",\n#                         \"16716199999\",\n#                         \"12840099999\",\n#                         \"08579099999\",\n#                         \"03775099999\",\n#                         \"08221099999\",\n#                         \"27612099999\"]  # Your target stations\n\nSTATIONS_OF_INTEREST = [\"16741099999\"]\nOUTPUT_DIR = \"Extracted_Stations\"\nYEARS = range(1929, 2024)\n</pre> DATA_DIR = \"Data\"  # Directory containing Year.tar.gz files # STATIONS_OF_INTEREST = [\"12375099999\", #                         \"11035099999\", #                         \"06451099999\", #                         \"11518099999\", #                         \"07156099999\", #                         \"10384099999\", #                         \"16716199999\", #                         \"12840099999\", #                         \"08579099999\", #                         \"03775099999\", #                         \"08221099999\", #                         \"27612099999\"]  # Your target stations  STATIONS_OF_INTEREST = [\"16741099999\"] OUTPUT_DIR = \"Extracted_Stations\" YEARS = range(1929, 2024) In\u00a0[3]: Copied! <pre>os.makedirs(OUTPUT_DIR, exist_ok=True)\n</pre> os.makedirs(OUTPUT_DIR, exist_ok=True) In\u00a0[4]: Copied! <pre>def extract_station_from_tar(tar_path, station_name):\n    \"\"\"Extract a specific station's data from a tar.gz file\"\"\"\n    # Otwieramy archiwum tar.gz w trybie do odczytu skompresowanego gzipem\n    with tarfile.open(tar_path, 'r:gz') as tar:\n        # Tworzymy nazw\u0119 pliku CSV, kt\u00f3ry chcemy wyci\u0105gn\u0105\u0107 (np. \"Warszawa.csv\")\n        csv_name = f\"{station_name}.csv\"\n        try:\n            # Szukamy w archiwum pliku o takiej nazwie\n            member = tar.getmember(csv_name)\n            # Wyci\u0105gamy plik z archiwum jako strumie\u0144 bajt\u00f3w\n            csv_file = tar.extractfile(member)\n            # Wczytujemy dane CSV do Pandas DataFrame (po zamianie bajt\u00f3w na string)\n            return pd.read_csv(StringIO(csv_file.read().decode('utf-8')))\n        except KeyError:\n            # Je\u015bli pliku o takiej nazwie nie ma w archiwum, wypisujemy komunikat i zwracamy None\n            print(f\"Station {station_name} not found in {tar_path}\")\n            return None\n            \n</pre> def extract_station_from_tar(tar_path, station_name):     \"\"\"Extract a specific station's data from a tar.gz file\"\"\"     # Otwieramy archiwum tar.gz w trybie do odczytu skompresowanego gzipem     with tarfile.open(tar_path, 'r:gz') as tar:         # Tworzymy nazw\u0119 pliku CSV, kt\u00f3ry chcemy wyci\u0105gn\u0105\u0107 (np. \"Warszawa.csv\")         csv_name = f\"{station_name}.csv\"         try:             # Szukamy w archiwum pliku o takiej nazwie             member = tar.getmember(csv_name)             # Wyci\u0105gamy plik z archiwum jako strumie\u0144 bajt\u00f3w             csv_file = tar.extractfile(member)             # Wczytujemy dane CSV do Pandas DataFrame (po zamianie bajt\u00f3w na string)             return pd.read_csv(StringIO(csv_file.read().decode('utf-8')))         except KeyError:             # Je\u015bli pliku o takiej nazwie nie ma w archiwum, wypisujemy komunikat i zwracamy None             print(f\"Station {station_name} not found in {tar_path}\")             return None              In\u00a0[17]: Copied! <pre>for year in YEARS:\n    # Budujemy \u015bcie\u017ck\u0119 do pliku archiwum .tar.gz dla danego roku\n    tar_path = os.path.join(DATA_DIR, f\"{year}.tar.gz\")\n    \n    # Sprawdzamy, czy plik istnieje \u2013 je\u015bli nie, wypisujemy komunikat i przechodzimy do kolejnego roku\n    if not os.path.exists(tar_path):\n        print(f\"File not found: {tar_path}\")\n        continue\n    \n    print(f\"Processing {year}...\")\n    \n    # Dla ka\u017cdej wybranej stacji w STATIONS_OF_INTEREST\n    for station in STATIONS_OF_INTEREST:\n        # Wyci\u0105gamy dane stacji z archiwum za pomoc\u0105 funkcji extract_station_from_tar\n        df = extract_station_from_tar(tar_path, station)\n        \n        # Je\u015bli dane zosta\u0142y pomy\u015blnie wczytane (nie s\u0105 None)\n        if df is not None:\n            # Budujemy \u015bcie\u017ck\u0119 do zapisu pliku CSV z danymi danej stacji i roku\n            output_path = os.path.join(OUTPUT_DIR, f\"{station}_{year}.csv\")\n            # Zapisujemy DataFrame do pliku CSV bez indeksu\n            df.to_csv(output_path, index=False)\n            print(f\"Saved {station} data for {year}\")\n\nprint(\"Extraction complete!\")\n</pre> for year in YEARS:     # Budujemy \u015bcie\u017ck\u0119 do pliku archiwum .tar.gz dla danego roku     tar_path = os.path.join(DATA_DIR, f\"{year}.tar.gz\")          # Sprawdzamy, czy plik istnieje \u2013 je\u015bli nie, wypisujemy komunikat i przechodzimy do kolejnego roku     if not os.path.exists(tar_path):         print(f\"File not found: {tar_path}\")         continue          print(f\"Processing {year}...\")          # Dla ka\u017cdej wybranej stacji w STATIONS_OF_INTEREST     for station in STATIONS_OF_INTEREST:         # Wyci\u0105gamy dane stacji z archiwum za pomoc\u0105 funkcji extract_station_from_tar         df = extract_station_from_tar(tar_path, station)                  # Je\u015bli dane zosta\u0142y pomy\u015blnie wczytane (nie s\u0105 None)         if df is not None:             # Budujemy \u015bcie\u017ck\u0119 do zapisu pliku CSV z danymi danej stacji i roku             output_path = os.path.join(OUTPUT_DIR, f\"{station}_{year}.csv\")             # Zapisujemy DataFrame do pliku CSV bez indeksu             df.to_csv(output_path, index=False)             print(f\"Saved {station} data for {year}\")  print(\"Extraction complete!\")  <pre>Processing 1929...\nStation 16741099999 not found in Data\\1929.tar.gz\nProcessing 1930...\nStation 16741099999 not found in Data\\1930.tar.gz\nProcessing 1931...\nStation 16741099999 not found in Data\\1931.tar.gz\nProcessing 1932...\nStation 16741099999 not found in Data\\1932.tar.gz\nProcessing 1933...\nStation 16741099999 not found in Data\\1933.tar.gz\nProcessing 1934...\nStation 16741099999 not found in Data\\1934.tar.gz\nProcessing 1935...\nStation 16741099999 not found in Data\\1935.tar.gz\nProcessing 1936...\nStation 16741099999 not found in Data\\1936.tar.gz\nProcessing 1937...\nStation 16741099999 not found in Data\\1937.tar.gz\nProcessing 1938...\nStation 16741099999 not found in Data\\1938.tar.gz\nProcessing 1939...\nStation 16741099999 not found in Data\\1939.tar.gz\nProcessing 1940...\nStation 16741099999 not found in Data\\1940.tar.gz\nProcessing 1941...\nStation 16741099999 not found in Data\\1941.tar.gz\nProcessing 1942...\nStation 16741099999 not found in Data\\1942.tar.gz\nProcessing 1943...\nStation 16741099999 not found in Data\\1943.tar.gz\nProcessing 1944...\nStation 16741099999 not found in Data\\1944.tar.gz\nProcessing 1945...\nStation 16741099999 not found in Data\\1945.tar.gz\nProcessing 1946...\nStation 16741099999 not found in Data\\1946.tar.gz\nProcessing 1947...\nStation 16741099999 not found in Data\\1947.tar.gz\nProcessing 1948...\nStation 16741099999 not found in Data\\1948.tar.gz\nProcessing 1949...\nStation 16741099999 not found in Data\\1949.tar.gz\nProcessing 1950...\nStation 16741099999 not found in Data\\1950.tar.gz\nProcessing 1951...\nStation 16741099999 not found in Data\\1951.tar.gz\nProcessing 1952...\nStation 16741099999 not found in Data\\1952.tar.gz\nProcessing 1953...\nStation 16741099999 not found in Data\\1953.tar.gz\nProcessing 1954...\nStation 16741099999 not found in Data\\1954.tar.gz\nProcessing 1955...\nStation 16741099999 not found in Data\\1955.tar.gz\nProcessing 1956...\nStation 16741099999 not found in Data\\1956.tar.gz\nProcessing 1957...\nStation 16741099999 not found in Data\\1957.tar.gz\nProcessing 1958...\nStation 16741099999 not found in Data\\1958.tar.gz\nProcessing 1959...\nStation 16741099999 not found in Data\\1959.tar.gz\nProcessing 1960...\nStation 16741099999 not found in Data\\1960.tar.gz\nProcessing 1961...\nStation 16741099999 not found in Data\\1961.tar.gz\nProcessing 1962...\nStation 16741099999 not found in Data\\1962.tar.gz\nProcessing 1963...\nStation 16741099999 not found in Data\\1963.tar.gz\nProcessing 1964...\nStation 16741099999 not found in Data\\1964.tar.gz\nProcessing 1965...\nStation 16741099999 not found in Data\\1965.tar.gz\nProcessing 1966...\nStation 16741099999 not found in Data\\1966.tar.gz\nProcessing 1967...\nStation 16741099999 not found in Data\\1967.tar.gz\nProcessing 1968...\nStation 16741099999 not found in Data\\1968.tar.gz\nProcessing 1969...\nStation 16741099999 not found in Data\\1969.tar.gz\nProcessing 1970...\nStation 16741099999 not found in Data\\1970.tar.gz\nProcessing 1971...\nStation 16741099999 not found in Data\\1971.tar.gz\nProcessing 1972...\nStation 16741099999 not found in Data\\1972.tar.gz\nProcessing 1973...\nStation 16741099999 not found in Data\\1973.tar.gz\nProcessing 1974...\nStation 16741099999 not found in Data\\1974.tar.gz\nProcessing 1975...\nStation 16741099999 not found in Data\\1975.tar.gz\nProcessing 1976...\nStation 16741099999 not found in Data\\1976.tar.gz\nProcessing 1977...\nStation 16741099999 not found in Data\\1977.tar.gz\nProcessing 1978...\nStation 16741099999 not found in Data\\1978.tar.gz\nProcessing 1979...\nStation 16741099999 not found in Data\\1979.tar.gz\nProcessing 1980...\nStation 16741099999 not found in Data\\1980.tar.gz\nProcessing 1981...\nStation 16741099999 not found in Data\\1981.tar.gz\nProcessing 1982...\nStation 16741099999 not found in Data\\1982.tar.gz\nProcessing 1983...\nStation 16741099999 not found in Data\\1983.tar.gz\nProcessing 1984...\nStation 16741099999 not found in Data\\1984.tar.gz\nProcessing 1985...\nStation 16741099999 not found in Data\\1985.tar.gz\nProcessing 1986...\nStation 16741099999 not found in Data\\1986.tar.gz\nProcessing 1987...\nStation 16741099999 not found in Data\\1987.tar.gz\nProcessing 1988...\nStation 16741099999 not found in Data\\1988.tar.gz\nProcessing 1989...\nStation 16741099999 not found in Data\\1989.tar.gz\nProcessing 1990...\nStation 16741099999 not found in Data\\1990.tar.gz\nProcessing 1991...\nStation 16741099999 not found in Data\\1991.tar.gz\nProcessing 1992...\nStation 16741099999 not found in Data\\1992.tar.gz\nProcessing 1993...\nStation 16741099999 not found in Data\\1993.tar.gz\nProcessing 1994...\nStation 16741099999 not found in Data\\1994.tar.gz\nProcessing 1995...\nStation 16741099999 not found in Data\\1995.tar.gz\nProcessing 1996...\nStation 16741099999 not found in Data\\1996.tar.gz\nProcessing 1997...\nStation 16741099999 not found in Data\\1997.tar.gz\nProcessing 1998...\nStation 16741099999 not found in Data\\1998.tar.gz\nProcessing 1999...\nStation 16741099999 not found in Data\\1999.tar.gz\nProcessing 2000...\nStation 16741099999 not found in Data\\2000.tar.gz\nProcessing 2001...\nStation 16741099999 not found in Data\\2001.tar.gz\nProcessing 2002...\nStation 16741099999 not found in Data\\2002.tar.gz\nProcessing 2003...\nStation 16741099999 not found in Data\\2003.tar.gz\nProcessing 2004...\nStation 16741099999 not found in Data\\2004.tar.gz\nProcessing 2005...\nStation 16741099999 not found in Data\\2005.tar.gz\nProcessing 2006...\nStation 16741099999 not found in Data\\2006.tar.gz\nProcessing 2007...\nStation 16741099999 not found in Data\\2007.tar.gz\nProcessing 2008...\nStation 16741099999 not found in Data\\2008.tar.gz\nProcessing 2009...\nSaved 16741099999 data for 2009\nProcessing 2010...\nStation 16741099999 not found in Data\\2010.tar.gz\nProcessing 2011...\nStation 16741099999 not found in Data\\2011.tar.gz\nProcessing 2012...\nStation 16741099999 not found in Data\\2012.tar.gz\nProcessing 2013...\nStation 16741099999 not found in Data\\2013.tar.gz\nProcessing 2014...\nSaved 16741099999 data for 2014\nProcessing 2015...\nSaved 16741099999 data for 2015\nProcessing 2016...\nSaved 16741099999 data for 2016\nProcessing 2017...\nSaved 16741099999 data for 2017\nProcessing 2018...\nSaved 16741099999 data for 2018\nProcessing 2019...\nSaved 16741099999 data for 2019\nProcessing 2020...\nSaved 16741099999 data for 2020\nProcessing 2021...\nSaved 16741099999 data for 2021\nProcessing 2022...\nSaved 16741099999 data for 2022\nProcessing 2023...\nSaved 16741099999 data for 2023\nExtraction complete!\n</pre>"},{"location":"notebooks/Data_Extraction/#proces-zmiany-nazw-plikow-danych-pogodowych","title":"Proces zmiany nazw plik\u00f3w danych pogodowych\u00b6","text":"<p>W celu lepszego zarz\u0105dzania i identyfikacji danych klimatycznych, kt\u00f3re pierwotnie by\u0142y oznaczone za pomoc\u0105 identyfikator\u00f3w stacji i lat, przeprowadzono proces automatycznej zmiany nazw plik\u00f3w na bardziej czytelne.</p>"},{"location":"notebooks/Data_Extraction/#przebieg-procesu","title":"Przebieg procesu\u00b6","text":"<ol> <li><p>Przygotowano mapowanie unikalnych identyfikator\u00f3w stacji pomiarowych na odpowiadaj\u0105ce im nazwy miast, co pozwala na \u0142atwe powi\u0105zanie danych z konkretnymi lokalizacjami.</p> </li> <li><p>Nast\u0119pnie dokonano przegl\u0105du wszystkich plik\u00f3w znajduj\u0105cych si\u0119 w wyznaczonym katalogu, kt\u00f3re reprezentuj\u0105 dane poszczeg\u00f3lnych stacji i lat.</p> </li> <li><p>Ka\u017cdy plik zosta\u0142 zweryfikowany pod k\u0105tem zgodno\u015bci z ustalonym formatem nazwy zawieraj\u0105cym identyfikator stacji i rok.</p> </li> <li><p>Dla plik\u00f3w spe\u0142niaj\u0105cych ten warunek, na podstawie mapowania identyfikator\u00f3w na nazwy miast, zmieniono nazwy plik\u00f3w tak, aby zawiera\u0142y nazw\u0119 miasta zamiast identyfikatora.</p> </li> <li><p>W przypadku plik\u00f3w, dla kt\u00f3rych brak by\u0142o mapowania, pozostawiono oryginalne nazwy i odnotowano t\u0119 sytuacj\u0119.</p> </li> <li><p>Ostatecznie, dzi\u0119ki temu procesowi, uzyskano uporz\u0105dkowany zestaw plik\u00f3w z nazwami odzwierciedlaj\u0105cymi lokalizacj\u0119 oraz rok, co u\u0142atwia dalsz\u0105 analiz\u0119 i prac\u0119 z danymi.</p> </li> </ol>"},{"location":"notebooks/Data_Extraction/#podsumowanie","title":"Podsumowanie\u00b6","text":"<p>Automatyczna zmiana nazw plik\u00f3w na czytelne i intuicyjne formaty znacznie usprawnia organizacj\u0119 danych oraz u\u0142atwia identyfikacj\u0119 i selekcj\u0119 informacji w dalszych etapach projektu analizy zmian klimatycznych. etne lokalizacje pomiarowe.</p>"},{"location":"notebooks/EDA/","title":"\ud83d\udcca EDA","text":"In\u00a0[1]: Copied! <pre>import os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nimport pickle\n</pre> import os import pandas as pd import matplotlib.pyplot as plt import numpy as np import seaborn as sns import pickle In\u00a0[2]: Copied! <pre>folder_path = '../../data/scalone_dane'\n</pre> folder_path = '../../data/scalone_dane' In\u00a0[3]: Copied! <pre>city_list = []\n</pre> city_list = [] In\u00a0[4]: Copied! <pre>cities = {}\n</pre> cities = {} In\u00a0[5]: Copied! <pre>for filename in os.listdir(folder_path):\n    if filename.endswith(\".csv\"):\n        # Usuni\u0119cie z nazwy pliku ostatnich 12 znak\u00f3w, aby pozosta\u0142a tylko nazwa miasta\n        # (np. \"Warszawa_2020.csv\" -&gt; \"Warszawa\")\n        miasto = filename[:-12]\n\n        # Dodanie nazwy miasta do listy miast\n        city_list.append(miasto)\n\n        # Utworzenie pe\u0142nej \u015bcie\u017cki do pliku CSV\n        file_path = os.path.join(folder_path, filename)\n\n        # Wczytanie danych z pliku CSV do DataFrame\n        df = pd.read_csv(file_path)\n\n        # Przechowanie DataFrame w s\u0142owniku pod kluczem nazwy miasta\n        cities[miasto] = df\n</pre> for filename in os.listdir(folder_path):     if filename.endswith(\".csv\"):         # Usuni\u0119cie z nazwy pliku ostatnich 12 znak\u00f3w, aby pozosta\u0142a tylko nazwa miasta         # (np. \"Warszawa_2020.csv\" -&gt; \"Warszawa\")         miasto = filename[:-12]          # Dodanie nazwy miasta do listy miast         city_list.append(miasto)          # Utworzenie pe\u0142nej \u015bcie\u017cki do pliku CSV         file_path = os.path.join(folder_path, filename)          # Wczytanie danych z pliku CSV do DataFrame         df = pd.read_csv(file_path)          # Przechowanie DataFrame w s\u0142owniku pod kluczem nazwy miasta         cities[miasto] = df  In\u00a0[6]: Copied! <pre>pd.set_option('display.max_columns', None)\n</pre> pd.set_option('display.max_columns', None) In\u00a0[7]: Copied! <pre>cities['Wiede\u0144'].head(5)\n</pre> cities['Wiede\u0144'].head(5) Out[7]: STATION DATE LATITUDE LONGITUDE ELEVATION NAME TEMP TEMP_ATTRIBUTES DEWP DEWP_ATTRIBUTES SLP SLP_ATTRIBUTES STP STP_ATTRIBUTES VISIB VISIB_ATTRIBUTES WDSP WDSP_ATTRIBUTES MXSPD GUST MAX MAX_ATTRIBUTES MIN MIN_ATTRIBUTES PRCP PRCP_ATTRIBUTES SNDP FRSHTT Year 0 11035099999 1952-01-01 48.25 16.366667 200.0 WIEN HOHE WARTE, AU 38.0 4 34.0 4 1012.8 4 999.9 0 3.6 4 3.7 4 15.0 999.9 45.0 34.0 * 0.08 E 999.9 10000 1952 1 11035099999 1952-01-05 48.25 16.366667 200.0 WIEN HOHE WARTE, AU 35.7 4 27.2 4 1021.0 4 999.9 0 8.2 4 12.7 4 22.9 999.9 41.0 34.0 0.04 F 999.9 1000 1952 2 11035099999 1952-01-06 48.25 16.366667 200.0 WIEN HOHE WARTE, AU 33.0 4 27.0 4 1033.2 4 999.9 0 6.1 4 9.0 4 14.0 999.9 36.0 * 32.0 * 99.99 999.9 1000 1952 3 11035099999 1952-01-09 48.25 16.366667 200.0 WIEN HOHE WARTE, AU 33.8 4 27.8 4 1022.5 4 999.9 0 3.2 4 1.0 4 1.9 999.9 41.0 * 30.0 * 0.00 I 999.9 100000 1952 4 11035099999 1952-01-11 48.25 16.366667 200.0 WIEN HOHE WARTE, AU 42.0 4 33.8 4 992.5 4 999.9 0 9.3 4 4.0 4 8.9 999.9 48.0 * 34.0 0.02 E 999.9 10000 1952 In\u00a0[8]: Copied! <pre># Konwersja daty na typ datetime\nfor city in city_list:\n    cities[city]['DATE'] = pd.to_datetime(cities[city]['DATE'], errors='coerce')\n</pre> # Konwersja daty na typ datetime for city in city_list:     cities[city]['DATE'] = pd.to_datetime(cities[city]['DATE'], errors='coerce') In\u00a0[9]: Copied! <pre># Sprawdzenie typ\u00f3w danych\ncities['Warszawa'].dtypes\n</pre> # Sprawdzenie typ\u00f3w danych cities['Warszawa'].dtypes Out[9]: <pre>STATION                      int64\nDATE                datetime64[ns]\nLATITUDE                   float64\nLONGITUDE                  float64\nELEVATION                  float64\nNAME                        object\nTEMP                       float64\nTEMP_ATTRIBUTES              int64\nDEWP                       float64\nDEWP_ATTRIBUTES              int64\nSLP                        float64\nSLP_ATTRIBUTES               int64\nSTP                        float64\nSTP_ATTRIBUTES               int64\nVISIB                      float64\nVISIB_ATTRIBUTES             int64\nWDSP                       float64\nWDSP_ATTRIBUTES              int64\nMXSPD                      float64\nGUST                       float64\nMAX                        float64\nMAX_ATTRIBUTES              object\nMIN                        float64\nMIN_ATTRIBUTES              object\nPRCP                       float64\nPRCP_ATTRIBUTES             object\nSNDP                       float64\nFRSHTT                       int64\nYear                         int64\ndtype: object</pre> In\u00a0[10]: Copied! <pre>def replace_missing_values(cities, city_list):\n    \"\"\"\n    Zast\u0119puje warto\u015bci reprezentuj\u0105ce brakuj\u0105ce dane odpowiednimi warto\u015bciami NaN lub zerem.\n    \n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame z danymi pogodowymi.\n    city_list : list\n        Lista nazw miast do przetworzenia.\n    \n    Zwraca:\n    --------\n    dict\n        Zaktualizowany s\u0142ownik cities z poprawionymi warto\u015bciami brakuj\u0105cymi.\n    \"\"\"\n    # Mapa warto\u015bci brakuj\u0105cych \u2014 warto\u015bci kt\u00f3re maj\u0105 zosta\u0107 zast\u0105pione NaN\n    missing_map = {\n        'TEMP': 9999.9,\n        'DEWP': 9999.9,\n        'MAX': 9999.9,\n        'MIN': 9999.9,\n        'SLP': 9999.9,\n        'STP': 9999.9,\n        'VISIB': 999.9,\n        'WDSP': 999.9,\n        'MXSPD': 999.9,\n        'GUST': 999.9\n    }\n    \n    for city in city_list:\n        # Tworzymy kopi\u0119 DataFrame dla miasta, aby nie modyfikowa\u0107 orygina\u0142u bezpo\u015brednio\n        df = cities[city].copy()\n        \n        # Zamieniamy standardowe warto\u015bci brakuj\u0105ce na NaN\n        for col, missing_val in missing_map.items():\n            if col in df.columns:\n                df[col] = df[col].replace(missing_val, np.nan)\n        \n        # Dla kolumn PRCP i SNDP brakuj\u0105ce warto\u015bci zamieniamy na 0.0\n        if 'PRCP' in df.columns:\n            df['PRCP'] = df['PRCP'].replace(99.99, 0.0)\n        if 'SNDP' in df.columns:\n            df['SNDP'] = df['SNDP'].replace(999.9, 0.0)\n        \n        # Aktualizujemy s\u0142ownik cities nowymi danymi z poprawionymi warto\u015bciami brakuj\u0105cymi\n        cities[city] = df\n\n    return cities\n</pre> def replace_missing_values(cities, city_list):     \"\"\"     Zast\u0119puje warto\u015bci reprezentuj\u0105ce brakuj\u0105ce dane odpowiednimi warto\u015bciami NaN lub zerem.          Parametry:     ----------     cities : dict         S\u0142ownik, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame z danymi pogodowymi.     city_list : list         Lista nazw miast do przetworzenia.          Zwraca:     --------     dict         Zaktualizowany s\u0142ownik cities z poprawionymi warto\u015bciami brakuj\u0105cymi.     \"\"\"     # Mapa warto\u015bci brakuj\u0105cych \u2014 warto\u015bci kt\u00f3re maj\u0105 zosta\u0107 zast\u0105pione NaN     missing_map = {         'TEMP': 9999.9,         'DEWP': 9999.9,         'MAX': 9999.9,         'MIN': 9999.9,         'SLP': 9999.9,         'STP': 9999.9,         'VISIB': 999.9,         'WDSP': 999.9,         'MXSPD': 999.9,         'GUST': 999.9     }          for city in city_list:         # Tworzymy kopi\u0119 DataFrame dla miasta, aby nie modyfikowa\u0107 orygina\u0142u bezpo\u015brednio         df = cities[city].copy()                  # Zamieniamy standardowe warto\u015bci brakuj\u0105ce na NaN         for col, missing_val in missing_map.items():             if col in df.columns:                 df[col] = df[col].replace(missing_val, np.nan)                  # Dla kolumn PRCP i SNDP brakuj\u0105ce warto\u015bci zamieniamy na 0.0         if 'PRCP' in df.columns:             df['PRCP'] = df['PRCP'].replace(99.99, 0.0)         if 'SNDP' in df.columns:             df['SNDP'] = df['SNDP'].replace(999.9, 0.0)                  # Aktualizujemy s\u0142ownik cities nowymi danymi z poprawionymi warto\u015bciami brakuj\u0105cymi         cities[city] = df      return cities  In\u00a0[11]: Copied! <pre># Zamian warto\u015bci brakuj\u0105cych\ncities = replace_missing_values(cities, city_list)\n</pre> # Zamian warto\u015bci brakuj\u0105cych cities = replace_missing_values(cities, city_list) In\u00a0[12]: Copied! <pre>def summarize_nans(cities, city_list):\n    \"\"\"\n    Tworzy podsumowanie liczby warto\u015bci brakuj\u0105cych (NaN) dla ka\u017cdej kolumny w danych poszczeg\u00f3lnych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi jako warto\u015bciami.\n    city_list : list\n        Lista nazw miast do uwzgl\u0119dnienia w podsumowaniu.\n\n    Zwraca:\n    --------\n    pd.DataFrame\n        DataFrame, w kt\u00f3rym wiersze to nazwy kolumn, a kolumny to nazwy miast.\n        Kom\u00f3rki zawieraj\u0105 liczb\u0119 brakuj\u0105cych warto\u015bci (NaN) w danej kolumnie dla danego miasta.\n        Pokazane s\u0105 tylko kolumny z co najmniej jedn\u0105 warto\u015bci\u0105 NaN; pozosta\u0142e maj\u0105 zero.\n    \"\"\"\n    summary = {}\n    \n    for city in city_list:\n        df = cities[city]  # Pobierz dane dla miasta\n        \n        # Oblicz liczb\u0119 NaN w ka\u017cdej kolumnie\n        nan_counts = df.isna().sum()\n        \n        # Zapisz tylko kolumny, gdzie wyst\u0119puj\u0105 warto\u015bci NaN (liczba &gt; 0)\n        summary[city] = nan_counts[nan_counts &gt; 0]\n    \n    # Utw\u00f3rz DataFrame z podsumowaniem, wype\u0142nij brakuj\u0105ce warto\u015bci zerami i skonwertuj na int\n    summary_df = pd.DataFrame(summary).fillna(0).astype(int)\n    \n    return summary_df\n</pre> def summarize_nans(cities, city_list):     \"\"\"     Tworzy podsumowanie liczby warto\u015bci brakuj\u0105cych (NaN) dla ka\u017cdej kolumny w danych poszczeg\u00f3lnych miast.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi jako warto\u015bciami.     city_list : list         Lista nazw miast do uwzgl\u0119dnienia w podsumowaniu.      Zwraca:     --------     pd.DataFrame         DataFrame, w kt\u00f3rym wiersze to nazwy kolumn, a kolumny to nazwy miast.         Kom\u00f3rki zawieraj\u0105 liczb\u0119 brakuj\u0105cych warto\u015bci (NaN) w danej kolumnie dla danego miasta.         Pokazane s\u0105 tylko kolumny z co najmniej jedn\u0105 warto\u015bci\u0105 NaN; pozosta\u0142e maj\u0105 zero.     \"\"\"     summary = {}          for city in city_list:         df = cities[city]  # Pobierz dane dla miasta                  # Oblicz liczb\u0119 NaN w ka\u017cdej kolumnie         nan_counts = df.isna().sum()                  # Zapisz tylko kolumny, gdzie wyst\u0119puj\u0105 warto\u015bci NaN (liczba &gt; 0)         summary[city] = nan_counts[nan_counts &gt; 0]          # Utw\u00f3rz DataFrame z podsumowaniem, wype\u0142nij brakuj\u0105ce warto\u015bci zerami i skonwertuj na int     summary_df = pd.DataFrame(summary).fillna(0).astype(int)          return summary_df  In\u00a0[13]: Copied! <pre># Oblicznie warto\u015bci brakuj\u0105cych\nsummary_nan = summarize_nans(cities, city_list)\n</pre> # Oblicznie warto\u015bci brakuj\u0105cych summary_nan = summarize_nans(cities, city_list) In\u00a0[14]: Copied! <pre>summary_nan\n</pre> summary_nan Out[14]: Ateny Berlin Bruksela Budapeszt Lisbona Londyn Madryd Moskwa Pary\u017c Praga Warszawa Wiede\u0144 DEWP 0 4 237 1 21 22 0 517 1169 1442 46 26 GUST 4998 19675 14711 18267 10586 11476 11698 23201 10240 18265 19216 20064 MAX 0 9 1 4 0 0 4 26 0 17 11 9 MIN 0 8 1 0 0 0 0 25 0 14 11 16 MXSPD 0 6 5 2 44 26 147 404 25 64 41 33 SLP 7295 8301 13928 0 360 8 14349 1865 24 12803 14037 28 VISIB 189 0 136 1640 4313 2686 592 3847 372 243 261 39 WDSP 0 0 0 0 37 0 0 192 23 23 22 19 In\u00a0[15]: Copied! <pre>def convert_units(cities, city_list):\n    \"\"\"\n    Konwertuje jednostki miar w danych meteorologicznych dla podanych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik, gdzie kluczami s\u0105 nazwy miast, a warto\u015bciami pandas DataFrame z danymi pogodowymi.\n    city_list : list\n        Lista nazw miast, dla kt\u00f3rych maj\u0105 zosta\u0107 dokonane konwersje jednostek.\n\n    Dzia\u0142anie:\n    ----------\n    - Temperatura (\u00b0F) konwertowana jest na stopnie Celsjusza (\u00b0C).\n    - Widoczno\u015b\u0107 (mile) konwertowana jest na kilometry (km).\n    - Pr\u0119dko\u015bci wiatru (w\u0119z\u0142y) konwertowane s\u0105 na km/h.\n    - Opady i pokrywa \u015bnie\u017cna (cale) konwertowane s\u0105 na milimetry (mm).\n\n    Zwraca:\n    --------\n    dict\n        Zaktualizowany s\u0142ownik `cities` z przeliczonymi jednostkami.\n    \"\"\"\n    for city in city_list:\n        df = cities[city].copy()\n\n        # Konwersje temperatury: \u00b0F -&gt; \u00b0C\n        for col in ['TEMP', 'DEWP', 'MAX', 'MIN']:\n            if col in df.columns:\n                df[col] = (df[col] - 32) * 5.0 / 9.0\n\n        # Widoczno\u015b\u0107: mile -&gt; km\n        if 'VISIB' in df.columns:\n            df['VISIB'] = df['VISIB'] * 1.60934\n\n        # Pr\u0119dko\u015b\u0107 wiatru: w\u0119z\u0142y -&gt; km/h\n        for col in ['WDSP', 'MXSPD', 'GUST']:\n            if col in df.columns:\n                df[col] = df[col] * 1.852\n\n        # Opady i pokrywa \u015bnie\u017cna: cale -&gt; mm\n        for col in ['PRCP', 'SNDP']:\n            if col in df.columns:\n                df[col] = df[col] * 25.4\n\n        # Zapisz zaktualizowany DataFrame z powrotem do s\u0142ownika\n        cities[city] = df\n\n    return cities\n</pre> def convert_units(cities, city_list):     \"\"\"     Konwertuje jednostki miar w danych meteorologicznych dla podanych miast.      Parametry:     ----------     cities : dict         S\u0142ownik, gdzie kluczami s\u0105 nazwy miast, a warto\u015bciami pandas DataFrame z danymi pogodowymi.     city_list : list         Lista nazw miast, dla kt\u00f3rych maj\u0105 zosta\u0107 dokonane konwersje jednostek.      Dzia\u0142anie:     ----------     - Temperatura (\u00b0F) konwertowana jest na stopnie Celsjusza (\u00b0C).     - Widoczno\u015b\u0107 (mile) konwertowana jest na kilometry (km).     - Pr\u0119dko\u015bci wiatru (w\u0119z\u0142y) konwertowane s\u0105 na km/h.     - Opady i pokrywa \u015bnie\u017cna (cale) konwertowane s\u0105 na milimetry (mm).      Zwraca:     --------     dict         Zaktualizowany s\u0142ownik `cities` z przeliczonymi jednostkami.     \"\"\"     for city in city_list:         df = cities[city].copy()          # Konwersje temperatury: \u00b0F -&gt; \u00b0C         for col in ['TEMP', 'DEWP', 'MAX', 'MIN']:             if col in df.columns:                 df[col] = (df[col] - 32) * 5.0 / 9.0          # Widoczno\u015b\u0107: mile -&gt; km         if 'VISIB' in df.columns:             df['VISIB'] = df['VISIB'] * 1.60934          # Pr\u0119dko\u015b\u0107 wiatru: w\u0119z\u0142y -&gt; km/h         for col in ['WDSP', 'MXSPD', 'GUST']:             if col in df.columns:                 df[col] = df[col] * 1.852          # Opady i pokrywa \u015bnie\u017cna: cale -&gt; mm         for col in ['PRCP', 'SNDP']:             if col in df.columns:                 df[col] = df[col] * 25.4          # Zapisz zaktualizowany DataFrame z powrotem do s\u0142ownika         cities[city] = df      return cities  In\u00a0[16]: Copied! <pre># Konwersja jednostek\ncities = convert_units(cities, city_list)\n</pre> # Konwersja jednostek cities = convert_units(cities, city_list) In\u00a0[17]: Copied! <pre>def plot_avg_parameter(cities, city_list, parameter, ylabel, title):\n    \"\"\"\n    Tworzy wykres liniowy \u015brednich rocznych warto\u015bci wybranego parametru pogodowego dla podanych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.\n    city_list : list\n        Lista nazw miast, kt\u00f3rych dane maj\u0105 zosta\u0107 przedstawione na wykresie.\n    parameter : str\n        Nazwa kolumny (parametru), dla kt\u00f3rego liczone s\u0105 \u015brednie roczne warto\u015bci.\n    ylabel : str\n        Etykieta osi Y na wykresie.\n    title : str\n        Tytu\u0142 wykresu.\n\n    Dzia\u0142anie:\n    ----------\n    Dla ka\u017cdego miasta wylicza \u015bredni\u0105 roczn\u0105 warto\u015b\u0107 zadanego parametru i rysuje lini\u0119 na wykresie.\n    \"\"\"\n    plt.figure(figsize=(12, 6))\n    # Ustawienie palety kolor\u00f3w na tyle, ile jest miast\n    palette = sns.color_palette(\"tab20\", n_colors=len(city_list))\n\n    for i, city in enumerate(city_list):\n        df = cities[city]\n        # Ekstrakcja roku z kolumny 'DATE'\n        df['Year'] = pd.to_datetime(df['DATE']).dt.year\n        # Grupowanie po roku i wyliczenie \u015bredniej dla parametru\n        yearly_avg = df.groupby('Year')[parameter].mean()\n        \n        # Rysowanie wykresu liniowego \u015brednich rocznych warto\u015bci\n        plt.plot(yearly_avg.index, yearly_avg.values, label=city, color=palette[i])\n    \n    plt.title(title)\n    plt.xlabel('Rok')\n    plt.ylabel(ylabel)\n    plt.legend()\n    plt.grid(True)\n    plt.tight_layout()\n    plt.show()\n</pre> def plot_avg_parameter(cities, city_list, parameter, ylabel, title):     \"\"\"     Tworzy wykres liniowy \u015brednich rocznych warto\u015bci wybranego parametru pogodowego dla podanych miast.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.     city_list : list         Lista nazw miast, kt\u00f3rych dane maj\u0105 zosta\u0107 przedstawione na wykresie.     parameter : str         Nazwa kolumny (parametru), dla kt\u00f3rego liczone s\u0105 \u015brednie roczne warto\u015bci.     ylabel : str         Etykieta osi Y na wykresie.     title : str         Tytu\u0142 wykresu.      Dzia\u0142anie:     ----------     Dla ka\u017cdego miasta wylicza \u015bredni\u0105 roczn\u0105 warto\u015b\u0107 zadanego parametru i rysuje lini\u0119 na wykresie.     \"\"\"     plt.figure(figsize=(12, 6))     # Ustawienie palety kolor\u00f3w na tyle, ile jest miast     palette = sns.color_palette(\"tab20\", n_colors=len(city_list))      for i, city in enumerate(city_list):         df = cities[city]         # Ekstrakcja roku z kolumny 'DATE'         df['Year'] = pd.to_datetime(df['DATE']).dt.year         # Grupowanie po roku i wyliczenie \u015bredniej dla parametru         yearly_avg = df.groupby('Year')[parameter].mean()                  # Rysowanie wykresu liniowego \u015brednich rocznych warto\u015bci         plt.plot(yearly_avg.index, yearly_avg.values, label=city, color=palette[i])          plt.title(title)     plt.xlabel('Rok')     plt.ylabel(ylabel)     plt.legend()     plt.grid(True)     plt.tight_layout()     plt.show()  In\u00a0[18]: Copied! <pre># \u015arednia temperatura (\u00b0C)\nplot_avg_parameter(cities, city_list, 'TEMP', '\u015arednia temperatura (\u00b0C)', '\u015arednia roczna temperatura (\u00b0C)')\n</pre> # \u015arednia temperatura (\u00b0C) plot_avg_parameter(cities, city_list, 'TEMP', '\u015arednia temperatura (\u00b0C)', '\u015arednia roczna temperatura (\u00b0C)') In\u00a0[19]: Copied! <pre># Suma opad\u00f3w (mm)\nplot_avg_parameter(cities, city_list, 'PRCP', '\u015arednia suma opad\u00f3w (mm)', '\u015arednia roczna suma opad\u00f3w (mm)')\n</pre> # Suma opad\u00f3w (mm) plot_avg_parameter(cities, city_list, 'PRCP', '\u015arednia suma opad\u00f3w (mm)', '\u015arednia roczna suma opad\u00f3w (mm)') In\u00a0[20]: Copied! <pre># \u015arednia pr\u0119dko\u015b\u0107 wiatru (km/h)\nplot_avg_parameter(cities, city_list, 'WDSP', '\u015arednia pr\u0119dko\u015b\u0107 wiatru (km/h)', '\u015arednia roczna pr\u0119dko\u015b\u0107 wiatru (km/h)')\n</pre> # \u015arednia pr\u0119dko\u015b\u0107 wiatru (km/h) plot_avg_parameter(cities, city_list, 'WDSP', '\u015arednia pr\u0119dko\u015b\u0107 wiatru (km/h)', '\u015arednia roczna pr\u0119dko\u015b\u0107 wiatru (km/h)') In\u00a0[21]: Copied! <pre>def plot_annual_min_max_temperatures(cities, city_list):\n    \"\"\"\n    Tworzy wykres liniowy pokazuj\u0105cy roczne warto\u015bci minimalnej i maksymalnej temperatury dla wybranych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.\n    city_list : list\n        Lista nazw miast, kt\u00f3rych dane maj\u0105 zosta\u0107 przedstawione na wykresie.\n\n    Dzia\u0142anie:\n    ----------\n    Dla ka\u017cdego miasta oblicza roczn\u0105 minimaln\u0105 i maksymaln\u0105 temperatur\u0119 oraz rysuje je na wykresie,\n    przy czym minimalne temperatury s\u0105 przedstawione lini\u0105 przerywan\u0105, a maksymalne ci\u0105g\u0142\u0105.\n    \"\"\"\n    plt.figure(figsize=(14, 8))\n    \n    # Pobranie palety kolor\u00f3w dostosowanej do liczby miast\n    palette = sns.color_palette(\"tab10\", len(city_list))\n    \n    for i, city in enumerate(city_list):\n        df = cities[city]\n        \n        # Grupowanie danych po roku i wyliczenie rocznej minimalnej i maksymalnej temperatury\n        annual_min = df.groupby('Year')['MIN'].min()\n        annual_max = df.groupby('Year')['MAX'].max()\n        \n        color = palette[i]\n        \n        # Wykres rocznej minimalnej temperatury - linia przerywana\n        plt.plot(annual_min.index, annual_min.values, label=f'{city} MIN', linestyle='--', color=color)\n        # Wykres rocznej maksymalnej temperatury - linia ci\u0105g\u0142a\n        plt.plot(annual_max.index, annual_max.values, label=f'{city} MAX', linestyle='-', color=color)\n    \n    plt.title('Roczna minimalna i maksymalna temperatura (\u00b0C)')\n    plt.xlabel('Rok')\n    plt.ylabel('Temperatura (\u00b0C)')\n    plt.legend(loc='best', fontsize='small', ncol=2)\n    plt.grid(True)\n    plt.show()\n</pre> def plot_annual_min_max_temperatures(cities, city_list):     \"\"\"     Tworzy wykres liniowy pokazuj\u0105cy roczne warto\u015bci minimalnej i maksymalnej temperatury dla wybranych miast.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.     city_list : list         Lista nazw miast, kt\u00f3rych dane maj\u0105 zosta\u0107 przedstawione na wykresie.      Dzia\u0142anie:     ----------     Dla ka\u017cdego miasta oblicza roczn\u0105 minimaln\u0105 i maksymaln\u0105 temperatur\u0119 oraz rysuje je na wykresie,     przy czym minimalne temperatury s\u0105 przedstawione lini\u0105 przerywan\u0105, a maksymalne ci\u0105g\u0142\u0105.     \"\"\"     plt.figure(figsize=(14, 8))          # Pobranie palety kolor\u00f3w dostosowanej do liczby miast     palette = sns.color_palette(\"tab10\", len(city_list))          for i, city in enumerate(city_list):         df = cities[city]                  # Grupowanie danych po roku i wyliczenie rocznej minimalnej i maksymalnej temperatury         annual_min = df.groupby('Year')['MIN'].min()         annual_max = df.groupby('Year')['MAX'].max()                  color = palette[i]                  # Wykres rocznej minimalnej temperatury - linia przerywana         plt.plot(annual_min.index, annual_min.values, label=f'{city} MIN', linestyle='--', color=color)         # Wykres rocznej maksymalnej temperatury - linia ci\u0105g\u0142a         plt.plot(annual_max.index, annual_max.values, label=f'{city} MAX', linestyle='-', color=color)          plt.title('Roczna minimalna i maksymalna temperatura (\u00b0C)')     plt.xlabel('Rok')     plt.ylabel('Temperatura (\u00b0C)')     plt.legend(loc='best', fontsize='small', ncol=2)     plt.grid(True)     plt.show()  In\u00a0[22]: Copied! <pre>plot_annual_min_max_temperatures(cities, city_list)\n</pre> plot_annual_min_max_temperatures(cities, city_list) In\u00a0[23]: Copied! <pre>def decode_frshtt(cities, city_list):\n    \"\"\"\n    Dekoduje zakodowan\u0105 kolumn\u0119 'FRSHTT' zawieraj\u0105c\u0105 informacje o zjawiskach pogodowych \n    na osobne kolumny binarne, wskazuj\u0105ce obecno\u015b\u0107 poszczeg\u00f3lnych zjawisk.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame z danymi pogodowymi.\n    city_list : list\n        Lista miast, kt\u00f3re maj\u0105 zosta\u0107 poddane dekodowaniu.\n\n    Dzia\u0142anie:\n    ----------\n    Dla ka\u017cdej warto\u015bci w kolumnie 'FRSHTT' (6-cyfrowy kod) tworzone s\u0105 osobne kolumny:\n    - Fog (mg\u0142a)\n    - Rain (deszcz)\n    - Snow (\u015bnieg)\n    - Hail (grad)\n    - Thunder (burza)\n    - Tornado (tornado)\n    W ka\u017cdej z nich warto\u015b\u0107 1 oznacza wyst\u0105pienie zjawiska, a 0 jego brak.\n    \"\"\"\n    for city in city_list:\n        df = cities[city].copy()\n\n        # Zamiana kolumny 'FRSHTT' na 6-cyfrowy string z wiod\u0105cymi zerami (np. '000001')\n        frshtt_str = df['FRSHTT'].astype(int).astype(str).str.zfill(6)\n        \n        # Tworzenie nowych kolumn binarnych na podstawie poszczeg\u00f3lnych cyfr kodu\n        df['Fog'] = frshtt_str.str[0].astype(int)\n        df['Rain'] = frshtt_str.str[1].astype(int)\n        df['Snow'] = frshtt_str.str[2].astype(int)\n        df['Hail'] = frshtt_str.str[3].astype(int)\n        df['Thunder'] = frshtt_str.str[4].astype(int)\n        df['Tornado'] = frshtt_str.str[5].astype(int)\n\n        # Aktualizacja s\u0142ownika z danymi o zdekodowanych kolumnach\n        cities[city] = df\n\n    return cities\n</pre> def decode_frshtt(cities, city_list):     \"\"\"     Dekoduje zakodowan\u0105 kolumn\u0119 'FRSHTT' zawieraj\u0105c\u0105 informacje o zjawiskach pogodowych      na osobne kolumny binarne, wskazuj\u0105ce obecno\u015b\u0107 poszczeg\u00f3lnych zjawisk.      Parametry:     ----------     cities : dict         S\u0142ownik, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame z danymi pogodowymi.     city_list : list         Lista miast, kt\u00f3re maj\u0105 zosta\u0107 poddane dekodowaniu.      Dzia\u0142anie:     ----------     Dla ka\u017cdej warto\u015bci w kolumnie 'FRSHTT' (6-cyfrowy kod) tworzone s\u0105 osobne kolumny:     - Fog (mg\u0142a)     - Rain (deszcz)     - Snow (\u015bnieg)     - Hail (grad)     - Thunder (burza)     - Tornado (tornado)     W ka\u017cdej z nich warto\u015b\u0107 1 oznacza wyst\u0105pienie zjawiska, a 0 jego brak.     \"\"\"     for city in city_list:         df = cities[city].copy()          # Zamiana kolumny 'FRSHTT' na 6-cyfrowy string z wiod\u0105cymi zerami (np. '000001')         frshtt_str = df['FRSHTT'].astype(int).astype(str).str.zfill(6)                  # Tworzenie nowych kolumn binarnych na podstawie poszczeg\u00f3lnych cyfr kodu         df['Fog'] = frshtt_str.str[0].astype(int)         df['Rain'] = frshtt_str.str[1].astype(int)         df['Snow'] = frshtt_str.str[2].astype(int)         df['Hail'] = frshtt_str.str[3].astype(int)         df['Thunder'] = frshtt_str.str[4].astype(int)         df['Tornado'] = frshtt_str.str[5].astype(int)          # Aktualizacja s\u0142ownika z danymi o zdekodowanych kolumnach         cities[city] = df      return cities  In\u00a0[24]: Copied! <pre># zdekodowanie zmiennej FRSHTT\ncities = decode_frshtt(cities, city_list)\n</pre> # zdekodowanie zmiennej FRSHTT cities = decode_frshtt(cities, city_list) In\u00a0[25]: Copied! <pre>def plot_annual_event_counts(cities, city_list, weather_events):\n    \"\"\"\n    Tworzy wykresy liniowe pokazuj\u0105ce roczn\u0105 liczb\u0119 dni z wyst\u0105pieniem poszczeg\u00f3lnych zjawisk pogodowych\n    dla wybranych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.\n    city_list : list\n        Lista nazw miast, kt\u00f3rych dane maj\u0105 zosta\u0107 uwzgl\u0119dnione na wykresach.\n    weather_events : list\n        Lista nazw kolumn odpowiadaj\u0105cych poszczeg\u00f3lnym zjawiskom pogodowym (np. 'Fog', 'Rain', 'Snow', ...).\n\n    Dzia\u0142anie:\n    ----------\n    Dla ka\u017cdego zjawiska tworzy osobny wykres przedstawiaj\u0105cy roczn\u0105 sum\u0119 dni,\n    w kt\u00f3rych zjawisko to wyst\u0105pi\u0142o, dla ka\u017cdego miasta z listy.\n    \"\"\"\n    # Przygotowanie palety kolor\u00f3w na liczb\u0119 miast\n    palette = sns.color_palette(\"tab20\", n_colors=len(city_list))\n    \n    for event in weather_events:\n        plt.figure(figsize=(12, 6))\n        \n        for i, city in enumerate(city_list):\n            df = cities[city]\n            \n            # Je\u015bli kolumna 'Year' nie istnieje, tworzymy j\u0105 na podstawie kolumny 'DATE'\n            if 'Year' not in df.columns:\n                df['Year'] = pd.to_datetime(df['DATE']).dt.year\n            \n            # Grupowanie danych po roku i sumowanie liczby dni, w kt\u00f3rych wyst\u0105pi\u0142o dane zjawisko\n            yearly_counts = df.groupby('Year')[event].sum()\n            \n            # Rysowanie linii wykresu dla danego miasta\n            plt.plot(yearly_counts.index, yearly_counts.values, label=city, color=palette[i])\n        \n        plt.title(f'Roczna liczba dni z zjawiskiem: {event}')\n        plt.xlabel('Rok')\n        plt.ylabel('Liczba dni')\n        plt.legend()\n        plt.grid(True)\n        plt.tight_layout()\n        plt.show()\n</pre> def plot_annual_event_counts(cities, city_list, weather_events):     \"\"\"     Tworzy wykresy liniowe pokazuj\u0105ce roczn\u0105 liczb\u0119 dni z wyst\u0105pieniem poszczeg\u00f3lnych zjawisk pogodowych     dla wybranych miast.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.     city_list : list         Lista nazw miast, kt\u00f3rych dane maj\u0105 zosta\u0107 uwzgl\u0119dnione na wykresach.     weather_events : list         Lista nazw kolumn odpowiadaj\u0105cych poszczeg\u00f3lnym zjawiskom pogodowym (np. 'Fog', 'Rain', 'Snow', ...).      Dzia\u0142anie:     ----------     Dla ka\u017cdego zjawiska tworzy osobny wykres przedstawiaj\u0105cy roczn\u0105 sum\u0119 dni,     w kt\u00f3rych zjawisko to wyst\u0105pi\u0142o, dla ka\u017cdego miasta z listy.     \"\"\"     # Przygotowanie palety kolor\u00f3w na liczb\u0119 miast     palette = sns.color_palette(\"tab20\", n_colors=len(city_list))          for event in weather_events:         plt.figure(figsize=(12, 6))                  for i, city in enumerate(city_list):             df = cities[city]                          # Je\u015bli kolumna 'Year' nie istnieje, tworzymy j\u0105 na podstawie kolumny 'DATE'             if 'Year' not in df.columns:                 df['Year'] = pd.to_datetime(df['DATE']).dt.year                          # Grupowanie danych po roku i sumowanie liczby dni, w kt\u00f3rych wyst\u0105pi\u0142o dane zjawisko             yearly_counts = df.groupby('Year')[event].sum()                          # Rysowanie linii wykresu dla danego miasta             plt.plot(yearly_counts.index, yearly_counts.values, label=city, color=palette[i])                  plt.title(f'Roczna liczba dni z zjawiskiem: {event}')         plt.xlabel('Rok')         plt.ylabel('Liczba dni')         plt.legend()         plt.grid(True)         plt.tight_layout()         plt.show()  In\u00a0[26]: Copied! <pre>weather_events = ['Fog', 'Rain', 'Snow', 'Hail', 'Thunder', 'Tornado']\nplot_annual_event_counts(cities, city_list, weather_events)\n</pre> weather_events = ['Fog', 'Rain', 'Snow', 'Hail', 'Thunder', 'Tornado'] plot_annual_event_counts(cities, city_list, weather_events) In\u00a0[27]: Copied! <pre># Zapisanie wspo\u0142rzednych geograficznych do s\u0142ownika\nstations_info = {}\n\nfor city, df in cities.items():\n    lat = df['LATITUDE'].iloc[0]\n    lon = df['LONGITUDE'].iloc[0]\n    stations_info[city] = {'latitude': lat, 'longitude': lon}\n    cities[city] = df.drop(columns=['LATITUDE', 'LONGITUDE'])\n</pre> # Zapisanie wspo\u0142rzednych geograficznych do s\u0142ownika stations_info = {}  for city, df in cities.items():     lat = df['LATITUDE'].iloc[0]     lon = df['LONGITUDE'].iloc[0]     stations_info[city] = {'latitude': lat, 'longitude': lon}     cities[city] = df.drop(columns=['LATITUDE', 'LONGITUDE']) In\u00a0[28]: Copied! <pre># Usuni\u0119cie zb\u0119dnych kolumn\n\ncols_to_drop = ['LATITUDE', 'LONGITUDE', 'STATION', 'ELEVATION', 'NAME', 'FRSHTT', 'SNDP', 'Tornado', 'Fog', \n                'DEWP_ATTRIBUTES', 'SLP_ATTRIBUTES', 'STP_ATTRIBUTES', 'VISIB', 'VISIB_ATTRIBUTES', \n                'WDSP_ATTRIBUTES', 'PRCP_ATTRIBUTES']\n\nfor city, df in cities.items():\n    existing_cols_to_drop = [col for col in cols_to_drop if col in df.columns]\n    cities[city] = df.drop(columns=existing_cols_to_drop)\n</pre> # Usuni\u0119cie zb\u0119dnych kolumn  cols_to_drop = ['LATITUDE', 'LONGITUDE', 'STATION', 'ELEVATION', 'NAME', 'FRSHTT', 'SNDP', 'Tornado', 'Fog',                  'DEWP_ATTRIBUTES', 'SLP_ATTRIBUTES', 'STP_ATTRIBUTES', 'VISIB', 'VISIB_ATTRIBUTES',                  'WDSP_ATTRIBUTES', 'PRCP_ATTRIBUTES']  for city, df in cities.items():     existing_cols_to_drop = [col for col in cols_to_drop if col in df.columns]     cities[city] = df.drop(columns=existing_cols_to_drop) In\u00a0[29]: Copied! <pre>def plot_temp_attr_histograms_per_city(cities, city_list):\n    \"\"\"\n    Rysuje histogramy rozk\u0142adu warto\u015bci w kolumnie 'TEMP_ATTRIBUTES' dla ka\u017cdego miasta.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.\n    city_list : list\n        Lista nazw miast, dla kt\u00f3rych maj\u0105 zosta\u0107 wygenerowane histogramy.\n\n    Dzia\u0142anie:\n    ----------\n    Dla ka\u017cdego miasta tworzy osobny histogram pokazuj\u0105cy rozk\u0142ad liczby pomiar\u00f3w dziennie (warto\u015bci 'TEMP_ATTRIBUTES').\n    Histogramy s\u0105 u\u0142o\u017cone w siatk\u0119 z 3 kolumnami i odpowiedni\u0105 liczb\u0105 wierszy.\n    Puste panele w siatce s\u0105 usuwane, a ka\u017cdy wykres zawiera tytu\u0142, etykiety osi oraz siatk\u0119.\n    \"\"\"\n    n = len(city_list)\n    cols = 3\n    rows = (n + cols - 1) // cols  # Obliczenie liczby wierszy potrzebnych do wy\u015bwietlenia wszystkich miast\n\n    fig, axes = plt.subplots(rows, cols, figsize=(cols * 5, rows * 4), sharex=True, sharey=True)\n    axes = axes.flatten()  # Sp\u0142aszczenie tablicy osi do jednowymiarowej listy\n\n    for i, city in enumerate(city_list):\n        df = cities[city]\n        sns.histplot(\n            df['TEMP_ATTRIBUTES'].dropna().astype(int),  # Usuni\u0119cie brakuj\u0105cych warto\u015bci i konwersja do int\n            bins=range(0, 26),                          # Ustawienie zakresu i liczby bin\u00f3w histogramu\n            kde=False,\n            ax=axes[i],\n            color=sns.color_palette(\"tab20\")[i]         # Ustawienie unikalnego koloru dla miasta\n        )\n        axes[i].set_title(city, fontsize=12)            # Tytu\u0142 wykresu z nazw\u0105 miasta\n        axes[i].set_xlabel(\"Liczba pomiar\u00f3w dziennie\")  # Etykieta osi X\n        axes[i].set_ylabel(\"Liczba dni\")                 # Etykieta osi Y\n        axes[i].set_xticks(range(0, 25, 4))              # Ustawienie co czwartego ticka na osi X\n        axes[i].grid(True)                                # W\u0142\u0105czenie siatki na wykresie\n\n    # Usuni\u0119cie pustych paneli, je\u015bli liczba miast jest mniejsza ni\u017c liczba osi\n    for j in range(len(city_list), len(axes)):\n        fig.delaxes(axes[j])\n\n    fig.suptitle(\"Histogram TEMP_ATTRIBUTES \u2013 liczba pomiar\u00f3w dziennie (na miasto)\", fontsize=16)\n    plt.tight_layout(rect=[0, 0, 1, 0.95])  # Dopasowanie layoutu z pozostawieniem miejsca na tytu\u0142\n    plt.show()\n</pre> def plot_temp_attr_histograms_per_city(cities, city_list):     \"\"\"     Rysuje histogramy rozk\u0142adu warto\u015bci w kolumnie 'TEMP_ATTRIBUTES' dla ka\u017cdego miasta.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi meteorologicznymi.     city_list : list         Lista nazw miast, dla kt\u00f3rych maj\u0105 zosta\u0107 wygenerowane histogramy.      Dzia\u0142anie:     ----------     Dla ka\u017cdego miasta tworzy osobny histogram pokazuj\u0105cy rozk\u0142ad liczby pomiar\u00f3w dziennie (warto\u015bci 'TEMP_ATTRIBUTES').     Histogramy s\u0105 u\u0142o\u017cone w siatk\u0119 z 3 kolumnami i odpowiedni\u0105 liczb\u0105 wierszy.     Puste panele w siatce s\u0105 usuwane, a ka\u017cdy wykres zawiera tytu\u0142, etykiety osi oraz siatk\u0119.     \"\"\"     n = len(city_list)     cols = 3     rows = (n + cols - 1) // cols  # Obliczenie liczby wierszy potrzebnych do wy\u015bwietlenia wszystkich miast      fig, axes = plt.subplots(rows, cols, figsize=(cols * 5, rows * 4), sharex=True, sharey=True)     axes = axes.flatten()  # Sp\u0142aszczenie tablicy osi do jednowymiarowej listy      for i, city in enumerate(city_list):         df = cities[city]         sns.histplot(             df['TEMP_ATTRIBUTES'].dropna().astype(int),  # Usuni\u0119cie brakuj\u0105cych warto\u015bci i konwersja do int             bins=range(0, 26),                          # Ustawienie zakresu i liczby bin\u00f3w histogramu             kde=False,             ax=axes[i],             color=sns.color_palette(\"tab20\")[i]         # Ustawienie unikalnego koloru dla miasta         )         axes[i].set_title(city, fontsize=12)            # Tytu\u0142 wykresu z nazw\u0105 miasta         axes[i].set_xlabel(\"Liczba pomiar\u00f3w dziennie\")  # Etykieta osi X         axes[i].set_ylabel(\"Liczba dni\")                 # Etykieta osi Y         axes[i].set_xticks(range(0, 25, 4))              # Ustawienie co czwartego ticka na osi X         axes[i].grid(True)                                # W\u0142\u0105czenie siatki na wykresie      # Usuni\u0119cie pustych paneli, je\u015bli liczba miast jest mniejsza ni\u017c liczba osi     for j in range(len(city_list), len(axes)):         fig.delaxes(axes[j])      fig.suptitle(\"Histogram TEMP_ATTRIBUTES \u2013 liczba pomiar\u00f3w dziennie (na miasto)\", fontsize=16)     plt.tight_layout(rect=[0, 0, 1, 0.95])  # Dopasowanie layoutu z pozostawieniem miejsca na tytu\u0142     plt.show()  In\u00a0[30]: Copied! <pre>plot_temp_attr_histograms_per_city(cities, city_list)\n</pre> plot_temp_attr_histograms_per_city(cities, city_list) In\u00a0[31]: Copied! <pre>def trim_data_from_1985(cities, city_list):\n    \"\"\"\n    Odcina dane meteorologiczne, zachowuj\u0105c tylko rekordy od 1 stycznia 1985 roku wzwy\u017c.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi.\n    city_list : list\n        Lista miast, dla kt\u00f3rych dane maj\u0105 zosta\u0107 przyci\u0119te.\n\n    Zwraca:\n    --------\n    dict\n        Zaktualizowany s\u0142ownik z przyci\u0119tymi danymi dla wskazanych miast.\n    \"\"\"\n    start_date = pd.to_datetime(\"1985-01-01\")\n\n    for city in city_list:\n        df = cities[city]\n        # Konwersja kolumny 'DATE' na datetime\n        df['DATE'] = pd.to_datetime(df['DATE'])\n        # Filtrowanie danych, pozostawiaj\u0105c tylko wiersze od 1985-01-01 i p\u00f3\u017aniejsze\n        df = df[df['DATE'] &gt;= start_date].copy()\n        # Aktualizacja s\u0142ownika\n        cities[city] = df\n\n    return cities\n</pre> def trim_data_from_1985(cities, city_list):     \"\"\"     Odcina dane meteorologiczne, zachowuj\u0105c tylko rekordy od 1 stycznia 1985 roku wzwy\u017c.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi.     city_list : list         Lista miast, dla kt\u00f3rych dane maj\u0105 zosta\u0107 przyci\u0119te.      Zwraca:     --------     dict         Zaktualizowany s\u0142ownik z przyci\u0119tymi danymi dla wskazanych miast.     \"\"\"     start_date = pd.to_datetime(\"1985-01-01\")      for city in city_list:         df = cities[city]         # Konwersja kolumny 'DATE' na datetime         df['DATE'] = pd.to_datetime(df['DATE'])         # Filtrowanie danych, pozostawiaj\u0105c tylko wiersze od 1985-01-01 i p\u00f3\u017aniejsze         df = df[df['DATE'] &gt;= start_date].copy()         # Aktualizacja s\u0142ownika         cities[city] = df      return cities  In\u00a0[32]: Copied! <pre># Przyci\u0119cie danych\ncities = trim_data_from_1985(cities, city_list)\n</pre> # Przyci\u0119cie danych cities = trim_data_from_1985(cities, city_list) In\u00a0[33]: Copied! <pre># Wizualizacja danych po przyci\u0119ciu\n# \u015arednia temperatura (\u00b0C)\nplot_avg_parameter(cities, city_list, 'TEMP', '\u015arednia temperatura (\u00b0C)', '\u015arednia roczna temperatura (\u00b0C)')\n</pre> # Wizualizacja danych po przyci\u0119ciu # \u015arednia temperatura (\u00b0C) plot_avg_parameter(cities, city_list, 'TEMP', '\u015arednia temperatura (\u00b0C)', '\u015arednia roczna temperatura (\u00b0C)') In\u00a0[34]: Copied! <pre># Maksymalna i minimanlna temperatura\nplot_annual_min_max_temperatures(cities, city_list)\n</pre> # Maksymalna i minimanlna temperatura plot_annual_min_max_temperatures(cities, city_list) In\u00a0[35]: Copied! <pre># Zjawiska pogodowe\nweather_events = ['Rain', 'Snow', 'Hail', 'Thunder']\nplot_annual_event_counts(cities, city_list, weather_events)\n</pre> # Zjawiska pogodowe weather_events = ['Rain', 'Snow', 'Hail', 'Thunder'] plot_annual_event_counts(cities, city_list, weather_events) In\u00a0[36]: Copied! <pre>summary_nan = summarize_nans(cities, city_list)\n</pre> summary_nan = summarize_nans(cities, city_list) In\u00a0[37]: Copied! <pre>summary_nan\n</pre> summary_nan Out[37]: Ateny Berlin Bruksela Budapeszt Lisbona Londyn Madryd Moskwa Pary\u017c Praga Warszawa Wiede\u0144 DEWP 0 0 0 0 21 22 0 1 942 0 1 1 GUST 4998 2877 8274 13886 10343 11476 8366 11835 10013 10294 11369 12442 MAX 0 1 0 0 0 0 1 0 0 0 1 0 MIN 0 1 0 0 0 0 0 0 0 0 0 0 MXSPD 0 0 4 2 44 26 26 284 24 4 4 3 SLP 7295 4309 10886 0 360 8 10540 0 22 8552 10166 1 WDSP 0 0 0 0 37 0 0 145 22 0 0 1 In\u00a0[38]: Copied! <pre>def analyze_min_max_attributes(cities, city_list):\n    \"\"\"\n    Analizuje informacje o sposobie pozyskania warto\u015bci temperatury minimalnej i maksymalnej\n    na podstawie kolumn 'MIN_ATTRIBUTES' i 'MAX_ATTRIBUTES' dla ka\u017cdego miasta.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi pogodowymi.\n    city_list : list\n        Lista nazw miast, kt\u00f3re maj\u0105 zosta\u0107 poddane analizie.\n\n    Zwraca:\n    -------\n    pd.DataFrame\n        Podsumowanie zawieraj\u0105ce:\n        - liczb\u0119 wszystkich rekord\u00f3w MIN/MAX\n        - liczb\u0119 przypadk\u00f3w, gdzie warto\u015b\u0107 by\u0142a wyznaczona ('*')\n        - liczb\u0119 warto\u015bci raportowanych (czyli nie wyznaczonych)\n        - procent warto\u015bci wyznaczonych w stosunku do ca\u0142o\u015bci\n    \"\"\"\n    summary = []\n\n    for city in city_list:\n        df = cities[city].copy()\n\n        # Analiza MIN_ATTRIBUTES\n        total_min = df['MIN_ATTRIBUTES'].notna().sum() + df['MIN_ATTRIBUTES'].isna().sum()  # Wszystkie rekordy (\u0142\u0105cznie z NaN)\n        derived_min = (df['MIN_ATTRIBUTES'] == '*').sum()  # Liczba wyznaczonych warto\u015bci (oznaczonych '*')\n        reported_min = total_min - derived_min  # Liczba warto\u015bci raportowanych (czyli nie wyznaczonych)\n\n        # Analiza MAX_ATTRIBUTES\n        total_max = df['MAX_ATTRIBUTES'].notna().sum() + df['MAX_ATTRIBUTES'].isna().sum()  # Wszystkie rekordy\n        derived_max = (df['MAX_ATTRIBUTES'] == '*').sum()  # Liczba wyznaczonych warto\u015bci\n        reported_max = total_max - derived_max  # Liczba raportowanych warto\u015bci\n\n        # Dodanie wynik\u00f3w do listy jako s\u0142ownik\n        summary.append({\n            'City': city,\n            'Min_Total': total_min,\n            'Min_Derived (*)': derived_min,\n            'Min_Reported': reported_min,\n            'Min_%_Derived': round(100 * derived_min / total_min, 2),\n            'Max_Total': total_max,\n            'Max_Derived (*)': derived_max,\n            'Max_Reported': reported_max,\n            'Max_%_Derived': round(100 * derived_max / total_max, 2),\n        })\n\n    # Zwr\u00f3cenie wynik\u00f3w w postaci DataFrame\n    return pd.DataFrame(summary)\n</pre> def analyze_min_max_attributes(cities, city_list):     \"\"\"     Analizuje informacje o sposobie pozyskania warto\u015bci temperatury minimalnej i maksymalnej     na podstawie kolumn 'MIN_ATTRIBUTES' i 'MAX_ATTRIBUTES' dla ka\u017cdego miasta.      Parametry:     ----------     cities : dict         S\u0142ownik z nazwami miast jako kluczami i odpowiadaj\u0105cymi DataFrame z danymi pogodowymi.     city_list : list         Lista nazw miast, kt\u00f3re maj\u0105 zosta\u0107 poddane analizie.      Zwraca:     -------     pd.DataFrame         Podsumowanie zawieraj\u0105ce:         - liczb\u0119 wszystkich rekord\u00f3w MIN/MAX         - liczb\u0119 przypadk\u00f3w, gdzie warto\u015b\u0107 by\u0142a wyznaczona ('*')         - liczb\u0119 warto\u015bci raportowanych (czyli nie wyznaczonych)         - procent warto\u015bci wyznaczonych w stosunku do ca\u0142o\u015bci     \"\"\"     summary = []      for city in city_list:         df = cities[city].copy()          # Analiza MIN_ATTRIBUTES         total_min = df['MIN_ATTRIBUTES'].notna().sum() + df['MIN_ATTRIBUTES'].isna().sum()  # Wszystkie rekordy (\u0142\u0105cznie z NaN)         derived_min = (df['MIN_ATTRIBUTES'] == '*').sum()  # Liczba wyznaczonych warto\u015bci (oznaczonych '*')         reported_min = total_min - derived_min  # Liczba warto\u015bci raportowanych (czyli nie wyznaczonych)          # Analiza MAX_ATTRIBUTES         total_max = df['MAX_ATTRIBUTES'].notna().sum() + df['MAX_ATTRIBUTES'].isna().sum()  # Wszystkie rekordy         derived_max = (df['MAX_ATTRIBUTES'] == '*').sum()  # Liczba wyznaczonych warto\u015bci         reported_max = total_max - derived_max  # Liczba raportowanych warto\u015bci          # Dodanie wynik\u00f3w do listy jako s\u0142ownik         summary.append({             'City': city,             'Min_Total': total_min,             'Min_Derived (*)': derived_min,             'Min_Reported': reported_min,             'Min_%_Derived': round(100 * derived_min / total_min, 2),             'Max_Total': total_max,             'Max_Derived (*)': derived_max,             'Max_Reported': reported_max,             'Max_%_Derived': round(100 * derived_max / total_max, 2),         })      # Zwr\u00f3cenie wynik\u00f3w w postaci DataFrame     return pd.DataFrame(summary)  In\u00a0[39]: Copied! <pre>summary_df = analyze_min_max_attributes(cities, city_list)\n</pre> summary_df = analyze_min_max_attributes(cities, city_list) In\u00a0[40]: Copied! <pre>summary_df\n</pre> summary_df Out[40]: City Min_Total Min_Derived (*) Min_Reported Min_%_Derived Max_Total Max_Derived (*) Max_Reported Max_%_Derived 0 Ateny 7295 7295 0 100.00 7295 7295 0 100.00 1 Berlin 4370 2980 1390 68.19 4370 2565 1805 58.70 2 Bruksela 14241 7369 6872 51.74 14241 5878 8363 41.28 3 Budapeszt 14236 3189 11047 22.40 14236 2037 12199 14.31 4 Lisbona 13549 4584 8965 33.83 13549 3397 10152 25.07 5 Londyn 12768 4776 7992 37.41 12768 4216 8552 33.02 6 Madryd 14239 5904 8335 41.46 14239 4699 9540 33.00 7 Moskwa 11976 3561 8415 29.73 11976 2459 9517 20.53 8 Pary\u017c 11116 3243 7873 29.17 11116 2106 9010 18.95 9 Praga 14241 5936 8305 41.68 14241 5018 9223 35.24 10 Warszawa 14241 6601 7640 46.35 14241 4655 9586 32.69 11 Wiede\u0144 13775 2863 10912 20.78 13775 1223 12552 8.88 In\u00a0[41]: Copied! <pre># Usuni\u0119cie kolumn ATTRIBUTES\ncolumns_to_drop = ['TEMP_ATTRIBUTES', 'MAX_ATTRIBUTES', 'MIN_ATTRIBUTES']\n\nfor city in cities:\n    cities[city] = cities[city].drop(columns=[col for col in columns_to_drop if col in cities[city].columns])\n</pre> # Usuni\u0119cie kolumn ATTRIBUTES columns_to_drop = ['TEMP_ATTRIBUTES', 'MAX_ATTRIBUTES', 'MIN_ATTRIBUTES']  for city in cities:     cities[city] = cities[city].drop(columns=[col for col in columns_to_drop if col in cities[city].columns]) In\u00a0[42]: Copied! <pre># Zapisanie danych do pliku pickle\nwith open('../../data/climate_data.pkl', 'wb') as f:\n    pickle.dump({'cities': cities, 'stations_info': stations_info}, f)\n</pre> # Zapisanie danych do pliku pickle with open('../../data/climate_data.pkl', 'wb') as f:     pickle.dump({'cities': cities, 'stations_info': stations_info}, f)"},{"location":"notebooks/EDA/#opis-kolumn","title":"Opis kolumn\u00b6","text":"<ul> <li>STATION: unikalny identyfikator stacji meteorologicznej</li> <li>DATE: data obserwacji w formacie YYYY-MM-DD</li> <li>LATITUDE: szeroko\u015b\u0107 geograficzna stacji (w stopniach)</li> <li>LONGITUDE: d\u0142ugo\u015b\u0107 geograficzna stacji (w stopniach)</li> <li>ELEVATION: wysoko\u015b\u0107 nad poziomem morza (m.n.p.m)</li> <li>NAME: pe\u0142na nazwa stacji meteorologicznej</li> <li>TEMP: \u015brednia temperatura dobowa (\u00b0F)</li> <li>TEMP_ATTRIBUTES: liczba pomiar\u00f3w temperatury w ci\u0105gu dnia</li> <li>DEWP: \u015brednia temperatura punktu rosy w ci\u0105gu dnia (\u00b0F)</li> <li>DEWP_ATTRIBUTES: liczba pomiar\u00f3w temperatury punktu rosy w ci\u0105gu dnia</li> <li>SLP: \u015brednie ci\u015bnienie atmosferyczne na poziomie morza w ci\u0105gu dnia (milibary)</li> <li>SLP_ATTRIBUTES: liczba pomiar\u00f3w ci\u015bnienia atmosferycznego na poziomie morza w ci\u0105gu dnia</li> <li>STP: \u015brednie ci\u015bnienie na stacji meteorologicznej w ci\u0105gu dnia (milibary)</li> <li>STP_ATTRIBUTES: liczba pomiar\u00f3w ci\u015bnienie na stacji meteorologicznej w ci\u0105gu dnia</li> <li>VISIB: \u015brednia widoczno\u015b\u0107 w ci\u0105gu dnia (mile)</li> <li>VISIB_ATTRIBUTES: liczba pomiar\u00f3w widoczno\u015bci w ci\u0105gu dnia</li> <li>WDSP: \u015brednia pr\u0119dko\u015b\u0107 wiatru w ci\u0105gu dnia (w\u0119z\u0142y)</li> <li>WDSP_ATTRIBUTES: liczba pomiar\u00f3w pr\u0119dko\u015bci wiatru w ci\u0105gu dnia</li> <li>MXSPD: maksymalna utrzymuj\u0105ca si\u0119 pr\u0119dko\u015b\u0107 wiatru zarejestrowana w ci\u0105gu dnia (w\u0119z\u0142y)</li> <li>GUST: maksymalny poryw wiatru zarejestrowany w ci\u0105gu dnia (w\u0119z\u0142y)</li> <li>MAX: Maksymalna temperatura zarejestrowana w ci\u0105gu dnia, wyra\u017cona w stopniach Fahrenheita \u2014 czas rejestracji maksymalnej temperatury r\u00f3\u017cni si\u0119 w zale\u017cno\u015bci od kraju i regionu, wi\u0119c czasami mo\u017ce to nie by\u0107 najwy\u017csza temperatura dla ca\u0142ej doby kalendarzowej.</li> <li>MAX_ATTRIBUTES: je\u017celi w kolumnie jest '*' to mpomiar dla maksymalnej temperatura zarejestrowanej w ci\u0105gu dnia by\u0142 interpolowany lub oszacowany</li> <li>MIN: Minimalna temperatura zarejestrowana w ci\u0105gu dnia, wyra\u017cona w stopniach Fahrenheita \u2014 czas rejestracji minimalnej temperatury r\u00f3\u017cni si\u0119 w zale\u017cno\u015bci od kraju i regionu, wi\u0119c czasami mo\u017ce to nie by\u0107 najni\u017csza temperatura dla ca\u0142ej doby kalendarzowej.</li> <li>MIN_ATTRIBUTES: je\u017celi w kolumnie jest '*' to pomiar dla minimalnej temperatura zarejestrowanej w ci\u0105gu dnia by\u0142 interpolowany lub oszacowany</li> <li>PRCP: Suma opad\u00f3w (deszcz i/lub roztopiony \u015bnieg) zarejestrowana w ci\u0105gu dnia, wyra\u017cona w calach i setnych cz\u0119\u015bciach cala; zazwyczaj nie ko\u0144czy si\u0119 na obserwacji o p\u00f3\u0142nocy \u2014 mo\u017ce obejmowa\u0107 r\u00f3wnie\u017c p\u00f3\u017aniejsz\u0105 cz\u0119\u015b\u0107 poprzedniego dnia. Warto\u015b\u0107 0.00 oznacza brak mierzalnych opad\u00f3w (wliczaj\u0105c \u015bladowe ilo\u015bci). Warto\u015b\u0107 99.99 oznacza brak danych (Missing).</li> <li>PRCP_ATTRIBUTES: liczba pomiar\u00f3w opad\u00f3w w ci\u0105gu dnia</li> <li>SNDP: G\u0142\u0119boko\u015b\u0107 pokrywy \u015bnie\u017cnej wyra\u017cona w calach z dok\u0142adno\u015bci\u0105 do dziesi\u0105tych cz\u0119\u015bci cala \u2014 podawana jest ostatnia warto\u015b\u0107 z danego dnia, je\u015bli by\u0142a raportowana wi\u0119cej ni\u017c raz. Brak danych oznaczony jest warto\u015bci\u0105 999.9. Wi\u0119kszo\u015b\u0107 stacji nie raportuje warto\u015bci \u201e0\u201d w dni, kiedy na ziemi nie ma \u015bniegu \u2014 dlatego cz\u0119sto pojawia si\u0119 warto\u015b\u0107 999.9 jako oznaczenie braku danych lub braku \u015bniegu.</li> <li>FRSHTT: kod opisuj\u0105cy jakie warunki pogodowe wyst\u0105pi\u0142y w ci\u0105gu dnia.<ul> <li>Mg\u0142a ('F' \u2013 1. cyfra)</li> <li>Deszcz lub m\u017cawka ('R' \u2013 2. cyfra)</li> <li>\u015anieg lub grad\u00f3wka ('S' \u2013 3. cyfra)</li> <li>Grad ('H' \u2013 4. cyfra)</li> <li>Grzmot/wy\u0142adowanie atmosferyczne ('T' \u2013 5. cyfra)</li> <li>Tornado lub lejek powietrzny ('T' \u2013 6. cyfra)</li> </ul> </li> </ul>"},{"location":"notebooks/EDA/#obsuga-i-zamiana-wartosci-brakujacych","title":"Obs\u0142uga i zamiana warto\u015bci brakuj\u0105cych\u00b6","text":"<p>W celu poprawnego przetworzenia danych pogodowych dokonano zamiany warto\u015bci oznaczaj\u0105cych brakuj\u0105ce pomiary na standardowe warto\u015bci <code>NaN</code> lub inne odpowiednie warto\u015bci numeryczne.</p>"},{"location":"notebooks/EDA/#szczegoy-procesu","title":"Szczeg\u00f3\u0142y procesu\u00b6","text":"<ul> <li>W danych meteorologicznych wyst\u0119puj\u0105 specjalne warto\u015bci liczbowe (np. 9999.9, 999.9, 99.99), kt\u00f3re zgodnie z dokumentacj\u0105 danych oznaczaj\u0105 brak pomiaru lub dane niezgodne z pomiarem.</li> <li>Warto\u015bci te zosta\u0142y zast\u0105pione przez <code>NaN</code> w wi\u0119kszo\u015bci kolumn, co pozwala na prawid\u0142owe uwzgl\u0119dnienie brak\u00f3w podczas analizy i oblicze\u0144 statystycznych.</li> </ul>"},{"location":"notebooks/EDA/#wyjatki-dotyczace-opadow-i-pokrywy-snieznej","title":"Wyj\u0105tki dotycz\u0105ce opad\u00f3w i pokrywy \u015bnie\u017cnej\u00b6","text":"<ul> <li>W przypadku kolumn dotycz\u0105cych opad\u00f3w (PRCP) oraz grubo\u015bci pokrywy \u015bnie\u017cnej (SNDP), warto\u015bci oznaczaj\u0105ce brak pomiaru (odpowiednio 99.99 i 999.9) zosta\u0142y zast\u0105pione zerem (<code>0.0</code>).</li> <li>Takie post\u0119powanie jest zgodne z dokumentacj\u0105 danych, poniewa\u017c cz\u0119sto brak danych w tych polach wynika z sytuacji, gdy faktycznie nie wyst\u0105pi\u0142y opady lub \u015bnieg.</li> </ul>"},{"location":"notebooks/EDA/#podsumowanie","title":"Podsumowanie\u00b6","text":"<p>Dzi\u0119ki takiej zamianie warto\u015bci brakuj\u0105cych, dane s\u0105 lepiej przygotowane do dalszej analizy, unikaj\u0105c b\u0142\u0119dnej interpretacji warto\u015bci zast\u0119pczych jako rzeczywistych pomiar\u00f3w.</p>"},{"location":"notebooks/EDA/#podsumowanie-brakujacych-wartosci-nan-w-danych-meteorologicznych","title":"Podsumowanie brakuj\u0105cych warto\u015bci (NaN) w danych meteorologicznych\u00b6","text":"<p>Tabela prezentuje liczb\u0119 warto\u015bci brakuj\u0105cych (NaN) w poszczeg\u00f3lnych kolumnach danych dla wybranych miast. Dane dotycz\u0105 r\u00f3\u017cnych atrybut\u00f3w pogodowych i pokazuj\u0105, jak cz\u0119sto brakowa\u0142y pomiary w ka\u017cdej lokalizacji.</p>"},{"location":"notebooks/EDA/#interpretacja-wynikow","title":"Interpretacja wynik\u00f3w\u00b6","text":"<ul> <li>DEWP (punkt rosy) \u2013 najwi\u0119ksza liczba brak\u00f3w wyst\u0119puje w Pradze (1442) oraz Moskwie (517). Inne miasta maj\u0105 mniejsze lub zerowe ilo\u015bci brak\u00f3w.</li> <li>GUST (porywy wiatru) \u2013 praktycznie wszystkie miasta maj\u0105 bardzo du\u017co brak\u00f3w, np. ponad 20 tysi\u0119cy w Moskwie i Wiedniu. To sugeruje, \u017ce pomiary poryw\u00f3w wiatru by\u0142y cz\u0119sto niedost\u0119pne.</li> <li>MAX i MIN (maksymalna i minimalna temperatura) \u2013 w wi\u0119kszo\u015bci miast liczba brak\u00f3w jest niska, co \u015bwiadczy o stosunkowo pe\u0142nych pomiarach temperatury. Najwi\u0119cej brak\u00f3w jest w Moskwie i Pradze (do 26).</li> <li>MXSPD (maksymalna pr\u0119dko\u015b\u0107 wiatru) \u2013 niewielka liczba brak\u00f3w w wi\u0119kszo\u015bci miast, z wyj\u0105tkiem Moskwy (404) i Madrytu (147).</li> <li>SLP (ci\u015bnienie na poziomie morza) \u2013 sporo brak\u00f3w w takich miastach jak Bruksela (13928), Warszawa (14037) czy Berlin (8301). Niekt\u00f3re miasta, np. Budapeszt, maj\u0105 ich prawie wcale.</li> <li>VISIB (widzialno\u015b\u0107) \u2013 du\u017ca liczba brak\u00f3w w Lizbonie (4313), Moskwie (3847) i Madrycie (592), podczas gdy w Berlinie nie ma brak\u00f3w.</li> <li>WDSP (\u015brednia pr\u0119dko\u015b\u0107 wiatru) \u2013 relatywnie ma\u0142o brak\u00f3w, cho\u0107 pojawiaj\u0105 si\u0119 mniejsze ilo\u015bci w kilku miastach, np. Moskwie (192) czy Lizbonie (37).</li> </ul>"},{"location":"notebooks/EDA/#wnioski","title":"Wnioski\u00b6","text":"<ul> <li>Dane dotycz\u0105ce wiatru, zw\u0142aszcza poryw\u00f3w (GUST), maj\u0105 znacz\u0105ce luki we wszystkich lokalizacjach, co mo\u017ce wp\u0142yn\u0105\u0107 na analizy zwi\u0105zane z wiatrem.</li> <li>Pomiar temperatury jest generalnie dobrze zachowany, co pozwala na wiarygodne analizy tych zmiennych.</li> <li>Niekt\u00f3re zmienne, jak ci\u015bnienie czy widzialno\u015b\u0107, wykazuj\u0105 znaczne braki w okre\u015blonych miastach, co nale\u017cy uwzgl\u0119dni\u0107 przy dalszych analizach.</li> </ul> <p>Takie zestawienie pomaga zidentyfikowa\u0107 obszary, gdzie dane wymagaj\u0105 szczeg\u00f3lnej uwagi lub uzupe\u0142nienia przed przeprowadzeniem szczeg\u00f3\u0142owych analiz.</p>"},{"location":"notebooks/EDA/#konwersja-jednostek-w-danych-meteorologicznych","title":"Konwersja jednostek w danych meteorologicznych\u00b6","text":"<p>W celu ujednolicenia i uproszczenia dalszej analizy, dokonano konwersji jednostek pomiarowych w zbiorze danych klimatycznych.</p>"},{"location":"notebooks/EDA/#szczegoy-konwersji","title":"Szczeg\u00f3\u0142y konwersji\u00b6","text":"<ul> <li><p>Temperatura Warto\u015bci temperatury, pierwotnie podawane w stopniach Fahrenheita (\u00b0F), zosta\u0142y przeliczone na stopnie Celsjusza (\u00b0C) wed\u0142ug wzoru: $$ \u00b0C = (\u00b0F - 32) \\times \\frac{5}{9} $$</p> </li> <li><p>Widoczno\u015b\u0107 Dane o widoczno\u015bci zapisane w milach zosta\u0142y przeliczone na kilometry (km) z u\u017cyciem wsp\u00f3\u0142czynnika: $$ 1\\ \\text{mila} = 1.60934\\ \\text{km} $$</p> </li> <li><p>Pr\u0119dko\u015b\u0107 wiatru Pr\u0119dko\u015bci wiatru, pocz\u0105wszy od \u015bredniej pr\u0119dko\u015bci (WDSP), przez maksymaln\u0105 pr\u0119dko\u015b\u0107 (MXSPD) a\u017c po porywy wiatru (GUST), kt\u00f3re by\u0142y podane w w\u0119z\u0142ach, zosta\u0142y przeliczone na kilometry na godzin\u0119 (km/h) zgodnie z przelicznikiem: $$ 1\\ \\text{w\u0119ze\u0142} = 1.852\\ \\text{km/h} $$</p> </li> <li><p>Opady i pokrywa \u015bnie\u017cna Ilo\u015bci opad\u00f3w (PRCP) oraz grubo\u015b\u0107 pokrywy \u015bnie\u017cnej (SNDP) podawane w calach zosta\u0142y przeliczone na milimetry (mm) z wykorzystaniem wsp\u00f3\u0142czynnika: $$ 1\\ \\text{cal} = 25.4\\ \\text{mm} $$</p> </li> </ul>"},{"location":"notebooks/EDA/#podsumowanie","title":"Podsumowanie\u00b6","text":"<p>Konwersja jednostek umo\u017cliwia por\u00f3wnywanie i analizowanie danych meteorologicznych w standardowych i powszechnie stosowanych jednostkach metrycznych, co znacznie u\u0142atwia interpretacj\u0119 i wizualizacj\u0119 wynik\u00f3w.</p>"},{"location":"notebooks/EDA/#analiza-jakosci-danych-meteorologicznych","title":"Analiza jako\u015bci danych meteorologicznych\u00b6","text":""},{"location":"notebooks/EDA/#srednia-roczna-suma-opadow-mm","title":"\ud83d\udca7 \u015arednia roczna suma opad\u00f3w (mm)\u00b6","text":"<p>Dane o opadach maj\u0105 powa\u017cne problemy z jako\u015bci\u0105 i ci\u0105g\u0142o\u015bci\u0105.</p> <ul> <li>Ci\u0105g\u0142o\u015b\u0107 jest niska, zw\u0142aszcza przed 1980 rokiem, z d\u0142ugimi przerwami w wielu miastach.</li> <li>Ateny wykazuj\u0105 p\u0142ask\u0105 lini\u0119 zerow\u0105 w ostatnich latach, co \u015bwiadczy o brakuj\u0105cych danych.</li> <li>Wyst\u0119puj\u0105 liczne warto\u015bci odstaj\u0105ce, np. skok w Pradze oko\u0142o 2010 r., prawdopodobnie b\u0142\u0105d pomiarowy.</li> <li>Dane s\u0105 bardzo zmienne, typowe dla opad\u00f3w, z warto\u015bciami \u015brednio mi\u0119dzy 1 a 2.5 mm.</li> </ul>"},{"location":"notebooks/EDA/#srednia-roczna-predkosc-wiatru-kmh","title":"\ud83c\udf2c\ufe0f \u015arednia roczna pr\u0119dko\u015b\u0107 wiatru (km/h)\u00b6","text":"<p>Dane o wietrze s\u0105 lepszej jako\u015bci ni\u017c opady, ale nadal zawieraj\u0105 braki i anomalie.</p> <ul> <li>Luki wyst\u0119puj\u0105 g\u0142\u00f3wnie przed 1980 rokiem, np. Londyn ma dane dopiero od oko\u0142o 1980 r.</li> <li>Ekstremalny skok pr\u0119dko\u015bci w Pradze oko\u0142o 1982 r. (&gt;30 km/h) to najprawdopodobniej b\u0142\u0105d.</li> <li>Wiatr jest bardziej stabilny, wi\u0119kszo\u015b\u0107 miast ma \u015brednie 10\u201315 km/h, Moskwa najni\u017csze warto\u015bci poni\u017cej 10/h.</li> </ul>"},{"location":"notebooks/EDA/#srednia-roczna-temperatura-c","title":"\ud83c\udf21\ufe0f \u015arednia roczna temperatura (\u00b0C)\u00b6","text":"<p>Najlepsza jako\u015b\u0107 danych spo\u015br\u00f3d analizowanych zmiennych.</p> <ul> <li>Dane s\u0105 sp\u00f3jne i ci\u0105g\u0142e z kr\u00f3tkimi przerwami (np. Berlin).</li> <li>Londyn i Lizbona maj\u0105 dane dopiero od oko\u0142o 1980 r.</li> <li>Brak warto\u015bci odstaj\u0105cych, wahania klimatyczne s\u0105 \u0142agodne i realistyczne.</li> <li>Miasta po\u0142udniowe (Ateny, Lizbona, Madryt) s\u0105 najcieplejsze (15\u201320\u00b0C), wschodnie i p\u00f3\u0142nocne (Moskwa, Warszawa) najch\u0142odniejsze, pozosta\u0142e plasuj\u0105 \u0119 po\u015brodku.</li> </ul>"},{"location":"notebooks/EDA/#podsumowanie","title":"\ud83d\udca1 Podsumowanie\u00b6","text":"<p>Jako\u015b\u0107 danych jest r\u00f3\u017cna w zale\u017cno\u015bci od zmiennej. Dane temperaturowe s\u0105 kompletne i wiarygodne, natomiast opady i wiatr wymagaj\u0105 ostro\u017cno\u015bci ze wzgl\u0119du na luki i b\u0142\u0119dy. Przy dalszych analizach nale\u017cy uwzgl\u0119dni\u0107 te ograniczenia, szczeg\u00f3lnie przy badaniu trend\u00f3w d\u0142ugoterminowych. \u00f3w d\u0142ugoterminowych.</p>"},{"location":"notebooks/EDA/#analiza-trendow-w-rocznych-temperaturach-ekstremalnych","title":"Analiza Trend\u00f3w w Rocznych Temperaturach Ekstremalnych\u00b6","text":"<p>Wykres ilustruje d\u0142ugoterminowe zmiany w rocznych ekstremach temperaturowych dla 12 miast Europy. Analiza danych wskazuje na z\u0142o\u017cone wzorce zmian klimatycznych, wykraczaj\u0105ce poza prosty wzrost \u015bredniej temperatury.</p>"},{"location":"notebooks/EDA/#gowne-trendy-i-obserwacje","title":"\ud83d\udcc8 G\u0142\u00f3wne Trendy i Obserwacje\u00b6","text":"<ul> <li><p>Asymetryczne ocieplenie: Najbardziej znacz\u0105cym trendem jest wzrost zar\u00f3wno rocznych temperatur maksymalnych, jak i minimalnych, kt\u00f3ry przyspieszy\u0142 od ok. 1980 roku. Kluczow\u0105 obserwacj\u0105 jest fakt, \u017ce ocieplenie zim jest bardziej wyra\u017ane ni\u017c ocieplenie lat. Wida\u0107 to szczeg\u00f3lnie na przyk\u0142adzie Moskwy, gdzie linia temperatur minimalnych (linia przerywana) ro\u015bnie znacznie szybciej ni\u017c linia temperatur maksymalnych. Oznacza to, \u017ce zimy staj\u0105 si\u0119 \u0142agodniejsze w szybszym tempie, ni\u017c lata staj\u0105 si\u0119 gor\u0119tsze, co prowadzi do zmniejszenia rocznej amplitudy temperatur w niekt\u00f3rych regionach kontynentalnych.</p> </li> <li><p>Zmiana charakteru ekstrem\u00f3w:</p> <ul> <li>Fale upa\u0142\u00f3w: Po 2000 roku widoczna jest zwi\u0119kszona cz\u0119stotliwo\u015b\u0107 i intensywno\u015b\u0107 ekstremalnie wysokich temperatur maksymalnych. Wiele miast jednocze\u015bnie notuje swoje historyczne rekordy ciep\u0142a, co wskazuje na rosn\u0105ce ryzyko synchronicznych fal upa\u0142\u00f3w na kontynencie.</li> <li>Zanik ekstremalnych mroz\u00f3w: Jednocze\u015bnie obserwuje si\u0119 spadek cz\u0119stotliwo\u015bci wyst\u0119powania ekstremalnie niskich temperatur. Najg\u0142\u0119bsze \"do\u0142ki\" na liniach temperatur minimalnych s\u0105 znacznie rzadsze i p\u0142ytsze w ostatnich dekadach w por\u00f3wnaniu do lat 1940-1970.</li> </ul> </li> <li><p>Wzorce geograficzne:</p> <ul> <li>Po\u0142udnie Europy (Ateny, Madryt): Te miasta regularnie wyznaczaj\u0105 g\u00f3rn\u0105 granic\u0119 letnich ekstrem\u00f3w temperaturowych na kontynencie.</li> <li>Klimat morski (Lizbona): Charakteryzuje si\u0119 ona najwy\u017cszymi temperaturami minimalnymi (bardzo \u0142agodne zimy) i stosunkowo niewielk\u0105 roczn\u0105 amplitud\u0105 temperatur.</li> <li>Europa kontynentalna (Moskwa, Warszawa): Miasta te pokazuj\u0105 najwi\u0119ksz\u0105 roczn\u0105 amplitud\u0119 i s\u0105 kluczowymi wska\u017anikami szybkiego ocieplania si\u0119 zim.</li> </ul> </li> </ul>"},{"location":"notebooks/EDA/#wniosek","title":"\ud83d\udca1 Wniosek\u00b6","text":"<p>Dane z wykresu dostarczaj\u0105 silnych dowod\u00f3w na post\u0119puj\u0105ce zmiany klimatyczne w Europie. Nie jest to jedynie prosty wzrost temperatur, ale z\u0142o\u017cony proces, w kt\u00f3rym zimy ocieplaj\u0105 si\u0119 szybciej ni\u017c lata, a charakter zdarze\u0144 ekstremalnych ulega fundamentalnej zmianie \u2013 coraz cz\u0119stsze i silniejsze fale upa\u0142\u00f3w przy jednoczesnym zaniku rekordowych mroz\u00f3w.strzeni ostatnich dekad.</p>"},{"location":"notebooks/EDA/#dekodowanie-zmiennej-frshtt","title":"Dekodowanie zmiennej FRSHTT\u00b6","text":"<p>W danych meteorologicznych zmienna <code>FRSHTT</code> zawiera zakodowane informacje o wyst\u0119powaniu r\u00f3\u017cnych zjawisk pogodowych w formie 6-cyfrowego ci\u0105gu cyfr. Ka\u017cda z cyfr reprezentuje obecno\u015b\u0107 lub brak konkretnego zjawiska w danym dniu.</p>"},{"location":"notebooks/EDA/#struktura-kodu-frshtt","title":"Struktura kodu <code>FRSHTT</code>\u00b6","text":"<p>Ka\u017cda z sze\u015bciu pozycji odpowiada kolejno:</p> Pozycja Zjawisko 1 Mg\u0142a (Fog) 2 Deszcz (Rain) 3 \u015anieg (Snow) 4 Grad (Hail) 5 Burza (Thunder) 6 Tornado <p>Warto\u015b\u0107 <code>1</code> oznacza wyst\u0105pienie danego zjawiska, natomiast <code>0</code> jego brak.</p>"},{"location":"notebooks/EDA/#proces-dekodowania","title":"Proces dekodowania\u00b6","text":"<ul> <li>Warto\u015bci w kolumnie <code>FRSHTT</code> zosta\u0142y przekonwertowane na 6-cyfrowy ci\u0105g znak\u00f3w (uzupe\u0142niane zerami z lewej strony w przypadku kr\u00f3tszych warto\u015bci).</li> <li>Nast\u0119pnie dla ka\u017cdej pozycji w tym ci\u0105gu utworzono osobn\u0105 kolumn\u0119 binarn\u0105, kt\u00f3ra przyjmuje warto\u015b\u0107 <code>1</code> lub <code>0</code> w zale\u017cno\u015bci od obecno\u015bci zjawiska.</li> <li>Tak powsta\u0142e kolumny umo\u017cliwiaj\u0105 \u0142atw\u0105 analiz\u0119 i agregacj\u0119 danych dotycz\u0105cych poszczeg\u00f3lnych zjawisk pogodowych.</li> </ul>"},{"location":"notebooks/EDA/#korzysci","title":"Korzy\u015bci\u00b6","text":"<ul> <li>Rozdzielenie z\u0142o\u017conego kodu na proste zmienne binarne u\u0142atwia eksploracj\u0119 danych i ich wizualizacj\u0119.</li> <li>Pozwala na szybkie filtrowanie i analiz\u0119 konkretnych zjawisk pogodowych na podstawie danych historycznych.</li> </ul>"},{"location":"notebooks/EDA/#analiza-wykresow","title":"Analiza wykres\u00f3w\u00b6","text":""},{"location":"notebooks/EDA/#zapisanie-wsporzednych-geograficznych-do-sownika-oraz-usuniecie-zbednych-kolumn","title":"Zapisanie wsp\u00f3\u0142rz\u0119dnych geograficznych do s\u0142ownika oraz usuni\u0119cie zb\u0119dnych kolumn\u00b6","text":"<p>Wsp\u00f3\u0142rz\u0119dne geograficzne (szeroko\u015b\u0107 i d\u0142ugo\u015b\u0107 geograficzna) dla ka\u017cdej stacji zosta\u0142y wyodr\u0119bnione z danych i zapisane w osobnym s\u0142owniku <code>stations_info</code>. Dzi\u0119ki temu te informacje s\u0105 \u0142atwo dost\u0119pne i nie powtarzaj\u0105 si\u0119 w ka\u017cdym DataFrame.</p> <p>Nast\u0119pnie z danych usuni\u0119to kolumny, kt\u00f3re nie s\u0105 potrzebne do dalszej analizy, takie jak metadane stacji (<code>STATION</code>, <code>ELEVATION</code>, <code>NAME</code>), kolumny powi\u0105zane z zakodowanymi atrybutami (<code>FRSHTT</code>, <code>DEWP_ATTRIBUTES</code>, itd.), a tak\u017ce kolumny o niskiej przydatno\u015bci lub zbyt szczeg\u00f3\u0142owe jak <code>SNDP</code> czy <code>Tornado</code>. Usuni\u0119cie tych kolumn upraszcza zestaw danych i przyspiesza przetwarzanie.</p>"},{"location":"notebooks/EDA/#interpretacja-histogramow-czestotliwosc-pomiarow-temperatury","title":"Interpretacja Histogram\u00f3w: Cz\u0119stotliwo\u015b\u0107 Pomiar\u00f3w Temperatury\u00b6","text":"<p>Histogramy pokazuj\u0105, przez ile dni (o\u015b Y) dokonywano danej liczby pomiar\u00f3w temperatury na dob\u0119 (o\u015b X) w 12 europejskich miastach. Analiza pozwala na wydzielenie trzech g\u0142\u00f3wnych grup.</p>"},{"location":"notebooks/EDA/#gowne-wzorce-czestotliwosci","title":"G\u0142\u00f3wne Wzorce Cz\u0119stotliwo\u015bci\u00b6","text":"<ul> <li><p>24 pomiary/dzie\u0144 (co godzin\u0119): Ten wzorzec dominuje w:</p> <ul> <li>Brukseli, Londynie i Warszawie (dane bardzo sp\u00f3jne).</li> <li>Atenach, Budapeszcie i Madrycie (z niewielkimi anomaliami w niekt\u00f3re dni).</li> </ul> </li> <li><p>8 pomiar\u00f3w/dzie\u0144 (co 3 godziny): Jest to standard dla:</p> <ul> <li>Berlina, Lizbony, Moskwy i Pragi.</li> </ul> </li> <li><p>Wzorce mieszane: Dwa miasta pokazuj\u0105 dwa wyra\u017ane tryby pomiar\u00f3w (8 i 24 na dob\u0119), co mo\u017ce \u015bwiadczy\u0107 o zmianie metodologii lub \u0142\u0105czeniu danych z r\u00f3\u017cnych \u017ar\u00f3de\u0142:</p> <ul> <li>Pary\u017c i Wiede\u0144.</li> </ul> </li> </ul>"},{"location":"notebooks/EDA/#wniosek","title":"Wniosek\u00b6","text":"<p>Cz\u0119stotliwo\u015b\u0107 zbierania danych znacz\u0105co r\u00f3\u017cni si\u0119 mi\u0119dzy miastami. Ta niejednorodno\u015b\u0107, zw\u0142aszcza w przypadku Pary\u017ca i Wiednia, jest kluczow\u0105 informacj\u0105, kt\u00f3r\u0105 nale\u017cy uwzgl\u0119dni\u0107 w dalszych analizach, aby zapewni\u0107 wiarygodno\u015b\u0107 wynik\u00f3w.</p>"},{"location":"notebooks/EDA/#przyciecie-danych-od-1985-roku","title":"Przyci\u0119cie danych od 1985 roku\u00b6","text":"<p>Ze wzgl\u0119du na s\u0142ab\u0105 ci\u0105g\u0142o\u015b\u0107 danych w starszych rekordach oraz brak danych dla wielu stacji w wcze\u015bniejszych latach, zdecydowano si\u0119 ograniczy\u0107 analiz\u0119 do okresu od 1 stycznia 1985 roku. Pozwoli\u0142o to na uzyskanie bardziej sp\u00f3jnego i reprezentatywnego zestawu danych do dalszej obr\u00f3bki i analizy.</p>"},{"location":"notebooks/EDA/#braki-danych-po-przycieciu-od-1985-roku","title":"Braki danych po przyci\u0119ciu od 1985 roku\u00b6","text":"<p>Po ograniczeniu zbioru danych do okresu od 1985 roku zaobserwowano znacz\u0105ce braki w niekt\u00f3rych zmiennych meteorologicznych w wybranych miastach. Poni\u017cej zestawiono liczb\u0119 brakuj\u0105cych warto\u015bci (NaN) w poszczeg\u00f3lnych kolumnach:</p> <ul> <li>GUST \u2013 najwi\u0119ksze braki wyst\u0119puj\u0105 we wszystkich miastach, co sugeruje, \u017ce porywy wiatru nie by\u0142y systematycznie rejestrowane.</li> <li>SLP (ci\u015bnienie na poziomie morza) \u2013 znaczne braki w Atenach, Budapeszcie i Wiede\u0144; mo\u017ce to wskazywa\u0107 na brak pomiar\u00f3w ci\u015bnienia w tych lokalizacjach.</li> <li>MXSPD (maksymalna pr\u0119dko\u015b\u0107 wiatru) oraz WDSP (\u015brednia pr\u0119dko\u015b\u0107 wiatru) \u2013 cz\u0119\u015bciowe braki danych, szczeg\u00f3lnie dla Madrytu, Moskwy i Pragi.</li> <li>DEWP (temperatura punktu rosy) \u2013 brak danych w Moskwie i Pary\u017cu mo\u017ce wynika\u0107 z lokalnych brak\u00f3w w rejestrowaniu tej zmiennej.</li> <li>MIN/MAX (temperatura minimalna/maksymalna) \u2013 niemal kompletne dane, z wyj\u0105tkiem pojedynczych brak\u00f3w w Berlinie, Londynie i Warszawie.</li> </ul> <p>Dane te nale\u017cy uwzgl\u0119dni\u0107 podczas dalszej analizy, poniewa\u017c mog\u0105 wp\u0142ywa\u0107 na jako\u015b\u0107 wynik\u00f3w, szczeg\u00f3lnie w przypadku analiz statystycznych i trenowania modeli.</p>"},{"location":"notebooks/EDA/#analiza-pochodzenia-danych-temperatury-minimalnej-i-maksymalnej","title":"Analiza pochodzenia danych temperatury minimalnej i maksymalnej\u00b6","text":"<p>W kolumnach <code>MIN_ATTRIBUTES</code> i <code>MAX_ATTRIBUTES</code> znajduje si\u0119 informacja o sposobie pozyskania warto\u015bci temperatur minimalnych i maksymalnych. Warto\u015b\u0107 <code>*</code> oznacza, \u017ce dana warto\u015b\u0107 zosta\u0142a wyznaczona (np. interpolowana lub oszacowana), natomiast brak <code>*</code> oznacza, \u017ce warto\u015b\u0107 zosta\u0142a bezpo\u015brednio zmierzona i zarejestrowana (raportowana).</p>"},{"location":"notebooks/EDA/#kluczowe-obserwacje","title":"Kluczowe obserwacje:\u00b6","text":"<ul> <li>Ateny: 100% warto\u015bci temperatur minimalnych i maksymalnych zosta\u0142o wyznaczonych, co oznacza brak bezpo\u015brednich pomiar\u00f3w \u2013 dane s\u0105 w pe\u0142ni pochodne.</li> <li>Berlin: Znaczna cz\u0119\u015b\u0107 warto\u015bci (ok. 68% dla temperatury minimalnej i 59% dla maksymalnej) jest wyznaczona, co mo\u017ce wp\u0142ywa\u0107 na wiarygodno\u015b\u0107 analizy trend\u00f3w.</li> <li>Bruksela i Warszawa: Oko\u0142o po\u0142owa danych to warto\u015bci wyznaczone \u2013 co wskazuje na umiarkowan\u0105 jako\u015b\u0107 danych.</li> <li>Budapeszt, Wiede\u0144, Moskwa i Pary\u017c: Posiadaj\u0105 najwy\u017cszy odsetek bezpo\u015brednio raportowanych danych \u2013 ponad 70\u201390% danych pochodzi z pomiar\u00f3w, co czyni je bardziej wiarygodnymi do analiz statystycznych.</li> <li>Londyn, Madryt, Praga i Lisbona: Warto\u015bci pochodne stanowi\u0105 25\u201340%, co oznacza wzgl\u0119dnie dobr\u0105 jako\u015b\u0107 danych.</li> </ul>"},{"location":"notebooks/EDA/#wnioski","title":"Wnioski:\u00b6","text":"<ul> <li>Wysoki udzia\u0142 danych wyznaczonych (<code>*</code>) mo\u017ce wskazywa\u0107 na braki w oryginalnych pomiarach i wp\u0142ywa\u0107 na dok\u0142adno\u015b\u0107 analiz d\u0142ugoterminowych.</li> <li>Dla miast o du\u017cym procencie warto\u015bci wyznaczonych (np. Ateny, Berlin), nale\u017cy zachowa\u0107 ostro\u017cno\u015b\u0107 przy interpretacji trend\u00f3w temperatur ekstremalnych.</li> <li>Miasta z przewag\u0105 danych raportowanych s\u0105 bardziej odpowiednie do zaawansowanych analiz statystycznych i modelowania zmian klimatu.</li> </ul>"},{"location":"notebooks/EDA/#podsumowanie-wyboru-zmiennych-do-analizy-zmian-klimatycznych","title":"Podsumowanie wyboru zmiennych do analizy zmian klimatycznych\u00b6","text":"<p>Po wst\u0119pnej analizie danych oraz jako\u015bci poszczeg\u00f3lnych zmiennych zdecydowano si\u0119 skoncentrowa\u0107 na nast\u0119puj\u0105cych kluczowych parametrach meteorologicznych:</p> <ul> <li>Temperatura \u015brednia (TEMP) \u2013 reprezentuje podstawow\u0105 zmienno\u015b\u0107 termiczn\u0105 w danym dniu.</li> <li>Temperatura maksymalna (MAX) \u2013 pozwala na analiz\u0119 ekstrem\u00f3w cieplnych.</li> <li>Temperatura minimalna (MIN) \u2013 umo\u017cliwia ocen\u0119 ch\u0142odniejszych warunk\u00f3w i ekstrem\u00f3w zimnych.</li> </ul> <p>Ponadto, do analizy w\u0142\u0105czono zmienne opisuj\u0105ce wyst\u0119powanie istotnych zjawisk pogodowych, kt\u00f3re maj\u0105 wp\u0142yw na klimat i warunki atmosferyczne:</p> <ul> <li>Rain (deszcz)</li> <li>Snow (\u015bnieg)</li> <li>Hail (grad)</li> <li>Thunder (burza)</li> </ul> <p>Wybrane kolumny zapewniaj\u0105 reprezentatywne dane do badania trend\u00f3w i zmian klimatycznych w miastach na przestrzeni lat.</p>"},{"location":"notebooks/Predictions/","title":"\ud83c\udfaf Predykcja","text":"In\u00a0[1]: Copied! <pre>import os\nimport pandas as pd\nimport matplotlib.pyplot as plt\n</pre> import os import pandas as pd import matplotlib.pyplot as plt In\u00a0[2]: Copied! <pre># Folder where the CSV files are stored\ninput_folder = '../../data/scalone_dane'\n\n# Initialize an empty list to store all data\nall_data = []\n\n# Dictionary to hold each city's DataFrame\ncity_dataframes = {}\n\n# Loop through each CSV file in the folder\nfor filename in os.listdir(input_folder):\n    if filename.endswith('_scalony.csv'):\n        city = filename.replace('_scalony.csv', '')  # Extract city name\n        file_path = os.path.join(input_folder, filename)\n        \n        # Read CSV and add a 'CITY' column\n        df = pd.read_csv(file_path)\n        df['CITY'] = city\n        \n        # Store individual city DataFrame in dictionary\n        city_dataframes[city] = df.copy()\n        \n        # Add to the list for the combined DataFrame\n        all_data.append(df)\n\n# Combine all into a single DataFrame\ncombined_df = pd.concat(all_data, ignore_index=True)\n\nprint(f\"Loaded data from {len(all_data)} cities. Total rows: {len(combined_df)}\")\n</pre>  # Folder where the CSV files are stored input_folder = '../../data/scalone_dane'  # Initialize an empty list to store all data all_data = []  # Dictionary to hold each city's DataFrame city_dataframes = {}  # Loop through each CSV file in the folder for filename in os.listdir(input_folder):     if filename.endswith('_scalony.csv'):         city = filename.replace('_scalony.csv', '')  # Extract city name         file_path = os.path.join(input_folder, filename)                  # Read CSV and add a 'CITY' column         df = pd.read_csv(file_path)         df['CITY'] = city                  # Store individual city DataFrame in dictionary         city_dataframes[city] = df.copy()                  # Add to the list for the combined DataFrame         all_data.append(df)  # Combine all into a single DataFrame combined_df = pd.concat(all_data, ignore_index=True)  print(f\"Loaded data from {len(all_data)} cities. Total rows: {len(combined_df)}\")  <pre>Loaded data from 12 cities. Total rows: 218047\n</pre> In\u00a0[3]: Copied! <pre># Generate separate plots for each city\nfor city, df in city_dataframes.items():\n    plt.figure(figsize=(12, 5))\n    plt.plot(df.index, df['TEMP'], label=f'Temperatura - {city}')\n    plt.title(f'Temperatura w czasie \u2013 {city}')\n    plt.xlabel('Data')\n    plt.ylabel('Temperatura')\n    plt.legend()\n    plt.grid(True)\n    plt.tight_layout()\n    plt.show()\n</pre> # Generate separate plots for each city for city, df in city_dataframes.items():     plt.figure(figsize=(12, 5))     plt.plot(df.index, df['TEMP'], label=f'Temperatura - {city}')     plt.title(f'Temperatura w czasie \u2013 {city}')     plt.xlabel('Data')     plt.ylabel('Temperatura')     plt.legend()     plt.grid(True)     plt.tight_layout()     plt.show() In\u00a0[4]: Copied! <pre>import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import r2_score\n\n# 1. Wczytanie danych\ndf = city_dataframes['Ateny'].copy()\n\n# 2. Czyszczenie i przygotowanie\n# Usuni\u0119cie kolumn typu \"ATTRIBUTES\", kt\u00f3re s\u0105 jako\u015bciowe i cz\u0119sto puste\ndf = df[[col for col in df.columns if 'ATTRIBUTES' not in col]]\n\n# Usuni\u0119cie kolumn niezmiennych lub zb\u0119dnych dla predykcji\ndf = df.drop(columns=['STATION', 'LATITUDE', 'LONGITUDE', 'ELEVATION', 'NAME', 'CITY'])\n\n# Przekszta\u0142cenie kolumny DATE do daty i dodanie cech czasowych\ndf['DATE'] = pd.to_datetime(df['DATE'], errors='coerce')\ndf['Year'] = df['DATE'].dt.year\ndf['Month'] = df['DATE'].dt.month\ndf['Day'] = df['DATE'].dt.day\ndf = df.drop(columns=['DATE'])\n\n# Usuni\u0119cie wierszy z brakami danych\ndf = df.dropna()\n\n# 3. Korelacja z celem (TEMP)\ncorrelations = df.corr(numeric_only=True)['TEMP'].sort_values(ascending=False)\n\n# Wy\u015bwietlenie korelacji\nprint(\"Korelacje z TEMP:\")\nprint(correlations)\n\n# Wykres korelacji\nplt.figure(figsize=(10, 6))\nsns.barplot(x=correlations.values, y=correlations.index)\nplt.title(\"Korelacja cech z temperatur\u0105 (TEMP)\")\nplt.xlabel(\"Wsp\u00f3\u0142czynnik korelacji\")\nplt.ylabel(\"Cechy\")\nplt.tight_layout()\nplt.show()\n</pre> import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns from sklearn.linear_model import LinearRegression from sklearn.model_selection import train_test_split from sklearn.metrics import r2_score  # 1. Wczytanie danych df = city_dataframes['Ateny'].copy()  # 2. Czyszczenie i przygotowanie # Usuni\u0119cie kolumn typu \"ATTRIBUTES\", kt\u00f3re s\u0105 jako\u015bciowe i cz\u0119sto puste df = df[[col for col in df.columns if 'ATTRIBUTES' not in col]]  # Usuni\u0119cie kolumn niezmiennych lub zb\u0119dnych dla predykcji df = df.drop(columns=['STATION', 'LATITUDE', 'LONGITUDE', 'ELEVATION', 'NAME', 'CITY'])  # Przekszta\u0142cenie kolumny DATE do daty i dodanie cech czasowych df['DATE'] = pd.to_datetime(df['DATE'], errors='coerce') df['Year'] = df['DATE'].dt.year df['Month'] = df['DATE'].dt.month df['Day'] = df['DATE'].dt.day df = df.drop(columns=['DATE'])  # Usuni\u0119cie wierszy z brakami danych df = df.dropna()  # 3. Korelacja z celem (TEMP) correlations = df.corr(numeric_only=True)['TEMP'].sort_values(ascending=False)  # Wy\u015bwietlenie korelacji print(\"Korelacje z TEMP:\") print(correlations)  # Wykres korelacji plt.figure(figsize=(10, 6)) sns.barplot(x=correlations.values, y=correlations.index) plt.title(\"Korelacja cech z temperatur\u0105 (TEMP)\") plt.xlabel(\"Wsp\u00f3\u0142czynnik korelacji\") plt.ylabel(\"Cechy\") plt.tight_layout() plt.show()  <pre>Korelacje z TEMP:\nTEMP      1.000000\nMAX       0.977828\nMIN       0.947702\nDEWP      0.808331\nMonth     0.293717\nMXSPD     0.145355\nVISIB     0.144031\nWDSP      0.103878\nYear      0.044437\nDay       0.009142\nGUST     -0.076934\nFRSHTT   -0.174427\nPRCP     -0.323678\nSLP            NaN\nSTP            NaN\nSNDP           NaN\nName: TEMP, dtype: float64\n</pre> In\u00a0[5]: Copied! <pre>from statsmodels.stats.outliers_influence import variance_inflation_factor\nfrom statsmodels.tools.tools import add_constant\n\n# Zak\u0142adamy, \u017ce df ju\u017c nie zawiera TEMP\nfeatures = df.drop(columns=['TEMP']).copy()\n\n# Dodaj sta\u0142\u0105 (bias term) potrzebn\u0105 do obliczenia VIF\nfeatures_with_const = add_constant(features)\n\n# Obliczanie VIF\nvif_data = pd.DataFrame()\nvif_data[\"Feature\"] = features_with_const.columns\nvif_data[\"VIF\"] = [variance_inflation_factor(features_with_const.values, i)\n                   for i in range(features_with_const.shape[1])]\n\nprint(\"\\n\ud83d\udcca Wsp\u00f3\u0142czynniki VIF (Variance Inflation Factor):\")\nprint(vif_data.sort_values(by=\"VIF\", ascending=False))\n</pre> from statsmodels.stats.outliers_influence import variance_inflation_factor from statsmodels.tools.tools import add_constant  # Zak\u0142adamy, \u017ce df ju\u017c nie zawiera TEMP features = df.drop(columns=['TEMP']).copy()  # Dodaj sta\u0142\u0105 (bias term) potrzebn\u0105 do obliczenia VIF features_with_const = add_constant(features)  # Obliczanie VIF vif_data = pd.DataFrame() vif_data[\"Feature\"] = features_with_const.columns vif_data[\"VIF\"] = [variance_inflation_factor(features_with_const.values, i)                    for i in range(features_with_const.shape[1])]  print(\"\\n\ud83d\udcca Wsp\u00f3\u0142czynniki VIF (Variance Inflation Factor):\") print(vif_data.sort_values(by=\"VIF\", ascending=False))  <pre>\n\ud83d\udcca Wsp\u00f3\u0142czynniki VIF (Variance Inflation Factor):\n   Feature        VIF\n8      MIN  10.307664\n7      MAX   8.578652\n4     WDSP   8.184609\n5    MXSPD   6.237028\n0     DEWP   4.311201\n6     GUST   1.815506\n9     PRCP   1.637067\n11  FRSHTT   1.269011\n13   Month   1.189234\n3    VISIB   1.039370\n12    Year   1.019603\n14     Day   1.001919\n10    SNDP   0.000026\n2      STP   0.000006\n1      SLP   0.000000\n</pre> <pre>C:\\Users\\mikos\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\statsmodels\\regression\\linear_model.py:1782: RuntimeWarning: divide by zero encountered in scalar divide\n  return 1 - self.ssr/self.centered_tss\n</pre> In\u00a0[6]: Copied! <pre>selected_features = ['DEWP', 'Month', 'PRCP', 'VISIB']\n</pre> selected_features = ['DEWP', 'Month', 'PRCP', 'VISIB'] In\u00a0[7]: Copied! <pre>import numpy as np\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nimport warnings\nimport pandas as pd\nfrom itertools import product\nimport seaborn as sns\nfrom statsmodels.tsa.stattools import adfuller\nfrom tqdm import tqdm\n</pre> import numpy as np from statsmodels.tsa.statespace.sarimax import SARIMAX from sklearn.metrics import mean_squared_error, mean_absolute_error import warnings import pandas as pd from itertools import product import seaborn as sns from statsmodels.tsa.stattools import adfuller from tqdm import tqdm In\u00a0[8]: Copied! <pre>warnings.filterwarnings(\"ignore\")\n</pre>  warnings.filterwarnings(\"ignore\")  In\u00a0[9]: Copied! <pre>results_summary = []\n\n\n# Parametry\nexog_vars = ['DEWP', 'Month', 'PRCP', 'VISIB']\nforecast_horizon = 1\ntest_size_ratio = 0.10\nvalidation_size_ratio = 0.15\nlast_n_years = 2\n</pre> results_summary = []   # Parametry exog_vars = ['DEWP', 'Month', 'PRCP', 'VISIB'] forecast_horizon = 1 test_size_ratio = 0.10 validation_size_ratio = 0.15 last_n_years = 2 In\u00a0[10]: Copied! <pre>seasonal_order = (1, 1, 1, 365)\n# plot_path = f\"plots/{city}__sarimax_plot.png\"\nforecast_results = []\nfor city, df in city_dataframes.items():\n    plot_path = f\"../../plots/{city}__sarimax_plot.png\"\n    data = df.copy()\n\n    # Filtrujemy tylko ostatnie 2 lata danych\n    data.reset_index(inplace=True)\n    data['DATE'] = pd.to_datetime(data['DATE'], errors='coerce')\n    data['Month'] = data['DATE'].dt.month\n    data.set_index('DATE', inplace=True)\n    \n    last_date = data.index.max()\n    cutoff_date = last_date - pd.DateOffset(years=last_n_years)\n    data = data[data.index &gt;= cutoff_date]\n\n    data[exog_vars + ['TEMP']] = data[exog_vars + ['TEMP']].apply(pd.to_numeric, errors='coerce')\n    data = data.dropna(subset=['TEMP'] + exog_vars)\n\n\n    n_total = len(data)\n    n_test = int(test_size_ratio * n_total)\n    n_val = int(validation_size_ratio * (n_total - n_test))\n    n_train = n_total - n_val - n_test\n\n    train = data.iloc[:n_train]\n    val = data.iloc[n_train:n_train + n_val]\n    test = data.iloc[n_train + n_val:]\n\n\n    combined_train = pd.concat([train, val])\n    best_aicc = np.inf\n    best_order = (0, 0, 0)\n    # p = d = q = range(3)\n    # candidate_orders = list(product(p, d, q))\n\n\n    candidate_orders = list(product(range(3), repeat=3))  # or range(5)\n    for order in tqdm(candidate_orders, desc=f\"{city} model selection\"):\n        print(order)\n        try:\n            \n            model = SARIMAX(combined_train['TEMP'], exog=combined_train[exog_vars], order=order, #seasonal_order=(1,1,1,365),\n                            enforce_stationarity=False, enforce_invertibility=False)\n            print('2')\n            res = model.fit(disp=True)\n            print('1')\n            aicc = res.aic + (2 * len(res.params)**2 + 2 * len(res.params)) / (len(train) - len(res.params) - 1)\n            residuals = res.resid\n            # print('1')\n            adf_result = adfuller(residuals.dropna())\n            # print('1')\n            p_value = adf_result[1]\n            if p_value &lt; 0.05 and aicc &lt; best_aicc:\n                best_aicc = aicc\n                best_order = order\n            print(f\"Order: {order}, AICc: {aicc:.2f}, ADF p-value: {p_value:.4f}, Best_Order: {best_order}, Best_aicc: {best_aicc:.2f}\")\n        except:\n            continue\n\n\n    # Rolling forecast: iteracyjne prognozowanie 1 kroku do przodu\n    history_y = combined_train['TEMP'].tolist()\n    history_exog = combined_train[exog_vars].copy()\n    predictions, lowers, uppers, actuals = [], [], [], []\n\n    for t in tqdm(range(len(test)), desc=f\"Analysed test_samples from: \"):\n        try:\n            print('1')\n            model = SARIMAX(history_y, exog=history_exog, order=best_order, #seasonal_order=(1,1,1,365),\n                            enforce_stationarity=False, enforce_invertibility=False)\n            model_fit = model.fit(disp=False)\n\n            next_exog = test[exog_vars].iloc[[t]]\n            pred = model_fit.get_forecast(steps=1, exog=next_exog)\n            pred_mean = pred.predicted_mean.iloc[0]\n            ci = pred.conf_int(alpha=0.05).iloc[0]\n            print(pred_mean)\n            predictions.append(pred_mean)\n            lowers.append(ci[0])\n            uppers.append(ci[1])\n            actuals.append(test['TEMP'].iloc[t])\n            if not np.isnan(pred_mean):\n                history_y.append(pred_mean)\n                history_exog = pd.concat([history_exog, next_exog])\n            else:\n                print(f\"\u26a0\ufe0f Skipped step {t} due to NaN prediction.\")\n            continue\n            # history_y.append(pred_mean)  \n            # history_exog = pd.concat([history_exog, next_exog])\n        except:\n            predictions.append(np.nan)\n            lowers.append(np.nan)\n            uppers.append(np.nan)\n            actuals.append(test['TEMP'].iloc[t])\n\n\n\n    # Ewaluacja\n    y_true = np.array(actuals)\n    y_pred = np.array(predictions)\n\n    print(np.isnan(y_true).any())\n    print(np.isnan(y_pred).any())\n\n    mae = mean_absolute_error(y_true, y_pred)\n    rmse = np.sqrt(mean_squared_error(y_true, y_pred))\n\n    forecast_results.append({\n        'City': city,\n        'Best Order': best_order,\n        'Test MAE': mae,\n        'Test RMSE': rmse,\n        'AICc': best_aicc\n    })\n\n    \n    # Wykres\n    plt.figure(figsize=(15, 6))\n    plt.plot(data.index[:n_train], data['TEMP'].iloc[:n_train], label='Train', color='blue')\n    plt.plot(data.index[n_train:n_train+n_val], data['TEMP'].iloc[n_train:n_train+n_val], label='Val', color='orange')\n    plt.plot(data.index[n_train+n_val:], actuals, label='Test Actual', color='green')\n    plt.plot(data.index[n_train+n_val:], predictions, label='Forecast', color='red')\n    plt.fill_between(data.index[n_train+n_val:], lowers, uppers, color='red', alpha=0.3, label='95% CI')\n    plt.title(f\"SARIMAX Forecast with 95% CI \u2014 Order {best_order}\")\n    plt.xlabel(\"Date\")\n    plt.ylabel(\"Temperature\")\n    plt.legend()\n    plt.grid(True)\n    plt.tight_layout()\n    plt.savefig(plot_path)\n    plt.show()\n</pre> seasonal_order = (1, 1, 1, 365) # plot_path = f\"plots/{city}__sarimax_plot.png\" forecast_results = [] for city, df in city_dataframes.items():     plot_path = f\"../../plots/{city}__sarimax_plot.png\"     data = df.copy()      # Filtrujemy tylko ostatnie 2 lata danych     data.reset_index(inplace=True)     data['DATE'] = pd.to_datetime(data['DATE'], errors='coerce')     data['Month'] = data['DATE'].dt.month     data.set_index('DATE', inplace=True)          last_date = data.index.max()     cutoff_date = last_date - pd.DateOffset(years=last_n_years)     data = data[data.index &gt;= cutoff_date]      data[exog_vars + ['TEMP']] = data[exog_vars + ['TEMP']].apply(pd.to_numeric, errors='coerce')     data = data.dropna(subset=['TEMP'] + exog_vars)       n_total = len(data)     n_test = int(test_size_ratio * n_total)     n_val = int(validation_size_ratio * (n_total - n_test))     n_train = n_total - n_val - n_test      train = data.iloc[:n_train]     val = data.iloc[n_train:n_train + n_val]     test = data.iloc[n_train + n_val:]       combined_train = pd.concat([train, val])     best_aicc = np.inf     best_order = (0, 0, 0)     # p = d = q = range(3)     # candidate_orders = list(product(p, d, q))       candidate_orders = list(product(range(3), repeat=3))  # or range(5)     for order in tqdm(candidate_orders, desc=f\"{city} model selection\"):         print(order)         try:                          model = SARIMAX(combined_train['TEMP'], exog=combined_train[exog_vars], order=order, #seasonal_order=(1,1,1,365),                             enforce_stationarity=False, enforce_invertibility=False)             print('2')             res = model.fit(disp=True)             print('1')             aicc = res.aic + (2 * len(res.params)**2 + 2 * len(res.params)) / (len(train) - len(res.params) - 1)             residuals = res.resid             # print('1')             adf_result = adfuller(residuals.dropna())             # print('1')             p_value = adf_result[1]             if p_value &lt; 0.05 and aicc &lt; best_aicc:                 best_aicc = aicc                 best_order = order             print(f\"Order: {order}, AICc: {aicc:.2f}, ADF p-value: {p_value:.4f}, Best_Order: {best_order}, Best_aicc: {best_aicc:.2f}\")         except:             continue       # Rolling forecast: iteracyjne prognozowanie 1 kroku do przodu     history_y = combined_train['TEMP'].tolist()     history_exog = combined_train[exog_vars].copy()     predictions, lowers, uppers, actuals = [], [], [], []      for t in tqdm(range(len(test)), desc=f\"Analysed test_samples from: \"):         try:             print('1')             model = SARIMAX(history_y, exog=history_exog, order=best_order, #seasonal_order=(1,1,1,365),                             enforce_stationarity=False, enforce_invertibility=False)             model_fit = model.fit(disp=False)              next_exog = test[exog_vars].iloc[[t]]             pred = model_fit.get_forecast(steps=1, exog=next_exog)             pred_mean = pred.predicted_mean.iloc[0]             ci = pred.conf_int(alpha=0.05).iloc[0]             print(pred_mean)             predictions.append(pred_mean)             lowers.append(ci[0])             uppers.append(ci[1])             actuals.append(test['TEMP'].iloc[t])             if not np.isnan(pred_mean):                 history_y.append(pred_mean)                 history_exog = pd.concat([history_exog, next_exog])             else:                 print(f\"\u26a0\ufe0f Skipped step {t} due to NaN prediction.\")             continue             # history_y.append(pred_mean)               # history_exog = pd.concat([history_exog, next_exog])         except:             predictions.append(np.nan)             lowers.append(np.nan)             uppers.append(np.nan)             actuals.append(test['TEMP'].iloc[t])        # Ewaluacja     y_true = np.array(actuals)     y_pred = np.array(predictions)      print(np.isnan(y_true).any())     print(np.isnan(y_pred).any())      mae = mean_absolute_error(y_true, y_pred)     rmse = np.sqrt(mean_squared_error(y_true, y_pred))      forecast_results.append({         'City': city,         'Best Order': best_order,         'Test MAE': mae,         'Test RMSE': rmse,         'AICc': best_aicc     })           # Wykres     plt.figure(figsize=(15, 6))     plt.plot(data.index[:n_train], data['TEMP'].iloc[:n_train], label='Train', color='blue')     plt.plot(data.index[n_train:n_train+n_val], data['TEMP'].iloc[n_train:n_train+n_val], label='Val', color='orange')     plt.plot(data.index[n_train+n_val:], actuals, label='Test Actual', color='green')     plt.plot(data.index[n_train+n_val:], predictions, label='Forecast', color='red')     plt.fill_between(data.index[n_train+n_val:], lowers, uppers, color='red', alpha=0.3, label='95% CI')     plt.title(f\"SARIMAX Forecast with 95% CI \u2014 Order {best_order}\")     plt.xlabel(\"Date\")     plt.ylabel(\"Temperature\")     plt.legend()     plt.grid(True)     plt.tight_layout()     plt.savefig(plot_path)     plt.show() <pre>Ateny model selection:   0%|                                                                    | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Ateny model selection:   4%|\u2588\u2588\u258f                                                         | 1/27 [00:00&lt;00:07,  3.43it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4396.07, ADF p-value: 0.0241, Best_Order: (0, 0, 0), Best_aicc: 4396.07\n(0, 0, 1)\n2\n</pre> <pre>Ateny model selection:   7%|\u2588\u2588\u2588\u2588\u258d                                                       | 2/27 [00:00&lt;00:08,  2.90it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3953.59, ADF p-value: 0.0857, Best_Order: (0, 0, 0), Best_aicc: 4396.07\n(0, 0, 2)\n2\n</pre> <pre>Ateny model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                     | 3/27 [00:01&lt;00:09,  2.57it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3728.44, ADF p-value: 0.2754, Best_Order: (0, 0, 0), Best_aicc: 4396.07\n(0, 1, 0)\n2\n</pre> <pre>Ateny model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                   | 4/27 [00:01&lt;00:08,  2.84it/s]</pre> <pre>1\nOrder: (0, 1, 0), AICc: 3105.77, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3105.77\n(0, 1, 1)\n2\n</pre> <pre>Ateny model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 5/27 [00:01&lt;00:07,  3.04it/s]</pre> <pre>1\nOrder: (0, 1, 1), AICc: 3102.88, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3102.88\n(0, 1, 2)\n2\n</pre> <pre>Ateny model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                              | 6/27 [00:02&lt;00:07,  2.84it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3086.43, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(0, 2, 0)\n2\n</pre> <pre>Ateny model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 7/27 [00:02&lt;00:06,  3.01it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3554.22, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(0, 2, 1)\n2\n</pre> <pre>Ateny model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 8/27 [00:02&lt;00:07,  2.63it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3104.95, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(0, 2, 2)\n2\n</pre> <pre>Ateny model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 9/27 [00:03&lt;00:07,  2.30it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3103.72, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(1, 0, 0)\n2\n</pre> <pre>Ateny model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                     | 10/27 [00:03&lt;00:07,  2.40it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3112.79, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(1, 0, 1)\n2\n</pre> <pre>Ateny model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                   | 11/27 [00:04&lt;00:06,  2.29it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3109.69, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(1, 0, 2)\n2\n</pre> <pre>Ateny model selection:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                | 12/27 [00:04&lt;00:07,  2.08it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3092.68, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(1, 1, 0)\n2\n</pre> <pre>Ateny model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                              | 13/27 [00:05&lt;00:05,  2.45it/s]</pre> <pre>1\nOrder: (1, 1, 0), AICc: 3107.56, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3086.43\n(1, 1, 1)\n2\n</pre> <pre>Ateny model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                            | 14/27 [00:05&lt;00:05,  2.55it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3074.64, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 3074.64\n(1, 1, 2)\n2\n</pre> <pre>Ateny model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                          | 15/27 [00:05&lt;00:04,  2.49it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3065.88, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(1, 2, 0)\n2\n</pre> <pre>Ateny model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                        | 16/27 [00:06&lt;00:03,  2.87it/s]</pre> <pre>1\nOrder: (1, 2, 0), AICc: 3416.84, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(1, 2, 1)\n2\n</pre> <pre>Ateny model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                     | 17/27 [00:06&lt;00:04,  2.43it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3106.91, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(1, 2, 2)\n2\n</pre> <pre>Ateny model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                   | 18/27 [00:07&lt;00:04,  2.09it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3104.79, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 0, 0)\n2\n</pre> <pre>Ateny model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                 | 19/27 [00:07&lt;00:03,  2.10it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3109.98, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 0, 1)\n2\n</pre> <pre>Ateny model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b               | 20/27 [00:08&lt;00:03,  1.75it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3114.78, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 0, 2)\n2\n</pre> <pre>Ateny model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589             | 21/27 [00:09&lt;00:03,  1.63it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3074.17, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 1, 0)\n2\n</pre> <pre>Ateny model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           | 22/27 [00:09&lt;00:02,  1.94it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3095.69, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 1, 1)\n2\n</pre> <pre>Ateny model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e        | 23/27 [00:09&lt;00:01,  2.04it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3070.17, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 1, 2)\n2\n</pre> <pre>Ateny model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d      | 24/27 [00:10&lt;00:01,  1.90it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3067.51, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 2, 0)\n2\n</pre> <pre>Ateny model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:10&lt;00:00,  2.22it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3340.22, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 2, 1)\n2\n</pre> <pre>Ateny model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:11&lt;00:00,  2.02it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3100.73, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n(2, 2, 2)\n2\n</pre> <pre>Ateny model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:12&lt;00:00,  2.21it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3101.37, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3065.88\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:30,  2.32it/s]</pre> <pre>67.30751577723834\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:34,  2.06it/s]</pre> <pre>67.58020612561286\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:01&lt;00:34,  2.04it/s]</pre> <pre>68.31755407971727\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:35,  1.96it/s]</pre> <pre>67.71570252700727\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:02&lt;00:37,  1.82it/s]</pre> <pre>66.17883403048066\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:02&lt;00:32,  2.06it/s]</pre> <pre>68.48956912067754\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:03&lt;00:33,  1.99it/s]</pre> <pre>68.80234455582575\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:03&lt;00:32,  2.03it/s]</pre> <pre>68.38275482900781\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:04&lt;00:32,  1.94it/s]</pre> <pre>67.81336824804666\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:05&lt;00:31,  1.98it/s]</pre> <pre>68.25288479270066\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:05&lt;00:29,  2.08it/s]</pre> <pre>67.56452565233826\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:05&lt;00:28,  2.15it/s]</pre> <pre>67.30627584721718\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:06&lt;00:26,  2.25it/s]</pre> <pre>67.67133095384028\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:06&lt;00:24,  2.36it/s]</pre> <pre>65.78528705259637\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:07&lt;00:23,  2.44it/s]</pre> <pre>67.96213960281582\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:07&lt;00:23,  2.47it/s]</pre> <pre>67.27325770808953\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:07&lt;00:22,  2.50it/s]</pre> <pre>65.82157259668278\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:08&lt;00:21,  2.55it/s]</pre> <pre>66.34243611646295\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:08&lt;00:21,  2.53it/s]</pre> <pre>66.40037772512548\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:09&lt;00:22,  2.38it/s]</pre> <pre>66.83440847601885\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:09&lt;00:22,  2.28it/s]</pre> <pre>66.08218886529023\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:10&lt;00:22,  2.24it/s]</pre> <pre>64.63174805072623\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:10&lt;00:22,  2.22it/s]</pre> <pre>66.97916023130715\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:11&lt;00:24,  1.99it/s]</pre> <pre>65.04060288208066\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:11&lt;00:22,  2.13it/s]</pre> <pre>65.00529121228288\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:11&lt;00:20,  2.27it/s]</pre> <pre>65.70606836510586\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:12&lt;00:20,  2.28it/s]</pre> <pre>66.54517953294632\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:12&lt;00:19,  2.37it/s]</pre> <pre>64.86704240371732\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:13&lt;00:18,  2.39it/s]</pre> <pre>65.64823530677515\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:13&lt;00:17,  2.42it/s]</pre> <pre>62.08961238283027\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:13&lt;00:17,  2.46it/s]</pre> <pre>58.53074044059675\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:14&lt;00:17,  2.29it/s]</pre> <pre>61.77122689343072\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:14&lt;00:17,  2.33it/s]</pre> <pre>64.75093615990308\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:15&lt;00:16,  2.38it/s]</pre> <pre>65.70699137334591\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:15&lt;00:15,  2.39it/s]</pre> <pre>65.99137159058182\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:16&lt;00:16,  2.27it/s]</pre> <pre>66.48732654673779\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:16&lt;00:15,  2.40it/s]</pre> <pre>63.64802993558176\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:16&lt;00:14,  2.44it/s]</pre> <pre>58.53051394074206\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:17&lt;00:14,  2.42it/s]</pre> <pre>58.9645033430087\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:17&lt;00:13,  2.37it/s]</pre> <pre>63.67447423538126\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:18&lt;00:13,  2.35it/s]</pre> <pre>64.94752309384153\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:18&lt;00:13,  2.33it/s]</pre> <pre>63.96979628708432\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:18&lt;00:12,  2.46it/s]</pre> <pre>65.26176497183258\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:19&lt;00:12,  2.25it/s]</pre> <pre>67.40231219649549\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:20&lt;00:13,  2.08it/s]</pre> <pre>67.69178859070107\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:20&lt;00:13,  1.96it/s]</pre> <pre>64.71074593261602\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:21&lt;00:15,  1.72it/s]</pre> <pre>63.985032008282914\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:21&lt;00:14,  1.75it/s]</pre> <pre>63.519544848370714\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:22&lt;00:14,  1.67it/s]</pre> <pre>63.699805639191375\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:23&lt;00:12,  1.82it/s]</pre> <pre>61.7034416570571\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:23&lt;00:11,  1.98it/s]</pre> <pre>61.147674854925796\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:23&lt;00:10,  2.06it/s]</pre> <pre>61.81305471519303\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:24&lt;00:09,  2.17it/s]</pre> <pre>63.49743644566179\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:24&lt;00:08,  2.16it/s]</pre> <pre>63.584195487951185\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:25&lt;00:08,  2.02it/s]</pre> <pre>64.62593132939047\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:25&lt;00:08,  1.92it/s]</pre> <pre>67.14326687269809\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:26&lt;00:08,  1.86it/s]</pre> <pre>66.1242458767255\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:26&lt;00:07,  2.04it/s]</pre> <pre>63.114988492319\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:27&lt;00:06,  2.17it/s]</pre> <pre>61.7034598620619\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:27&lt;00:05,  2.25it/s]</pre> <pre>60.198793806645995\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:28&lt;00:05,  2.37it/s]</pre> <pre>61.24019609502166\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:28&lt;00:04,  2.38it/s]</pre> <pre>62.075689595452886\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:28&lt;00:04,  2.46it/s]</pre> <pre>62.94374699365771\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:29&lt;00:03,  2.34it/s]</pre> <pre>63.58416893219419\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:29&lt;00:03,  2.30it/s]</pre> <pre>62.195130834805695\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:30&lt;00:03,  1.96it/s]</pre> <pre>63.96029180606662\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:30&lt;00:02,  2.18it/s]</pre> <pre>63.67101684214818\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:31&lt;00:02,  2.35it/s]</pre> <pre>64.56797200836436\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:31&lt;00:01,  2.44it/s]</pre> <pre>63.98924072967211\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:31&lt;00:01,  2.39it/s]</pre> <pre>63.15006552029184\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:32&lt;00:00,  2.47it/s]</pre> <pre>63.3526093949729\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:32&lt;00:00,  2.43it/s]</pre> <pre>63.728780803865625\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:33&lt;00:00,  2.20it/s]</pre> <pre>63.69984444235352\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Berlin model selection:   0%|                                                                   | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Berlin model selection:   4%|\u2588\u2588\u258f                                                        | 1/27 [00:00&lt;00:06,  4.17it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4056.35, ADF p-value: 0.0117, Best_Order: (0, 0, 0), Best_aicc: 4056.35\n(0, 0, 1)\n2\n</pre> <pre>Berlin model selection:   7%|\u2588\u2588\u2588\u2588\u258e                                                      | 2/27 [00:00&lt;00:06,  3.60it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3825.78, ADF p-value: 0.0136, Best_Order: (0, 0, 1), Best_aicc: 3825.78\n(0, 0, 2)\n2\n</pre> <pre>Berlin model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                                    | 3/27 [00:00&lt;00:08,  2.89it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3740.32, ADF p-value: 0.0000, Best_Order: (0, 0, 2), Best_aicc: 3740.32\n(0, 1, 0)\n2\n</pre> <pre>Berlin model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                | 5/27 [00:01&lt;00:05,  4.00it/s]</pre> <pre>1\nOrder: (0, 1, 0), AICc: 3460.40, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3460.40\n(0, 1, 1)\n2\n1\nOrder: (0, 1, 1), AICc: 3435.67, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3435.67\n(0, 1, 2)\n2\n</pre> <pre>Berlin model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                              | 6/27 [00:01&lt;00:05,  3.62it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3401.93, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(0, 2, 0)\n2\n</pre> <pre>Berlin model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 7/27 [00:01&lt;00:05,  3.88it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3956.69, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(0, 2, 1)\n2\n</pre> <pre>Berlin model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                         | 8/27 [00:02&lt;00:05,  3.59it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3453.62, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(0, 2, 2)\n2\n</pre> <pre>Berlin model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                       | 9/27 [00:02&lt;00:05,  3.13it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3438.31, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(1, 0, 0)\n2\n</pre> <pre>Berlin model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                    | 10/27 [00:03&lt;00:05,  2.95it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3467.10, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(1, 0, 1)\n2\n</pre> <pre>Berlin model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                  | 11/27 [00:03&lt;00:06,  2.42it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3445.58, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(1, 0, 2)\n2\n</pre> <pre>Berlin model selection:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                | 12/27 [00:04&lt;00:06,  2.18it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3408.12, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3451.88, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3401.93\n</pre> <pre>Berlin model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                              | 13/27 [00:04&lt;00:05,  2.67it/s]</pre> <pre>(1, 1, 1)\n2\n</pre> <pre>Berlin model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                            | 14/27 [00:04&lt;00:05,  2.54it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3386.02, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 3386.02\n(1, 1, 2)\n2\n</pre> <pre>Berlin model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                         | 15/27 [00:05&lt;00:06,  1.93it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3385.17, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(1, 2, 0)\n2\n1\n</pre> <pre>Berlin model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 16/27 [00:05&lt;00:04,  2.36it/s]</pre> <pre>Order: (1, 2, 0), AICc: 3809.70, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(1, 2, 1)\n2\n</pre> <pre>Berlin model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 17/27 [00:06&lt;00:04,  2.28it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3450.29, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(1, 2, 2)\n2\n</pre> <pre>Berlin model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                   | 18/27 [00:06&lt;00:04,  2.19it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3454.00, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(2, 0, 0)\n2\n</pre> <pre>Berlin model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                 | 19/27 [00:07&lt;00:03,  2.17it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3452.01, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(2, 0, 1)\n2\n</pre> <pre>Berlin model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589               | 20/27 [00:07&lt;00:03,  2.08it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3403.47, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(2, 0, 2)\n2\n</pre> <pre>Berlin model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588             | 21/27 [00:08&lt;00:03,  1.88it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3411.14, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(2, 1, 0)\n2\n</pre> <pre>Berlin model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e          | 22/27 [00:08&lt;00:02,  2.29it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3420.92, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(2, 1, 1)\n2\n</pre> <pre>Berlin model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d        | 23/27 [00:09&lt;00:02,  1.96it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3388.06, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3385.17\n(2, 1, 2)\n2\n</pre> <pre>Berlin model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c      | 24/27 [00:09&lt;00:01,  1.83it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3382.95, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3382.95\n(2, 2, 0)\n2\n</pre> <pre>Berlin model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:10&lt;00:00,  2.14it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3686.34, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3382.95\n(2, 2, 1)\n2\n</pre> <pre>Berlin model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:10&lt;00:00,  1.97it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3425.25, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3382.95\n(2, 2, 2)\n2\n</pre> <pre>Berlin model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:11&lt;00:00,  2.34it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3428.10, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3382.95\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:43,  1.66it/s]</pre> <pre>65.62735425396713\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:01&lt;00:44,  1.60it/s]</pre> <pre>66.04596746761403\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:01&lt;00:43,  1.62it/s]</pre> <pre>65.02259031015114\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:02&lt;00:43,  1.60it/s]</pre> <pre>65.33075436543933\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:03&lt;00:42,  1.61it/s]</pre> <pre>64.47700727681377\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:03&lt;00:41,  1.62it/s]</pre> <pre>65.82138840866403\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:04&lt;00:41,  1.61it/s]</pre> <pre>66.46641576242206\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:05&lt;00:41,  1.56it/s]</pre> <pre>67.96672518526083\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:05&lt;00:40,  1.57it/s]</pre> <pre>69.88989595777457\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:06&lt;00:41,  1.53it/s]</pre> <pre>68.3472613486198\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:07&lt;00:40,  1.53it/s]</pre> <pre>67.7661932727435\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:07&lt;00:39,  1.54it/s]</pre> <pre>64.7563071452109\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:08&lt;00:39,  1.51it/s]</pre> <pre>62.94145806156641\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:08&lt;00:38,  1.52it/s]</pre> <pre>65.66149156443565\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:09&lt;00:37,  1.55it/s]</pre> <pre>68.77876169382836\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:10&lt;00:36,  1.57it/s]</pre> <pre>67.273077266864\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:10&lt;00:34,  1.60it/s]</pre> <pre>65.79678817674902\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:11&lt;00:34,  1.58it/s]</pre> <pre>66.60840385878116\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:12&lt;00:33,  1.60it/s]</pre> <pre>70.09252839135985\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:12&lt;00:33,  1.57it/s]</pre> <pre>68.6417865579439\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:13&lt;00:33,  1.55it/s]</pre> <pre>66.0293951618142\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:14&lt;00:33,  1.54it/s]</pre> <pre>66.12845971629608\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:14&lt;00:33,  1.51it/s]</pre> <pre>67.04397706568977\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:15&lt;00:32,  1.52it/s]</pre> <pre>68.88766979844186\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:16&lt;00:31,  1.55it/s]</pre> <pre>65.48812996777579\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:16&lt;00:30,  1.53it/s]</pre> <pre>59.38658488836716\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:17&lt;00:29,  1.56it/s]</pre> <pre>61.424966951148505\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:17&lt;00:28,  1.56it/s]</pre> <pre>59.049593046501954\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:18&lt;00:28,  1.56it/s]</pre> <pre>57.63779152933907\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:19&lt;00:26,  1.60it/s]</pre> <pre>56.29560924655715\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:19&lt;00:26,  1.58it/s]</pre> <pre>60.55365144137927\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:20&lt;00:26,  1.57it/s]</pre> <pre>61.337528607639186\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:21&lt;00:25,  1.58it/s]</pre> <pre>60.80728420064129\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:21&lt;00:24,  1.60it/s]</pre> <pre>62.42423941010057\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:22&lt;00:24,  1.57it/s]</pre> <pre>62.901868751111536\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:23&lt;00:23,  1.56it/s]</pre> <pre>64.35923859683317\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:23&lt;00:23,  1.52it/s]</pre> <pre>62.72782336724349\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:24&lt;00:22,  1.52it/s]</pre> <pre>62.43468893508983\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:24&lt;00:22,  1.54it/s]</pre> <pre>63.58430169042256\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:25&lt;00:21,  1.54it/s]</pre> <pre>63.99906412550196\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:26&lt;00:20,  1.56it/s]</pre> <pre>62.80938804851184\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:26&lt;00:20,  1.54it/s]</pre> <pre>61.44899481253\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:27&lt;00:19,  1.54it/s]</pre> <pre>62.12163191455666\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:28&lt;00:18,  1.53it/s]</pre> <pre>63.19348301085421\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:28&lt;00:18,  1.48it/s]</pre> <pre>60.07348982268695\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:29&lt;00:18,  1.48it/s]</pre> <pre>57.763549191315846\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:30&lt;00:17,  1.48it/s]</pre> <pre>56.96433315579284\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:31&lt;00:17,  1.45it/s]</pre> <pre>59.54990980205554\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:31&lt;00:16,  1.49it/s]</pre> <pre>63.75640113170583\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:32&lt;00:15,  1.50it/s]</pre> <pre>65.02923975434707\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:33&lt;00:14,  1.49it/s]</pre> <pre>63.97926027850823\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:33&lt;00:13,  1.50it/s]</pre> <pre>64.03154517202826\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:34&lt;00:13,  1.48it/s]</pre> <pre>62.63677859792348\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:35&lt;00:12,  1.47it/s]</pre> <pre>65.14138419155714\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:35&lt;00:12,  1.47it/s]</pre> <pre>64.74996202272379\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:36&lt;00:11,  1.49it/s]</pre> <pre>64.58331309753723\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:37&lt;00:10,  1.50it/s]</pre> <pre>65.20096144367982\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:37&lt;00:10,  1.47it/s]</pre> <pre>63.4112012029537\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:38&lt;00:09,  1.49it/s]</pre> <pre>62.65985004200465\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:39&lt;00:08,  1.50it/s]</pre> <pre>59.24749887862634\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:39&lt;00:07,  1.50it/s]</pre> <pre>60.37201590819814\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:40&lt;00:07,  1.48it/s]</pre> <pre>61.831829502808965\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:41&lt;00:06,  1.47it/s]</pre> <pre>61.0264464323552\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:41&lt;00:06,  1.47it/s]</pre> <pre>63.80868571080629\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:42&lt;00:05,  1.48it/s]</pre> <pre>61.42898736417973\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:43&lt;00:04,  1.47it/s]</pre> <pre>59.73733562547491\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:43&lt;00:04,  1.49it/s]</pre> <pre>56.39526596975725\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:44&lt;00:03,  1.49it/s]</pre> <pre>61.442864739674874\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:45&lt;00:02,  1.47it/s]</pre> <pre>59.17066250521117\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:45&lt;00:02,  1.46it/s]</pre> <pre>62.03589437080747\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:46&lt;00:01,  1.46it/s]</pre> <pre>58.25804156264113\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:47&lt;00:00,  1.43it/s]</pre> <pre>58.189705758911245\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:48&lt;00:00,  1.52it/s]</pre> <pre>56.115361560734065\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Bruksela model selection:   0%|                                                                 | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Bruksela model selection:   4%|\u2588\u2588                                                       | 1/27 [00:00&lt;00:06,  4.13it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 3881.25, ADF p-value: 0.1478, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 0, 1)\n2\n</pre> <pre>Bruksela model selection:   7%|\u2588\u2588\u2588\u2588\u258f                                                    | 2/27 [00:00&lt;00:05,  4.32it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3552.08, ADF p-value: 0.1694, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 0, 2)\n2\n</pre> <pre>Bruksela model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                                  | 3/27 [00:00&lt;00:06,  3.83it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3445.11, ADF p-value: 0.2198, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 1, 0)\n2\n1\nOrder: (0, 1, 0), AICc: 3283.37, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3283.37\n</pre> <pre>Bruksela model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                              | 5/27 [00:01&lt;00:04,  5.00it/s]</pre> <pre>(0, 1, 1)\n2\n1\nOrder: (0, 1, 1), AICc: 3266.65, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3266.65\n(0, 1, 2)\n2\n</pre> <pre>Bruksela model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                            | 6/27 [00:01&lt;00:04,  4.28it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3204.15, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(0, 2, 0)\n2\n</pre> <pre>Bruksela model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 7/27 [00:01&lt;00:04,  4.37it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3784.23, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(0, 2, 1)\n2\n</pre> <pre>Bruksela model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                        | 8/27 [00:01&lt;00:04,  3.89it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3282.20, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(0, 2, 2)\n2\n</pre> <pre>Bruksela model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                      | 9/27 [00:02&lt;00:06,  2.81it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3266.10, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(1, 0, 0)\n2\n</pre> <pre>Bruksela model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                   | 10/27 [00:02&lt;00:05,  2.87it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3286.86, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(1, 0, 1)\n2\n</pre> <pre>Bruksela model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                 | 11/27 [00:03&lt;00:05,  2.92it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3270.14, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(1, 0, 2)\n2\n</pre> <pre>Bruksela model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                             | 13/27 [00:03&lt;00:04,  3.01it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3210.17, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3278.71, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3204.15\n(1, 1, 1)\n2\n</pre> <pre>Bruksela model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                           | 14/27 [00:04&lt;00:04,  3.07it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3202.23, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 3202.23\n(1, 1, 2)\n2\n</pre> <pre>Bruksela model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                         | 15/27 [00:04&lt;00:03,  3.16it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3191.82, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(1, 2, 0)\n2\n</pre> <pre>Bruksela model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                      | 16/27 [00:04&lt;00:03,  3.42it/s]</pre> <pre>1\nOrder: (1, 2, 0), AICc: 3651.72, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(1, 2, 1)\n2\n</pre> <pre>Bruksela model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 17/27 [00:05&lt;00:03,  3.07it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3278.25, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(1, 2, 2)\n2\n</pre> <pre>Bruksela model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                  | 18/27 [00:05&lt;00:03,  2.66it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3281.66, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 0, 0)\n2\n</pre> <pre>Bruksela model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                | 19/27 [00:05&lt;00:02,  2.69it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3277.52, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 0, 1)\n2\n</pre> <pre>Bruksela model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d              | 20/27 [00:06&lt;00:03,  2.16it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3211.44, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 0, 2)\n2\n</pre> <pre>Bruksela model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c            | 21/27 [00:07&lt;00:03,  1.85it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3198.62, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 1, 0)\n2\n</pre> <pre>Bruksela model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 22/27 [00:07&lt;00:02,  2.23it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3240.33, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 1, 1)\n2\n</pre> <pre>Bruksela model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b        | 23/27 [00:07&lt;00:01,  2.62it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3196.82, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 1, 2)\n2\n</pre> <pre>Bruksela model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a      | 24/27 [00:08&lt;00:01,  2.33it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3193.86, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 2, 0)\n2\n</pre> <pre>Bruksela model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a    | 25/27 [00:08&lt;00:00,  2.65it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3549.39, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 2, 1)\n2\n</pre> <pre>Bruksela model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 26/27 [00:09&lt;00:00,  2.38it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3244.95, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n(2, 2, 2)\n2\n</pre> <pre>Bruksela model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:09&lt;00:00,  2.71it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3206.50, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3191.82\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:20,  3.59it/s]</pre> <pre>60.81001150769126\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:18,  3.89it/s]</pre> <pre>57.021253422707716\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:00&lt;00:17,  3.94it/s]</pre> <pre>57.03606452556754\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:17,  4.03it/s]</pre> <pre>55.01907603090048\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:01&lt;00:17,  3.89it/s]</pre> <pre>55.948979111590106\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:01&lt;00:16,  4.03it/s]</pre> <pre>54.658572212946716\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:01&lt;00:16,  4.05it/s]</pre> <pre>54.103500021108545\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:02&lt;00:16,  4.00it/s]</pre> <pre>55.95261558620846\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:02&lt;00:15,  4.07it/s]</pre> <pre>56.17397681510489\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:02&lt;00:15,  4.10it/s]</pre> <pre>55.68982270831185\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:02&lt;00:15,  4.10it/s]</pre> <pre>56.66548505232444\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:02&lt;00:14,  4.10it/s]</pre> <pre>55.59166201959909\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:03&lt;00:14,  4.11it/s]</pre> <pre>56.28768461615111\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:03&lt;00:14,  4.05it/s]</pre> <pre>53.5841019455057\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:03&lt;00:14,  4.10it/s]</pre> <pre>51.219879735610576\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:03&lt;00:13,  4.14it/s]</pre> <pre>53.3326919553966\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:04&lt;00:13,  4.18it/s]</pre> <pre>54.36838768775253\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:04&lt;00:13,  4.20it/s]</pre> <pre>54.29955535061973\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:04&lt;00:13,  4.12it/s]</pre> <pre>52.843502151506506\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:04&lt;00:12,  4.16it/s]</pre> <pre>52.65302903101675\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:05&lt;00:12,  4.11it/s]</pre> <pre>52.651271787138796\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:05&lt;00:12,  4.09it/s]</pre> <pre>51.99497412458004\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:05&lt;00:12,  4.13it/s]</pre> <pre>51.44014402251629\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:05&lt;00:12,  4.06it/s]</pre> <pre>50.41515536370429\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:06&lt;00:11,  4.02it/s]</pre> <pre>55.54610945878348\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:06&lt;00:11,  4.06it/s]</pre> <pre>54.728938421270556\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:06&lt;00:11,  4.08it/s]</pre> <pre>53.35420269007324\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:06&lt;00:11,  4.05it/s]</pre> <pre>51.8395168163064\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:07&lt;00:10,  4.01it/s]</pre> <pre>50.643930287904624\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:07&lt;00:10,  4.01it/s]</pre> <pre>53.23902494095577\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:07&lt;00:10,  4.05it/s]</pre> <pre>56.12275162081973\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:07&lt;00:10,  4.04it/s]</pre> <pre>54.1165298561657\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:08&lt;00:09,  4.02it/s]</pre> <pre>52.20990181817291\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:08&lt;00:10,  3.82it/s]</pre> <pre>47.24249095731429\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:08&lt;00:09,  3.87it/s]</pre> <pre>54.3728755445471\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:08&lt;00:09,  3.83it/s]</pre> <pre>49.98605375393234\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:09&lt;00:09,  3.89it/s]</pre> <pre>49.074190758587264\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:09&lt;00:09,  3.84it/s]</pre> <pre>49.82133894673302\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:09&lt;00:08,  3.81it/s]</pre> <pre>49.922531820785906\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:09&lt;00:08,  3.83it/s]</pre> <pre>43.911201247764026\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:10&lt;00:08,  3.79it/s]</pre> <pre>46.674255019387836\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:10&lt;00:08,  3.72it/s]</pre> <pre>41.28191729291823\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:10&lt;00:07,  3.86it/s]</pre> <pre>40.88921155203411\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:11&lt;00:07,  3.94it/s]</pre> <pre>40.555314537242054\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:11&lt;00:07,  4.00it/s]</pre> <pre>41.59568943454349\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:11&lt;00:06,  4.08it/s]</pre> <pre>44.64359163464049\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:11&lt;00:06,  4.12it/s]</pre> <pre>45.801298075229155\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:11&lt;00:06,  4.04it/s]</pre> <pre>47.40695262177471\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:12&lt;00:05,  4.01it/s]</pre> <pre>44.941753193899046\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:12&lt;00:05,  3.93it/s]</pre> <pre>50.81491486660384\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:12&lt;00:05,  3.83it/s]</pre> <pre>52.34091738459968\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:13&lt;00:05,  3.87it/s]</pre> <pre>52.59518974727124\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:13&lt;00:05,  3.88it/s]</pre> <pre>53.01581413411577\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:13&lt;00:04,  3.98it/s]</pre> <pre>54.09160202261134\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:13&lt;00:04,  4.00it/s]</pre> <pre>53.15323396300221\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:14&lt;00:04,  3.98it/s]</pre> <pre>49.5853057650359\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:14&lt;00:04,  3.92it/s]</pre> <pre>49.94251474914698\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:14&lt;00:03,  3.92it/s]</pre> <pre>52.138533397277186\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:14&lt;00:03,  3.96it/s]</pre> <pre>49.39146973011266\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:15&lt;00:03,  3.89it/s]</pre> <pre>48.60537643082395\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:15&lt;00:03,  3.89it/s]</pre> <pre>51.01229964929651\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:15&lt;00:02,  3.93it/s]</pre> <pre>51.163694519011855\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:15&lt;00:02,  3.94it/s]</pre> <pre>54.089626509317085\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:16&lt;00:02,  3.95it/s]</pre> <pre>52.59671426401515\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:16&lt;00:02,  3.86it/s]</pre> <pre>52.98380259141444\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:16&lt;00:01,  3.87it/s]</pre> <pre>54.84801215166554\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:16&lt;00:01,  3.89it/s]</pre> <pre>54.20493709787149\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:17&lt;00:01,  3.95it/s]</pre> <pre>51.42861130220196\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:17&lt;00:01,  3.93it/s]</pre> <pre>51.36420471046843\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:17&lt;00:00,  3.94it/s]</pre> <pre>53.30673323384386\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:17&lt;00:00,  3.99it/s]</pre> <pre>53.54117629443261\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:18&lt;00:00,  3.92it/s]</pre> <pre>53.20547839426329\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:18&lt;00:00,  3.97it/s]</pre> <pre>51.2638528773447\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Budapeszt model selection:   0%|                                                                | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Budapeszt model selection:   4%|\u2588\u2588                                                      | 1/27 [00:00&lt;00:08,  2.94it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4433.95, ADF p-value: 0.0018, Best_Order: (0, 0, 0), Best_aicc: 4433.95\n(0, 0, 1)\n2\n</pre> <pre>Budapeszt model selection:   7%|\u2588\u2588\u2588\u2588\u258f                                                   | 2/27 [00:00&lt;00:09,  2.69it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 4117.49, ADF p-value: 0.0741, Best_Order: (0, 0, 0), Best_aicc: 4433.95\n(0, 0, 2)\n2\n</pre> <pre>Budapeszt model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                               | 4/27 [00:01&lt;00:07,  3.02it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3948.06, ADF p-value: 0.1780, Best_Order: (0, 0, 0), Best_aicc: 4433.95\n(0, 1, 0)\n2\n1\nOrder: (0, 1, 0), AICc: 3490.36, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3490.36\n(0, 1, 1)\n2\n</pre> <pre>Budapeszt model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                             | 5/27 [00:01&lt;00:05,  3.74it/s]</pre> <pre>1\nOrder: (0, 1, 1), AICc: 3478.47, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3478.47\n(0, 1, 2)\n2\n</pre> <pre>Budapeszt model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                           | 6/27 [00:01&lt;00:05,  3.90it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3425.83, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(0, 2, 0)\n2\n</pre> <pre>Budapeszt model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 7/27 [00:02&lt;00:04,  4.23it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3960.10, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(0, 2, 1)\n2\n</pre> <pre>Budapeszt model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                       | 8/27 [00:02&lt;00:05,  3.59it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3485.14, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(0, 2, 2)\n2\n</pre> <pre>Budapeszt model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                     | 9/27 [00:02&lt;00:06,  2.80it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3476.87, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(1, 0, 0)\n2\n</pre> <pre>Budapeszt model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                  | 10/27 [00:03&lt;00:05,  2.97it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3481.83, ADF p-value: 0.0016, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(1, 0, 1)\n2\n</pre> <pre>Budapeszt model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 11/27 [00:03&lt;00:06,  2.61it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3475.36, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(1, 0, 2)\n2\n</pre> <pre>Budapeszt model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                            | 13/27 [00:04&lt;00:05,  2.74it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3431.69, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3488.77, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(1, 1, 1)\n2\n</pre> <pre>Budapeszt model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                          | 14/27 [00:04&lt;00:04,  2.97it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3426.20, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3425.83\n(1, 1, 2)\n2\n</pre> <pre>Budapeszt model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 15/27 [00:05&lt;00:03,  3.04it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3411.65, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(1, 2, 0)\n2\n1\n</pre> <pre>Budapeszt model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                      | 16/27 [00:05&lt;00:03,  3.49it/s]</pre> <pre>Order: (1, 2, 0), AICc: 3839.78, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(1, 2, 1)\n2\n</pre> <pre>Budapeszt model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                    | 17/27 [00:05&lt;00:03,  3.33it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3484.68, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(1, 2, 2)\n2\n</pre> <pre>Budapeszt model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                  | 18/27 [00:06&lt;00:03,  2.61it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3483.99, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 0, 0)\n2\n</pre> <pre>Budapeszt model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 19/27 [00:06&lt;00:03,  2.48it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3476.72, ADF p-value: 0.0008, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 0, 1)\n2\n</pre> <pre>Budapeszt model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b              | 20/27 [00:07&lt;00:03,  2.26it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3496.21, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 0, 2)\n2\n</pre> <pre>Budapeszt model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a            | 21/27 [00:07&lt;00:02,  2.02it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3522.94, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 1, 0)\n2\n1\n</pre> <pre>Budapeszt model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a          | 22/27 [00:07&lt;00:02,  2.48it/s]</pre> <pre>Order: (2, 1, 0), AICc: 3455.50, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 1, 1)\n2\n</pre> <pre>Budapeszt model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 23/27 [00:08&lt;00:01,  2.73it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3419.94, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 1, 2)\n2\n</pre> <pre>Budapeszt model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589      | 24/27 [00:08&lt;00:01,  2.56it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3413.64, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 2, 0)\n2\n</pre> <pre>Budapeszt model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589    | 25/27 [00:08&lt;00:00,  2.93it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3741.82, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 2, 1)\n2\n</pre> <pre>Budapeszt model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 26/27 [00:09&lt;00:00,  2.49it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3459.78, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n(2, 2, 2)\n2\n</pre> <pre>Budapeszt model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:10&lt;00:00,  2.65it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3417.81, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3411.65\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:21,  3.37it/s]</pre> <pre>55.171419468172544\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:19,  3.60it/s]</pre> <pre>57.383272212710935\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:00&lt;00:20,  3.42it/s]</pre> <pre>56.18133361044262\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:20,  3.33it/s]</pre> <pre>54.93486522007264\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:01&lt;00:20,  3.25it/s]</pre> <pre>56.38577807648289\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:01&lt;00:19,  3.36it/s]</pre> <pre>55.94445624613602\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:02&lt;00:19,  3.37it/s]</pre> <pre>55.64958667500238\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:02&lt;00:19,  3.35it/s]</pre> <pre>55.96501014033744\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:02&lt;00:19,  3.36it/s]</pre> <pre>54.621752813112806\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:02&lt;00:18,  3.42it/s]</pre> <pre>54.871327463503576\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:03&lt;00:18,  3.34it/s]</pre> <pre>54.95081635825984\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:03&lt;00:18,  3.26it/s]</pre> <pre>54.22023272799812\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:03&lt;00:18,  3.22it/s]</pre> <pre>52.94257297783219\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:04&lt;00:18,  3.18it/s]</pre> <pre>53.21881825946278\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:04&lt;00:18,  3.12it/s]</pre> <pre>54.04744189070413\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:04&lt;00:17,  3.17it/s]</pre> <pre>51.515703078891555\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:05&lt;00:17,  3.19it/s]</pre> <pre>53.77117696113525\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:05&lt;00:16,  3.24it/s]</pre> <pre>52.226448856029805\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:05&lt;00:16,  3.30it/s]</pre> <pre>53.731907197977215\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:06&lt;00:16,  3.27it/s]</pre> <pre>50.84590298418686\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:06&lt;00:15,  3.34it/s]</pre> <pre>49.8256910959653\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:06&lt;00:14,  3.42it/s]</pre> <pre>51.364400519558956\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:06&lt;00:14,  3.41it/s]</pre> <pre>51.50182100143126\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:07&lt;00:13,  3.52it/s]</pre> <pre>48.32640481501648\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:07&lt;00:13,  3.50it/s]</pre> <pre>50.18076781317771\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:07&lt;00:13,  3.54it/s]</pre> <pre>53.63267322187731\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:08&lt;00:12,  3.54it/s]</pre> <pre>51.94496127191063\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:08&lt;00:13,  3.42it/s]</pre> <pre>50.89089628648329\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:08&lt;00:12,  3.40it/s]</pre> <pre>50.757657980426096\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:08&lt;00:13,  3.30it/s]</pre> <pre>47.41879632730064\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:09&lt;00:12,  3.37it/s]</pre> <pre>48.28683013056282\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:09&lt;00:11,  3.42it/s]</pre> <pre>51.167093237752354\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:09&lt;00:11,  3.39it/s]</pre> <pre>50.96982926153988\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:10&lt;00:11,  3.38it/s]</pre> <pre>49.15486224380918\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:10&lt;00:11,  3.34it/s]</pre> <pre>46.98492260759619\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:10&lt;00:11,  3.35it/s]</pre> <pre>48.36585514260303\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:11&lt;00:10,  3.46it/s]</pre> <pre>45.60395882359695\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:11&lt;00:10,  3.46it/s]</pre> <pre>44.538691147708676\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:11&lt;00:09,  3.42it/s]</pre> <pre>46.90599512644454\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:11&lt;00:09,  3.51it/s]</pre> <pre>49.410785007507535\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:12&lt;00:09,  3.48it/s]</pre> <pre>44.42027723035327\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:12&lt;00:09,  3.39it/s]</pre> <pre>46.550920742217514\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:12&lt;00:08,  3.36it/s]</pre> <pre>47.69331962295414\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:13&lt;00:08,  3.38it/s]</pre> <pre>48.34255288449433\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:13&lt;00:08,  3.37it/s]</pre> <pre>43.2541054149945\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:13&lt;00:08,  3.34it/s]</pre> <pre>43.47653422714841\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:13&lt;00:07,  3.30it/s]</pre> <pre>45.84392486682155\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:14&lt;00:07,  3.19it/s]</pre> <pre>47.61863037454897\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:14&lt;00:07,  3.16it/s]</pre> <pre>47.405018805080125\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:14&lt;00:07,  3.18it/s]</pre> <pre>47.214144929517055\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:15&lt;00:06,  3.16it/s]</pre> <pre>46.988207499774305\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:15&lt;00:06,  3.12it/s]</pre> <pre>47.32841724806599\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:15&lt;00:06,  3.11it/s]</pre> <pre>47.885496681951295\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:16&lt;00:06,  3.13it/s]</pre> <pre>49.192847588550016\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:16&lt;00:05,  3.11it/s]</pre> <pre>50.14741146051948\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:16&lt;00:05,  3.15it/s]</pre> <pre>50.15355679967736\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:17&lt;00:05,  3.11it/s]</pre> <pre>48.842708565270094\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:17&lt;00:04,  3.13it/s]</pre> <pre>46.79093514008625\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:17&lt;00:04,  3.09it/s]</pre> <pre>47.7773701633514\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:18&lt;00:04,  3.11it/s]</pre> <pre>47.38279620841827\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:18&lt;00:03,  3.09it/s]</pre> <pre>46.080705960546894\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:18&lt;00:03,  3.09it/s]</pre> <pre>47.422219711301\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:19&lt;00:03,  3.07it/s]</pre> <pre>48.64538851438898\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:19&lt;00:02,  3.06it/s]</pre> <pre>47.97874130416601\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:19&lt;00:02,  3.04it/s]</pre> <pre>47.21415568563646\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:20&lt;00:02,  3.09it/s]</pre> <pre>49.34904919289276\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:20&lt;00:01,  3.13it/s]</pre> <pre>52.07786738464221\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:20&lt;00:01,  3.15it/s]</pre> <pre>50.69692358668749\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:21&lt;00:01,  3.17it/s]</pre> <pre>48.72416114322055\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:21&lt;00:00,  3.19it/s]</pre> <pre>48.72418550619625\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:21&lt;00:00,  3.23it/s]</pre> <pre>48.76365325433997\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:21&lt;00:00,  3.26it/s]</pre> <pre>49.0398584623111\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:22&lt;00:00,  3.27it/s]</pre> <pre>50.065724442941736\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Lisbona model selection:   0%|                                                                  | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Lisbona model selection:   7%|\u2588\u2588\u2588\u2588\u258e                                                     | 2/27 [00:00&lt;00:05,  4.78it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4000.18, ADF p-value: 0.0000, Best_Order: (0, 0, 0), Best_aicc: 4000.18\n(0, 0, 1)\n2\n1\nOrder: (0, 0, 1), AICc: 3687.00, ADF p-value: 0.0001, Best_Order: (0, 0, 1), Best_aicc: 3687.00\n(0, 0, 2)\n2\n</pre> <pre>Lisbona model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                                 | 4/27 [00:01&lt;00:06,  3.82it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3541.99, ADF p-value: 0.0263, Best_Order: (0, 0, 2), Best_aicc: 3541.99\n(0, 1, 0)\n2\n1\nOrder: (0, 1, 0), AICc: 3093.81, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3093.81\n(0, 1, 1)\n2\n</pre> <pre>Lisbona model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                               | 5/27 [00:01&lt;00:04,  4.58it/s]</pre> <pre>1\nOrder: (0, 1, 1), AICc: 3090.77, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3090.77\n(0, 1, 2)\n2\n1\n</pre> <pre>Lisbona model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 6/27 [00:01&lt;00:04,  4.81it/s]</pre> <pre>Order: (0, 1, 2), AICc: 3029.69, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(0, 2, 0)\n2\n1\nOrder: (0, 2, 0), AICc: 3528.96, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n</pre> <pre>Lisbona model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 7/27 [00:01&lt;00:03,  5.04it/s]</pre> <pre>(0, 2, 1)\n2\n</pre> <pre>Lisbona model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                        | 8/27 [00:01&lt;00:04,  3.91it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3093.24, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(0, 2, 2)\n2\n</pre> <pre>Lisbona model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                      | 9/27 [00:02&lt;00:05,  3.10it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3086.83, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(1, 0, 0)\n2\n</pre> <pre>Lisbona model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                    | 10/27 [00:02&lt;00:05,  3.06it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3078.68, ADF p-value: 0.0112, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(1, 0, 1)\n2\n</pre> <pre>Lisbona model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                 | 11/27 [00:03&lt;00:06,  2.59it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3090.07, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(1, 0, 2)\n2\n</pre> <pre>Lisbona model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 13/27 [00:04&lt;00:05,  2.73it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3143.61, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3095.69, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(1, 1, 1)\n2\n</pre> <pre>Lisbona model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                           | 14/27 [00:04&lt;00:04,  3.01it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3038.97, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3029.69\n(1, 1, 2)\n2\n</pre> <pre>Lisbona model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                       | 16/27 [00:04&lt;00:02,  3.92it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3016.25, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(1, 2, 0)\n2\n1\nOrder: (1, 2, 0), AICc: 3429.09, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(1, 2, 1)\n2\n</pre> <pre>Lisbona model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                     | 17/27 [00:05&lt;00:02,  3.34it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3095.28, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(1, 2, 2)\n2\n</pre> <pre>Lisbona model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                   | 18/27 [00:05&lt;00:03,  2.75it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3082.57, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 0, 0)\n2\n</pre> <pre>Lisbona model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                 | 19/27 [00:06&lt;00:03,  2.47it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3076.60, ADF p-value: 0.0136, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 0, 1)\n2\n</pre> <pre>Lisbona model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 20/27 [00:06&lt;00:03,  2.01it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3195.75, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 0, 2)\n2\n</pre> <pre>Lisbona model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e            | 21/27 [00:07&lt;00:03,  1.80it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3225.54, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 1, 0)\n2\n1\nOrder: (2, 1, 0), AICc: 3057.07, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n</pre> <pre>Lisbona model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d          | 22/27 [00:07&lt;00:02,  2.25it/s]</pre> <pre>(2, 1, 1)\n2\n</pre> <pre>Lisbona model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c        | 23/27 [00:08&lt;00:01,  2.52it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3019.96, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 1, 2)\n2\n</pre> <pre>Lisbona model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b      | 24/27 [00:08&lt;00:01,  2.52it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3017.68, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 2, 0)\n2\n1\n</pre> <pre>Lisbona model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a    | 25/27 [00:08&lt;00:00,  2.95it/s]</pre> <pre>Order: (2, 2, 0), AICc: 3342.07, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 2, 1)\n2\n</pre> <pre>Lisbona model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 26/27 [00:08&lt;00:00,  2.98it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3061.72, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n(2, 2, 2)\n2\n</pre> <pre>Lisbona model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:09&lt;00:00,  2.80it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3021.59, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3016.25\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/70 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/70 [00:00&lt;00:17,  3.98it/s]</pre> <pre>55.638533504210656\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/70 [00:00&lt;00:17,  3.93it/s]</pre> <pre>54.34913602586294\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/70 [00:00&lt;00:17,  3.91it/s]</pre> <pre>55.581947377416775\n1\n</pre> <pre>Analysed test_samples from:   6%|\u2588\u2588\u2588\u258f                                                   | 4/70 [00:01&lt;00:17,  3.78it/s]</pre> <pre>54.2796588053433\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u2589                                                   | 5/70 [00:01&lt;00:17,  3.69it/s]</pre> <pre>54.83680029491033\n1\n</pre> <pre>Analysed test_samples from:   9%|\u2588\u2588\u2588\u2588\u258b                                                  | 6/70 [00:01&lt;00:17,  3.62it/s]</pre> <pre>56.554787309373154\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258c                                                 | 7/70 [00:01&lt;00:17,  3.69it/s]</pre> <pre>57.00424405027884\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                                | 8/70 [00:02&lt;00:16,  3.80it/s]</pre> <pre>57.474946931149795\n1\n</pre> <pre>Analysed test_samples from:  13%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                | 9/70 [00:02&lt;00:15,  3.82it/s]</pre> <pre>56.780300394964776\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                              | 10/70 [00:02&lt;00:15,  3.80it/s]</pre> <pre>57.13698042825364\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                             | 11/70 [00:02&lt;00:15,  3.89it/s]</pre> <pre>56.143105598330386\n1\n</pre> <pre>Analysed test_samples from:  17%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                            | 12/70 [00:03&lt;00:14,  3.96it/s]</pre> <pre>56.177022648277834\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                            | 13/70 [00:03&lt;00:14,  4.02it/s]</pre> <pre>56.76094274411291\n1\n</pre> <pre>Analysed test_samples from:  20%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                           | 14/70 [00:03&lt;00:13,  4.01it/s]</pre> <pre>56.930625070022714\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                          | 15/70 [00:03&lt;00:13,  3.97it/s]</pre> <pre>56.23478676507199\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                         | 16/70 [00:04&lt;00:13,  3.98it/s]</pre> <pre>55.47108597816368\n1\n</pre> <pre>Analysed test_samples from:  24%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                         | 17/70 [00:04&lt;00:12,  4.08it/s]</pre> <pre>56.31961238613876\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                        | 18/70 [00:04&lt;00:12,  4.07it/s]</pre> <pre>56.83885001295771\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                       | 19/70 [00:04&lt;00:12,  4.07it/s]</pre> <pre>57.30344138029423\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                      | 20/70 [00:05&lt;00:12,  3.96it/s]</pre> <pre>57.324873503656335\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                     | 21/70 [00:05&lt;00:12,  3.87it/s]</pre> <pre>57.466400663936895\n1\n</pre> <pre>Analysed test_samples from:  31%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                     | 22/70 [00:05&lt;00:12,  3.88it/s]</pre> <pre>56.805448534775266\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                    | 23/70 [00:05&lt;00:12,  3.83it/s]</pre> <pre>57.11389813321358\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                   | 24/70 [00:06&lt;00:12,  3.78it/s]</pre> <pre>56.79512934365613\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                  | 25/70 [00:06&lt;00:12,  3.67it/s]</pre> <pre>56.93088445148352\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                  | 26/70 [00:06&lt;00:11,  3.67it/s]</pre> <pre>57.08361411766375\n1\n</pre> <pre>Analysed test_samples from:  39%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                 | 27/70 [00:07&lt;00:11,  3.62it/s]</pre> <pre>57.42941204706231\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                | 28/70 [00:07&lt;00:11,  3.69it/s]</pre> <pre>56.540571636158276\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                               | 29/70 [00:07&lt;00:10,  3.79it/s]</pre> <pre>56.681377151938456\n1\n</pre> <pre>Analysed test_samples from:  43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                              | 30/70 [00:07&lt;00:10,  3.76it/s]</pre> <pre>55.634026456029716\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                              | 31/70 [00:08&lt;00:10,  3.79it/s]</pre> <pre>54.39265484712358\n1\n</pre> <pre>Analysed test_samples from:  46%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                             | 32/70 [00:08&lt;00:10,  3.73it/s]</pre> <pre>53.696869498821115\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                            | 33/70 [00:08&lt;00:09,  3.72it/s]</pre> <pre>53.78178168325519\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                           | 34/70 [00:08&lt;00:09,  3.70it/s]</pre> <pre>55.49835638682394\n1\n</pre> <pre>Analysed test_samples from:  50%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                           | 35/70 [00:09&lt;00:09,  3.67it/s]</pre> <pre>56.08978612097363\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                          | 36/70 [00:09&lt;00:09,  3.68it/s]</pre> <pre>56.46314157245405\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                         | 37/70 [00:09&lt;00:09,  3.46it/s]</pre> <pre>57.17594634449375\n1\n</pre> <pre>Analysed test_samples from:  54%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                        | 38/70 [00:10&lt;00:09,  3.42it/s]</pre> <pre>58.08038471927539\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                        | 39/70 [00:10&lt;00:09,  3.37it/s]</pre> <pre>57.54924819642701\n1\n</pre> <pre>Analysed test_samples from:  57%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                       | 40/70 [00:10&lt;00:08,  3.36it/s]</pre> <pre>57.49833473668315\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                      | 41/70 [00:10&lt;00:08,  3.41it/s]</pre> <pre>57.1653254813356\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                     | 42/70 [00:11&lt;00:08,  3.50it/s]</pre> <pre>57.141995033961166\n1\n</pre> <pre>Analysed test_samples from:  61%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                    | 43/70 [00:11&lt;00:07,  3.51it/s]</pre> <pre>57.379583358215875\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                    | 44/70 [00:11&lt;00:07,  3.53it/s]</pre> <pre>57.41352950418796\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                   | 45/70 [00:12&lt;00:07,  3.51it/s]</pre> <pre>57.24382461324576\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                  | 46/70 [00:12&lt;00:06,  3.47it/s]</pre> <pre>57.09108370784904\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                 | 47/70 [00:12&lt;00:06,  3.43it/s]</pre> <pre>56.93834461757357\n1\n</pre> <pre>Analysed test_samples from:  69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                 | 48/70 [00:12&lt;00:06,  3.43it/s]</pre> <pre>55.648589145313146\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                | 49/70 [00:13&lt;00:06,  3.27it/s]</pre> <pre>55.66555281402784\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c               | 50/70 [00:13&lt;00:06,  3.27it/s]</pre> <pre>56.734692586724194\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e              | 51/70 [00:13&lt;00:05,  3.28it/s]</pre> <pre>56.84949887695948\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588              | 52/70 [00:14&lt;00:05,  3.30it/s]</pre> <pre>56.60551274991194\n1\n</pre> <pre>Analysed test_samples from:  76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589             | 53/70 [00:14&lt;00:05,  3.31it/s]</pre> <pre>57.05712610010603\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b            | 54/70 [00:14&lt;00:04,  3.31it/s]</pre> <pre>57.20985894896014\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d           | 55/70 [00:15&lt;00:04,  3.31it/s]</pre> <pre>57.82835331767006\n1\n</pre> <pre>Analysed test_samples from:  80%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f          | 56/70 [00:15&lt;00:04,  3.20it/s]</pre> <pre>57.294699655871824\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589          | 57/70 [00:15&lt;00:04,  3.11it/s]</pre> <pre>57.14196677778301\n1\n</pre> <pre>Analysed test_samples from:  83%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b         | 58/70 [00:16&lt;00:03,  3.09it/s]</pre> <pre>56.95529618371146\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c        | 59/70 [00:16&lt;00:03,  3.11it/s]</pre> <pre>56.93832742628798\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e       | 60/70 [00:16&lt;00:03,  3.09it/s]</pre> <pre>57.115466894582184\n1\n</pre> <pre>Analysed test_samples from:  87%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588       | 61/70 [00:17&lt;00:02,  3.10it/s]</pre> <pre>57.35304371577831\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a      | 62/70 [00:17&lt;00:02,  3.00it/s]</pre> <pre>57.12052445897405\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c     | 63/70 [00:17&lt;00:02,  3.02it/s]</pre> <pre>56.91186325923353\n1\n</pre> <pre>Analysed test_samples from:  91%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e    | 64/70 [00:18&lt;00:01,  3.02it/s]</pre> <pre>57.09852498931692\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f   | 65/70 [00:18&lt;00:01,  3.06it/s]</pre> <pre>56.79309402059438\n1\n</pre> <pre>Analysed test_samples from:  94%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589   | 66/70 [00:18&lt;00:01,  3.18it/s]</pre> <pre>56.7761657519561\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b  | 67/70 [00:19&lt;00:00,  3.22it/s]</pre> <pre>56.301025572563645\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d | 68/70 [00:19&lt;00:00,  3.19it/s]</pre> <pre>56.89494198862489\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f| 69/70 [00:19&lt;00:00,  3.25it/s]</pre> <pre>57.30224965775684\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 70/70 [00:19&lt;00:00,  3.51it/s]</pre> <pre>56.419846653620056\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Londyn model selection:   0%|                                                                   | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Londyn model selection:   4%|\u2588\u2588\u258f                                                        | 1/27 [00:00&lt;00:08,  3.12it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 3531.24, ADF p-value: 0.0000, Best_Order: (0, 0, 0), Best_aicc: 3531.24\n(0, 0, 1)\n2\n</pre> <pre>Londyn model selection:   7%|\u2588\u2588\u2588\u2588\u258e                                                      | 2/27 [00:00&lt;00:07,  3.31it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3247.42, ADF p-value: 0.0000, Best_Order: (0, 0, 1), Best_aicc: 3247.42\n(0, 0, 2)\n2\n</pre> <pre>Londyn model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                                    | 3/27 [00:00&lt;00:07,  3.00it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3147.15, ADF p-value: 0.0000, Best_Order: (0, 0, 2), Best_aicc: 3147.15\n(0, 1, 0)\n2\n1\n</pre> <pre>Londyn model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                  | 4/27 [00:01&lt;00:06,  3.55it/s]</pre> <pre>Order: (0, 1, 0), AICc: 2978.23, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 2978.23\n(0, 1, 1)\n2\n1\nOrder: (0, 1, 1), AICc: 2970.09, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 2970.09\n</pre> <pre>Londyn model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                              | 6/27 [00:01&lt;00:04,  4.32it/s]</pre> <pre>(0, 1, 2)\n2\n1\nOrder: (0, 1, 2), AICc: 2913.23, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n</pre> <pre>Londyn model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 7/27 [00:01&lt;00:04,  4.61it/s]</pre> <pre>(0, 2, 0)\n2\n1\nOrder: (0, 2, 0), AICc: 3456.92, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(0, 2, 1)\n2\n</pre> <pre>Londyn model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                         | 8/27 [00:02&lt;00:05,  3.65it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 2977.13, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(0, 2, 2)\n2\n</pre> <pre>Londyn model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                       | 9/27 [00:02&lt;00:06,  2.87it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 2970.76, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(1, 0, 0)\n2\n</pre> <pre>Londyn model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                    | 10/27 [00:03&lt;00:05,  2.90it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 2981.98, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(1, 0, 1)\n2\n</pre> <pre>Londyn model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                  | 11/27 [00:03&lt;00:05,  2.85it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 2975.01, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(1, 0, 2)\n2\n</pre> <pre>Londyn model selection:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                | 12/27 [00:03&lt;00:06,  2.37it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 2918.61, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(1, 1, 0)\n2\n</pre> <pre>Londyn model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                              | 13/27 [00:04&lt;00:04,  2.80it/s]</pre> <pre>1\nOrder: (1, 1, 0), AICc: 2977.24, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 2913.23\n(1, 1, 1)\n2\n</pre> <pre>Londyn model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                            | 14/27 [00:04&lt;00:04,  2.74it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 2904.19, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 2904.19\n(1, 1, 2)\n2\n</pre> <pre>Londyn model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                         | 15/27 [00:04&lt;00:04,  2.72it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 2891.63, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(1, 2, 0)\n2\n</pre> <pre>Londyn model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 16/27 [00:05&lt;00:03,  2.88it/s]</pre> <pre>1\nOrder: (1, 2, 0), AICc: 3325.44, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(1, 2, 1)\n2\n</pre> <pre>Londyn model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 17/27 [00:05&lt;00:03,  2.70it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 2977.37, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(1, 2, 2)\n2\n</pre> <pre>Londyn model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                   | 18/27 [00:06&lt;00:03,  2.49it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 2977.02, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 0, 0)\n2\n</pre> <pre>Londyn model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                 | 19/27 [00:06&lt;00:03,  2.45it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 2976.98, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 0, 1)\n2\n</pre> <pre>Londyn model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589               | 20/27 [00:07&lt;00:03,  2.14it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3001.97, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 0, 2)\n2\n</pre> <pre>Londyn model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588             | 21/27 [00:07&lt;00:03,  1.91it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 2996.36, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 1, 0)\n2\n1\n</pre> <pre>Londyn model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e          | 22/27 [00:08&lt;00:02,  2.33it/s]</pre> <pre>Order: (2, 1, 0), AICc: 2947.42, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 1, 1)\n2\n</pre> <pre>Londyn model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d        | 23/27 [00:08&lt;00:01,  2.51it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 2895.85, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 1, 2)\n2\n</pre> <pre>Londyn model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c      | 24/27 [00:08&lt;00:01,  2.62it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 2893.32, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 2, 0)\n2\n</pre> <pre>Londyn model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:08&lt;00:00,  2.83it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3240.10, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 2, 1)\n2\n</pre> <pre>Londyn model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:09&lt;00:00,  2.55it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 2952.40, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n(2, 2, 2)\n2\n</pre> <pre>Londyn model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:10&lt;00:00,  2.64it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 2901.26, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 2891.63\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/72 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/72 [00:00&lt;00:23,  3.07it/s]</pre> <pre>53.700043525275596\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/72 [00:00&lt;00:24,  2.89it/s]</pre> <pre>52.128507687567506\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/72 [00:01&lt;00:24,  2.81it/s]</pre> <pre>53.53918838468976\n1\n</pre> <pre>Analysed test_samples from:   6%|\u2588\u2588\u2588                                                    | 4/72 [00:01&lt;00:21,  3.20it/s]</pre> <pre>52.35377654490019\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/72 [00:01&lt;00:19,  3.48it/s]</pre> <pre>51.746621572936064\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/72 [00:01&lt;00:21,  3.02it/s]</pre> <pre>53.487163908133965\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/72 [00:02&lt;00:22,  2.90it/s]</pre> <pre>53.03800287357925\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/72 [00:02&lt;00:19,  3.22it/s]</pre> <pre>54.00379146973812\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                | 9/72 [00:02&lt;00:18,  3.36it/s]</pre> <pre>52.31339117579628\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                              | 10/72 [00:03&lt;00:19,  3.24it/s]</pre> <pre>52.310426618758115\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                             | 11/72 [00:03&lt;00:18,  3.23it/s]</pre> <pre>53.68333454251308\n1\n</pre> <pre>Analysed test_samples from:  17%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                             | 12/72 [00:03&lt;00:19,  3.12it/s]</pre> <pre>52.7681885200096\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                            | 13/72 [00:04&lt;00:18,  3.22it/s]</pre> <pre>50.46784121817875\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                           | 14/72 [00:04&lt;00:17,  3.28it/s]</pre> <pre>50.491993637327695\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                          | 15/72 [00:04&lt;00:16,  3.38it/s]</pre> <pre>49.9344476607515\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                          | 16/72 [00:04&lt;00:16,  3.42it/s]</pre> <pre>50.79100638119145\n1\n</pre> <pre>Analysed test_samples from:  24%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                         | 17/72 [00:05&lt;00:15,  3.60it/s]</pre> <pre>49.97866797190333\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                        | 18/72 [00:05&lt;00:14,  3.67it/s]</pre> <pre>49.93279515215053\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                       | 19/72 [00:05&lt;00:14,  3.67it/s]</pre> <pre>50.487365395534\n1\n</pre> <pre>Analysed test_samples from:  28%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                       | 20/72 [00:06&lt;00:14,  3.71it/s]</pre> <pre>48.490592019215754\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                      | 21/72 [00:06&lt;00:13,  3.70it/s]</pre> <pre>48.341795820833795\n1\n</pre> <pre>Analysed test_samples from:  31%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                     | 22/72 [00:06&lt;00:13,  3.70it/s]</pre> <pre>47.665369471405114\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                    | 23/72 [00:06&lt;00:12,  3.79it/s]</pre> <pre>49.90286331609413\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                    | 24/72 [00:07&lt;00:12,  3.72it/s]</pre> <pre>51.746959805386325\n1\n</pre> <pre>Analysed test_samples from:  35%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                   | 25/72 [00:07&lt;00:12,  3.70it/s]</pre> <pre>51.34489200280452\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                  | 26/72 [00:07&lt;00:12,  3.67it/s]</pre> <pre>49.27826461388156\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                 | 27/72 [00:07&lt;00:12,  3.65it/s]</pre> <pre>46.4605339552424\n1\n</pre> <pre>Analysed test_samples from:  39%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                 | 28/72 [00:08&lt;00:12,  3.62it/s]</pre> <pre>47.95628874844493\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                | 29/72 [00:08&lt;00:11,  3.61it/s]</pre> <pre>53.56417949204265\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                               | 30/72 [00:08&lt;00:11,  3.64it/s]</pre> <pre>51.64631315907371\n1\n</pre> <pre>Analysed test_samples from:  43%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                              | 31/72 [00:09&lt;00:11,  3.64it/s]</pre> <pre>50.91423062183446\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                              | 32/72 [00:09&lt;00:10,  3.65it/s]</pre> <pre>50.98927170052613\n1\n</pre> <pre>Analysed test_samples from:  46%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                             | 33/72 [00:09&lt;00:10,  3.67it/s]</pre> <pre>48.729831274915355\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                            | 34/72 [00:09&lt;00:10,  3.61it/s]</pre> <pre>52.90933255062059\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                           | 35/72 [00:10&lt;00:10,  3.54it/s]</pre> <pre>44.833699823752355\n1\n</pre> <pre>Analysed test_samples from:  50%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                           | 36/72 [00:10&lt;00:10,  3.58it/s]</pre> <pre>40.191641441204226\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                          | 37/72 [00:10&lt;00:09,  3.59it/s]</pre> <pre>43.49328744124696\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                         | 38/72 [00:10&lt;00:09,  3.66it/s]</pre> <pre>49.11095497936694\n1\n</pre> <pre>Analysed test_samples from:  54%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                        | 39/72 [00:11&lt;00:08,  3.75it/s]</pre> <pre>45.00505099955254\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                        | 40/72 [00:11&lt;00:09,  3.37it/s]</pre> <pre>41.707761754281115\n1\n</pre> <pre>Analysed test_samples from:  57%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                       | 41/72 [00:11&lt;00:09,  3.21it/s]</pre> <pre>39.191946516891136\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                      | 42/72 [00:12&lt;00:09,  3.05it/s]</pre> <pre>38.288667040632426\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                     | 43/72 [00:12&lt;00:08,  3.24it/s]</pre> <pre>37.868587392876\n1\n</pre> <pre>Analysed test_samples from:  61%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                     | 44/72 [00:12&lt;00:08,  3.16it/s]</pre> <pre>45.85076541164648\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                    | 45/72 [00:13&lt;00:08,  3.26it/s]</pre> <pre>46.22620817195936\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                   | 46/72 [00:13&lt;00:07,  3.35it/s]</pre> <pre>45.51218617383205\n1\n</pre> <pre>Analysed test_samples from:  65%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                  | 47/72 [00:13&lt;00:07,  3.40it/s]</pre> <pre>43.891413699276185\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                  | 48/72 [00:14&lt;00:07,  3.13it/s]</pre> <pre>46.64817171204582\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                 | 49/72 [00:14&lt;00:07,  3.27it/s]</pre> <pre>48.89402277093959\n1\n</pre> <pre>Analysed test_samples from:  69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                | 50/72 [00:14&lt;00:06,  3.27it/s]</pre> <pre>49.627645195047776\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e               | 51/72 [00:14&lt;00:06,  3.37it/s]</pre> <pre>49.21052560504836\n1\n</pre> <pre>Analysed test_samples from:  72%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588               | 52/72 [00:15&lt;00:05,  3.49it/s]</pre> <pre>49.370924713732194\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a              | 53/72 [00:15&lt;00:05,  3.25it/s]</pre> <pre>51.256687660737\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c             | 54/72 [00:15&lt;00:06,  3.00it/s]</pre> <pre>47.82868295651171\n1\n</pre> <pre>Analysed test_samples from:  76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e            | 55/72 [00:16&lt;00:05,  3.15it/s]</pre> <pre>45.91721955803389\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588            | 56/72 [00:16&lt;00:05,  3.08it/s]</pre> <pre>46.53768062389028\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a           | 57/72 [00:16&lt;00:05,  2.93it/s]</pre> <pre>51.00293851896077\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c          | 58/72 [00:17&lt;00:04,  2.90it/s]</pre> <pre>50.032123240027886\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e         | 59/72 [00:17&lt;00:04,  3.15it/s]</pre> <pre>51.11488389619551\n1\n</pre> <pre>Analysed test_samples from:  83%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 60/72 [00:17&lt;00:03,  3.27it/s]</pre> <pre>50.84511096396315\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 61/72 [00:18&lt;00:03,  3.34it/s]</pre> <pre>49.16440782718508\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 62/72 [00:18&lt;00:03,  3.09it/s]</pre> <pre>51.80241246433608\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 63/72 [00:18&lt;00:02,  3.01it/s]</pre> <pre>50.754896851393795\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 64/72 [00:19&lt;00:02,  2.93it/s]</pre> <pre>52.227575757606246\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 65/72 [00:19&lt;00:02,  3.11it/s]</pre> <pre>56.44374137895359\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 66/72 [00:19&lt;00:01,  3.19it/s]</pre> <pre>54.92519439958987\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 67/72 [00:20&lt;00:01,  3.29it/s]</pre> <pre>47.32231620660458\n1\n</pre> <pre>Analysed test_samples from:  94%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 68/72 [00:20&lt;00:01,  3.34it/s]</pre> <pre>50.66854982755782\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 69/72 [00:20&lt;00:00,  3.33it/s]</pre> <pre>49.90038885031902\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 70/72 [00:20&lt;00:00,  3.37it/s]</pre> <pre>49.64257022854768\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 71/72 [00:21&lt;00:00,  3.35it/s]</pre> <pre>50.12571523285525\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:21&lt;00:00,  3.34it/s]</pre> <pre>48.21790834734276\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Madryd model selection:   0%|                                                                   | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Madryd model selection:   4%|\u2588\u2588\u258f                                                        | 1/27 [00:00&lt;00:08,  3.08it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 5095.04, ADF p-value: 0.1031, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 0, 1)\n2\n</pre> <pre>Madryd model selection:   7%|\u2588\u2588\u2588\u2588\u258e                                                      | 2/27 [00:00&lt;00:06,  3.77it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 4498.82, ADF p-value: 0.0997, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 0, 2)\n2\n</pre> <pre>Madryd model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                  | 4/27 [00:00&lt;00:05,  4.39it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 4223.54, ADF p-value: 0.1386, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 1, 0)\n2\n1\nOrder: (0, 1, 0), AICc: 3374.05, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3374.05\n(0, 1, 1)\n2\n</pre> <pre>Madryd model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                | 5/27 [00:01&lt;00:04,  4.75it/s]</pre> <pre>1\nOrder: (0, 1, 1), AICc: 3371.65, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3371.65\n(0, 1, 2)\n2\n1\nOrder: (0, 1, 2), AICc: 3345.93, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n</pre> <pre>Madryd model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                              | 6/27 [00:01&lt;00:04,  5.09it/s]</pre> <pre>(0, 2, 0)\n2\n</pre> <pre>Madryd model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 7/27 [00:01&lt;00:04,  4.81it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3810.48, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(0, 2, 1)\n2\n</pre> <pre>Madryd model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                         | 8/27 [00:01&lt;00:04,  4.23it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3373.02, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(0, 2, 2)\n2\n</pre> <pre>Madryd model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                       | 9/27 [00:02&lt;00:05,  3.03it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3370.80, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(1, 0, 0)\n2\n</pre> <pre>Madryd model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                    | 10/27 [00:02&lt;00:05,  3.11it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3379.75, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(1, 0, 1)\n2\n</pre> <pre>Madryd model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                  | 11/27 [00:03&lt;00:05,  2.81it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3377.52, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(1, 0, 2)\n2\n</pre> <pre>Madryd model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                              | 13/27 [00:03&lt;00:04,  2.95it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3352.60, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3376.00, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(1, 1, 1)\n2\n</pre> <pre>Madryd model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                            | 14/27 [00:04&lt;00:04,  2.95it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3349.29, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3345.93\n(1, 1, 2)\n2\n</pre> <pre>Madryd model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                         | 15/27 [00:04&lt;00:04,  2.99it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3331.21, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(1, 2, 0)\n2\n1\nOrder: (1, 2, 0), AICc: 3695.81, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n</pre> <pre>Madryd model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 16/27 [00:04&lt;00:03,  3.47it/s]</pre> <pre>(1, 2, 1)\n2\n</pre> <pre>Madryd model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 17/27 [00:05&lt;00:03,  2.89it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3375.06, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(1, 2, 2)\n2\n</pre> <pre>Madryd model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                   | 18/27 [00:05&lt;00:04,  2.24it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3368.84, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 0, 0)\n2\n</pre> <pre>Madryd model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                 | 19/27 [00:06&lt;00:03,  2.22it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3377.58, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 0, 1)\n2\n</pre> <pre>Madryd model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589               | 20/27 [00:06&lt;00:03,  2.03it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3549.70, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 0, 2)\n2\n</pre> <pre>Madryd model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588             | 21/27 [00:07&lt;00:03,  1.84it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3338.69, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 1, 0)\n2\n</pre> <pre>Madryd model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e          | 22/27 [00:07&lt;00:02,  2.24it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3355.02, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 1, 1)\n2\n</pre> <pre>Madryd model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d        | 23/27 [00:08&lt;00:01,  2.52it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3335.71, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 1, 2)\n2\n</pre> <pre>Madryd model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c      | 24/27 [00:08&lt;00:01,  2.12it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3333.00, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 2, 0)\n2\n</pre> <pre>Madryd model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:08&lt;00:00,  2.49it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3607.15, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 2, 1)\n2\n</pre> <pre>Madryd model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:09&lt;00:00,  2.39it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3359.43, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n(2, 2, 2)\n2\n</pre> <pre>Madryd model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:10&lt;00:00,  2.66it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3336.45, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3331.21\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:21,  3.29it/s]</pre> <pre>56.84418113471926\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:23,  3.01it/s]</pre> <pre>57.16715138817983\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:00&lt;00:23,  3.02it/s]</pre> <pre>59.097220624308875\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:21,  3.27it/s]</pre> <pre>60.75379985784121\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:01&lt;00:22,  2.98it/s]</pre> <pre>60.1257459276806\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:01&lt;00:22,  3.00it/s]</pre> <pre>62.14833183493873\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:02&lt;00:20,  3.26it/s]</pre> <pre>62.47077017817846\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:02&lt;00:20,  3.17it/s]</pre> <pre>60.624302400465396\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:02&lt;00:20,  3.07it/s]</pre> <pre>61.19734856503432\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:03&lt;00:19,  3.15it/s]</pre> <pre>61.6304267640063\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:03&lt;00:19,  3.19it/s]</pre> <pre>60.356623087134395\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:03&lt;00:19,  3.07it/s]</pre> <pre>59.663081812355436\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:04&lt;00:18,  3.30it/s]</pre> <pre>60.99623026795676\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:04&lt;00:16,  3.50it/s]</pre> <pre>60.022173693887396\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:04&lt;00:17,  3.28it/s]</pre> <pre>59.22142439365415\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:05&lt;00:17,  3.18it/s]</pre> <pre>60.956410329595734\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:05&lt;00:17,  3.15it/s]</pre> <pre>59.35920481809927\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:05&lt;00:17,  3.08it/s]</pre> <pre>57.897130293141586\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:06&lt;00:18,  2.98it/s]</pre> <pre>57.91181655449001\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:06&lt;00:18,  2.92it/s]</pre> <pre>58.57593007465846\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:06&lt;00:17,  2.95it/s]</pre> <pre>59.740732692310324\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:07&lt;00:17,  2.85it/s]</pre> <pre>59.2066686689232\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:07&lt;00:17,  2.81it/s]</pre> <pre>62.29815404060058\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:07&lt;00:17,  2.82it/s]</pre> <pre>61.96870036579729\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:08&lt;00:16,  2.84it/s]</pre> <pre>62.467167621348054\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:08&lt;00:16,  2.84it/s]</pre> <pre>61.18361314470391\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:08&lt;00:16,  2.80it/s]</pre> <pre>60.99303884735693\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:09&lt;00:16,  2.81it/s]</pre> <pre>60.877802337963054\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:09&lt;00:15,  2.83it/s]</pre> <pre>61.336218837757926\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:10&lt;00:15,  2.78it/s]</pre> <pre>60.18423355878912\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:10&lt;00:15,  2.75it/s]</pre> <pre>59.87224579037867\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:10&lt;00:14,  2.75it/s]</pre> <pre>59.838667189775144\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:11&lt;00:14,  2.78it/s]</pre> <pre>57.884706277835214\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:11&lt;00:13,  2.85it/s]</pre> <pre>57.61254346182554\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:11&lt;00:13,  2.79it/s]</pre> <pre>55.46230265933541\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:12&lt;00:13,  2.75it/s]</pre> <pre>56.756481137571754\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:12&lt;00:13,  2.77it/s]</pre> <pre>57.52076132958234\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:12&lt;00:13,  2.69it/s]</pre> <pre>57.56261898497799\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:13&lt;00:12,  2.72it/s]</pre> <pre>58.45108601827787\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:13&lt;00:12,  2.73it/s]</pre> <pre>59.84931491851994\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:14&lt;00:11,  2.73it/s]</pre> <pre>61.32951749625459\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:14&lt;00:11,  2.71it/s]</pre> <pre>61.97453924171311\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:14&lt;00:11,  2.71it/s]</pre> <pre>58.31337645565895\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:15&lt;00:10,  2.66it/s]</pre> <pre>56.840174653998645\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:15&lt;00:10,  2.64it/s]</pre> <pre>56.739566383010015\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:15&lt;00:10,  2.60it/s]</pre> <pre>58.57676288092152\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:16&lt;00:09,  2.60it/s]</pre> <pre>56.88614944998699\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:16&lt;00:09,  2.63it/s]</pre> <pre>57.19377713085008\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:17&lt;00:09,  2.60it/s]</pre> <pre>57.46232968474985\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:17&lt;00:08,  2.60it/s]</pre> <pre>58.19531422264831\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:17&lt;00:08,  2.61it/s]</pre> <pre>59.198328672762656\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:18&lt;00:08,  2.59it/s]</pre> <pre>60.75800930543049\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:18&lt;00:07,  2.59it/s]</pre> <pre>60.39154788597341\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:19&lt;00:07,  2.51it/s]</pre> <pre>60.16961846270894\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:19&lt;00:07,  2.53it/s]</pre> <pre>58.26359698915964\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:19&lt;00:06,  2.55it/s]</pre> <pre>56.785447633840896\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:20&lt;00:06,  2.54it/s]</pre> <pre>57.683850947144265\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:20&lt;00:05,  2.51it/s]</pre> <pre>56.377182361498654\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:21&lt;00:05,  2.51it/s]</pre> <pre>56.25990709559484\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:21&lt;00:05,  2.51it/s]</pre> <pre>56.042151058397835\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:21&lt;00:04,  2.54it/s]</pre> <pre>56.21599181112341\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:22&lt;00:04,  2.55it/s]</pre> <pre>56.49468781219472\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:22&lt;00:03,  2.54it/s]</pre> <pre>56.921693822378856\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:22&lt;00:03,  2.55it/s]</pre> <pre>56.95518828182627\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:23&lt;00:03,  2.54it/s]</pre> <pre>56.48610853898042\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:23&lt;00:02,  2.53it/s]</pre> <pre>56.24109646413762\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:24&lt;00:02,  2.55it/s]</pre> <pre>56.084035832195454\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:24&lt;00:01,  2.54it/s]</pre> <pre>55.581455849344394\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:24&lt;00:01,  2.53it/s]</pre> <pre>55.64857859917841\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:25&lt;00:01,  2.56it/s]</pre> <pre>55.90829478334101\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:25&lt;00:00,  2.58it/s]</pre> <pre>56.825451952760645\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:26&lt;00:00,  2.56it/s]</pre> <pre>56.84434568183184\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:26&lt;00:00,  2.75it/s]</pre> <pre>58.51117650186915\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Moskwa model selection:   4%|\u2588\u2588\u258f                                                        | 1/27 [00:00&lt;00:03,  7.28it/s]</pre> <pre>(0, 0, 0)\n2\n1\nOrder: (0, 0, 0), AICc: 1706.80, ADF p-value: 0.0199, Best_Order: (0, 0, 0), Best_aicc: 1706.80\n(0, 0, 1)\n2\n</pre> <pre>Moskwa model selection:   7%|\u2588\u2588\u2588\u2588\u258e                                                      | 2/27 [00:00&lt;00:04,  5.34it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 1515.47, ADF p-value: 0.0343, Best_Order: (0, 0, 1), Best_aicc: 1515.47\n(0, 0, 2)\n2\n</pre> <pre>Moskwa model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                  | 4/27 [00:00&lt;00:04,  5.34it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 1484.24, ADF p-value: 0.0768, Best_Order: (0, 0, 1), Best_aicc: 1515.47\n(0, 1, 0)\n2\n1\nOrder: (0, 1, 0), AICc: 1310.84, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 1310.84\n(0, 1, 1)\n2\n</pre> <pre>Moskwa model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                | 5/27 [00:00&lt;00:04,  4.91it/s]</pre> <pre>1\nOrder: (0, 1, 1), AICc: 1295.58, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 1295.58\n(0, 1, 2)\n2\n</pre> <pre>Moskwa model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 7/27 [00:01&lt;00:03,  5.22it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 1267.18, ADF p-value: 0.0023, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(0, 2, 0)\n2\n1\nOrder: (0, 2, 0), AICc: 1524.30, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(0, 2, 1)\n2\n</pre> <pre>Moskwa model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                         | 8/27 [00:01&lt;00:03,  5.29it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 1309.60, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(0, 2, 2)\n2\n</pre> <pre>Moskwa model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                       | 9/27 [00:01&lt;00:03,  4.57it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 1294.81, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 0, 0)\n2\n1\nOrder: (1, 0, 0), AICc: 1318.21, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n</pre> <pre>Moskwa model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                    | 10/27 [00:02&lt;00:03,  4.69it/s]</pre> <pre>(1, 0, 1)\n2\n</pre> <pre>Moskwa model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                  | 11/27 [00:02&lt;00:03,  4.44it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 1303.80, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 0, 2)\n2\n</pre> <pre>Moskwa model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                              | 13/27 [00:02&lt;00:02,  4.81it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 1277.42, ADF p-value: 0.0036, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 1306.65, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 1, 1)\n2\n</pre> <pre>Moskwa model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                            | 14/27 [00:02&lt;00:02,  4.57it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 1277.40, ADF p-value: 0.0007, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 1, 2)\n2\n</pre> <pre>Moskwa model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 16/27 [00:03&lt;00:02,  4.97it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 1267.32, ADF p-value: 0.0011, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 2, 0)\n2\n1\nOrder: (1, 2, 0), AICc: 1462.77, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 2, 1)\n2\n</pre> <pre>Moskwa model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 17/27 [00:03&lt;00:02,  4.40it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 1305.84, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(1, 2, 2)\n2\n</pre> <pre>Moskwa model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                   | 18/27 [00:03&lt;00:02,  4.05it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 1303.74, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(2, 0, 0)\n2\n</pre> <pre>Moskwa model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                 | 19/27 [00:04&lt;00:01,  4.11it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 1311.87, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(2, 0, 1)\n2\n</pre> <pre>Moskwa model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589               | 20/27 [00:04&lt;00:01,  3.75it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 1304.40, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(2, 0, 2)\n2\n</pre> <pre>Moskwa model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e          | 22/27 [00:04&lt;00:01,  4.16it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 1278.56, ADF p-value: 0.0022, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(2, 1, 0)\n2\n1\nOrder: (2, 1, 0), AICc: 1286.50, ADF p-value: 0.0001, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(2, 1, 1)\n2\n</pre> <pre>Moskwa model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d        | 23/27 [00:05&lt;00:01,  3.77it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 1277.30, ADF p-value: 0.0004, Best_Order: (0, 1, 2), Best_aicc: 1267.18\n(2, 1, 2)\n2\n</pre> <pre>Moskwa model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c      | 24/27 [00:05&lt;00:00,  3.55it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 1264.30, ADF p-value: 0.0037, Best_Order: (2, 1, 2), Best_aicc: 1264.30\n(2, 2, 0)\n2\n1\nOrder: (2, 2, 0), AICc: 1390.33, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 1264.30\n</pre> <pre>Moskwa model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:05&lt;00:00,  3.91it/s]</pre> <pre>(2, 2, 1)\n2\n</pre> <pre>Moskwa model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:06&lt;00:00,  3.53it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 1290.55, ADF p-value: 0.0002, Best_Order: (2, 1, 2), Best_aicc: 1264.30\n(2, 2, 2)\n2\n</pre> <pre>Moskwa model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:06&lt;00:00,  4.16it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 1284.15, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 1264.30\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/29 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u2589                                                     | 1/29 [00:00&lt;00:07,  3.51it/s]</pre> <pre>71.18240566066339\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 2/29 [00:00&lt;00:07,  3.43it/s]</pre> <pre>67.87308804432368\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258b                                                 | 3/29 [00:00&lt;00:07,  3.39it/s]</pre> <pre>72.74953326462177\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                               | 4/29 [00:01&lt;00:07,  3.26it/s]</pre> <pre>65.67984875850792\n1\n</pre> <pre>Analysed test_samples from:  17%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                             | 5/29 [00:01&lt;00:07,  3.30it/s]</pre> <pre>64.42972463327679\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                           | 6/29 [00:01&lt;00:08,  2.85it/s]</pre> <pre>61.885643418205646\n1\n62.03212734138276\n</pre> <pre>Analysed test_samples from:  28%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                       | 8/29 [00:02&lt;00:05,  3.77it/s]</pre> <pre>1\n59.33133416779293\n1\n</pre> <pre>Analysed test_samples from:  31%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                      | 9/29 [00:02&lt;00:04,  4.14it/s]</pre> <pre>67.89796853476662\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                   | 10/29 [00:02&lt;00:04,  3.83it/s]</pre> <pre>66.9392621640329\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                 | 11/29 [00:03&lt;00:04,  3.81it/s]</pre> <pre>62.74877282124183\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                               | 12/29 [00:03&lt;00:04,  3.83it/s]</pre> <pre>65.83984872557342\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                             | 13/29 [00:03&lt;00:04,  3.67it/s]</pre> <pre>70.76848351523398\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                            | 14/29 [00:03&lt;00:04,  3.60it/s]</pre> <pre>70.48743080762776\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                          | 15/29 [00:04&lt;00:04,  3.46it/s]</pre> <pre>66.240860397198\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                        | 16/29 [00:04&lt;00:04,  2.95it/s]</pre> <pre>57.590116875342176\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                    | 18/29 [00:05&lt;00:03,  3.15it/s]</pre> <pre>53.296666680057086\n1\n54.1855151157625\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                  | 19/29 [00:05&lt;00:03,  3.21it/s]</pre> <pre>52.75678947228517\n1\n</pre> <pre>Analysed test_samples from:  69%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                | 20/29 [00:05&lt;00:02,  3.23it/s]</pre> <pre>49.74949739582817\n1\n</pre> <pre>Analysed test_samples from:  72%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588               | 21/29 [00:06&lt;00:02,  3.31it/s]</pre> <pre>56.829466298528864\n1\n</pre> <pre>Analysed test_samples from:  76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589             | 22/29 [00:06&lt;00:02,  2.96it/s]</pre> <pre>26.862423767446607\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a           | 23/29 [00:06&lt;00:01,  3.04it/s]</pre> <pre>31.195937694899754\n1\n</pre> <pre>Analysed test_samples from:  83%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b         | 24/29 [00:07&lt;00:01,  3.17it/s]</pre> <pre>31.48386798577277\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 25/29 [00:07&lt;00:01,  3.36it/s]</pre> <pre>45.85482495189922\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d     | 26/29 [00:07&lt;00:00,  3.05it/s]</pre> <pre>38.028273760415296\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 27/29 [00:08&lt;00:00,  3.13it/s]</pre> <pre>36.74738064284894\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f | 28/29 [00:08&lt;00:00,  3.35it/s]</pre> <pre>28.459344895305797\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 29/29 [00:08&lt;00:00,  3.33it/s]</pre> <pre>40.276240074417274\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Pary\u017c model selection:   0%|                                                                    | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Pary\u017c model selection:   4%|\u2588\u2588\u258f                                                         | 1/27 [00:00&lt;00:07,  3.25it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4085.56, ADF p-value: 0.0793, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 0, 1)\n2\n</pre> <pre>Pary\u017c model selection:   7%|\u2588\u2588\u2588\u2588\u258d                                                       | 2/27 [00:00&lt;00:06,  3.80it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3714.64, ADF p-value: 0.0523, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 0, 2)\n2\n</pre> <pre>Pary\u017c model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                     | 3/27 [00:00&lt;00:06,  3.56it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3565.38, ADF p-value: 0.0879, Best_Order: (0, 0, 0), Best_aicc: inf\n(0, 1, 0)\n2\n</pre> <pre>Pary\u017c model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                   | 4/27 [00:01&lt;00:05,  3.89it/s]</pre> <pre>1\nOrder: (0, 1, 0), AICc: 3321.62, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3321.62\n(0, 1, 1)\n2\n1\nOrder: (0, 1, 1), AICc: 3310.77, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3310.77\n</pre> <pre>Pary\u017c model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 5/27 [00:01&lt;00:04,  4.48it/s]</pre> <pre>(0, 1, 2)\n2\n1\n</pre> <pre>Pary\u017c model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                              | 6/27 [00:01&lt;00:04,  4.52it/s]</pre> <pre>Order: (0, 1, 2), AICc: 3255.19, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(0, 2, 0)\n2\n</pre> <pre>Pary\u017c model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 7/27 [00:01&lt;00:04,  4.45it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3810.11, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(0, 2, 1)\n2\n</pre> <pre>Pary\u017c model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 8/27 [00:02&lt;00:05,  3.50it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3321.69, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(0, 2, 2)\n2\n</pre> <pre>Pary\u017c model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 9/27 [00:02&lt;00:06,  2.71it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3310.21, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(1, 0, 0)\n2\n</pre> <pre>Pary\u017c model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                     | 10/27 [00:02&lt;00:05,  2.93it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3327.17, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(1, 0, 1)\n2\n</pre> <pre>Pary\u017c model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                   | 11/27 [00:03&lt;00:06,  2.61it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3315.27, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(1, 0, 2)\n2\n</pre> <pre>Pary\u017c model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                              | 13/27 [00:04&lt;00:04,  2.85it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3278.54, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3319.76, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(1, 1, 1)\n2\n</pre> <pre>Pary\u017c model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                            | 14/27 [00:04&lt;00:04,  2.99it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3255.50, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3255.19\n(1, 1, 2)\n2\n</pre> <pre>Pary\u017c model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                          | 15/27 [00:04&lt;00:04,  2.93it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3243.38, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(1, 2, 0)\n2\n1\n</pre> <pre>Pary\u017c model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                        | 16/27 [00:04&lt;00:03,  3.34it/s]</pre> <pre>Order: (1, 2, 0), AICc: 3691.84, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(1, 2, 1)\n2\n</pre> <pre>Pary\u017c model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                     | 17/27 [00:05&lt;00:03,  3.05it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3319.52, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(1, 2, 2)\n2\n</pre> <pre>Pary\u017c model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                   | 18/27 [00:05&lt;00:03,  2.41it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3320.39, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 0, 0)\n2\n</pre> <pre>Pary\u017c model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                 | 19/27 [00:06&lt;00:03,  2.40it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3319.81, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 0, 1)\n2\n</pre> <pre>Pary\u017c model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b               | 20/27 [00:07&lt;00:03,  2.04it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3350.31, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 0, 2)\n2\n</pre> <pre>Pary\u017c model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589             | 21/27 [00:07&lt;00:03,  1.87it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3294.69, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 1, 0)\n2\n</pre> <pre>Pary\u017c model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           | 22/27 [00:07&lt;00:02,  2.27it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3275.46, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 1, 1)\n2\n</pre> <pre>Pary\u017c model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e        | 23/27 [00:08&lt;00:01,  2.39it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3250.18, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 1, 2)\n2\n</pre> <pre>Pary\u017c model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d      | 24/27 [00:08&lt;00:01,  2.31it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3244.84, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 2, 0)\n2\n</pre> <pre>Pary\u017c model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:08&lt;00:00,  2.70it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3570.80, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 2, 1)\n2\n</pre> <pre>Pary\u017c model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:09&lt;00:00,  2.40it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3280.02, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n(2, 2, 2)\n2\n</pre> <pre>Pary\u017c model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:10&lt;00:00,  2.63it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3253.56, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3243.38\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:23,  3.02it/s]</pre> <pre>61.47314607721131\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:22,  3.20it/s]</pre> <pre>59.37122706610978\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:00&lt;00:21,  3.26it/s]</pre> <pre>59.57556375891001\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:20,  3.43it/s]</pre> <pre>57.85456104979216\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:01&lt;00:19,  3.45it/s]</pre> <pre>58.57114000977831\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:01&lt;00:19,  3.43it/s]</pre> <pre>59.68496235390461\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:02&lt;00:18,  3.50it/s]</pre> <pre>58.11385099625953\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:02&lt;00:18,  3.47it/s]</pre> <pre>59.54910711588671\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:02&lt;00:18,  3.55it/s]</pre> <pre>60.05973587768145\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:02&lt;00:17,  3.55it/s]</pre> <pre>59.65100903118713\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:03&lt;00:17,  3.56it/s]</pre> <pre>58.34824261453546\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:03&lt;00:17,  3.53it/s]</pre> <pre>59.71294921412107\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:03&lt;00:16,  3.54it/s]</pre> <pre>60.416479070953116\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:04&lt;00:17,  3.46it/s]</pre> <pre>56.39383192904149\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:04&lt;00:16,  3.46it/s]</pre> <pre>56.35777653408947\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:04&lt;00:16,  3.53it/s]</pre> <pre>56.752340912013025\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:04&lt;00:15,  3.52it/s]</pre> <pre>57.47056855412603\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:05&lt;00:15,  3.53it/s]</pre> <pre>58.12084236330804\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:05&lt;00:15,  3.55it/s]</pre> <pre>57.10130136484926\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:05&lt;00:15,  3.50it/s]</pre> <pre>58.047119136905636\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:06&lt;00:14,  3.47it/s]</pre> <pre>57.34921825095911\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:06&lt;00:14,  3.46it/s]</pre> <pre>56.20151514248222\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:06&lt;00:14,  3.49it/s]</pre> <pre>55.77539227366583\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:06&lt;00:14,  3.45it/s]</pre> <pre>54.975831260389796\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:07&lt;00:13,  3.44it/s]</pre> <pre>61.05578959231484\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:07&lt;00:13,  3.42it/s]</pre> <pre>59.6442659348958\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:07&lt;00:13,  3.35it/s]</pre> <pre>58.25580805988456\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:08&lt;00:13,  3.40it/s]</pre> <pre>54.64395934124299\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:08&lt;00:12,  3.44it/s]</pre> <pre>56.27822350032338\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:08&lt;00:12,  3.48it/s]</pre> <pre>58.09728033560655\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:08&lt;00:11,  3.51it/s]</pre> <pre>59.6086100437044\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:09&lt;00:11,  3.58it/s]</pre> <pre>57.842454922042315\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:09&lt;00:11,  3.57it/s]</pre> <pre>58.398655792368345\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:09&lt;00:10,  3.59it/s]</pre> <pre>53.3027844156787\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:10&lt;00:10,  3.47it/s]</pre> <pre>57.857356070503016\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:10&lt;00:10,  3.37it/s]</pre> <pre>55.152163644475635\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:10&lt;00:10,  3.31it/s]</pre> <pre>51.653922997909085\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:11&lt;00:10,  3.31it/s]</pre> <pre>51.70665326238125\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:11&lt;00:10,  3.29it/s]</pre> <pre>52.82897906760032\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:11&lt;00:09,  3.32it/s]</pre> <pre>52.305460120212345\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:11&lt;00:09,  3.35it/s]</pre> <pre>52.70076108574168\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:12&lt;00:09,  3.34it/s]</pre> <pre>51.6020494370417\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:12&lt;00:09,  3.32it/s]</pre> <pre>46.4320522975593\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:12&lt;00:08,  3.33it/s]</pre> <pre>44.3606659600579\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:13&lt;00:08,  3.30it/s]</pre> <pre>45.838866343539166\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:13&lt;00:08,  3.37it/s]</pre> <pre>52.70191677284376\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:13&lt;00:07,  3.37it/s]</pre> <pre>54.69473670886483\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:14&lt;00:07,  3.29it/s]</pre> <pre>52.97670794991379\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:14&lt;00:07,  3.26it/s]</pre> <pre>50.93725168282195\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:14&lt;00:07,  3.24it/s]</pre> <pre>54.25857432858504\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:14&lt;00:06,  3.24it/s]</pre> <pre>54.60237244814358\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:15&lt;00:06,  3.31it/s]</pre> <pre>56.703497906110094\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:15&lt;00:05,  3.34it/s]</pre> <pre>58.202913098882775\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:15&lt;00:05,  3.35it/s]</pre> <pre>58.85553404630832\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:16&lt;00:05,  3.38it/s]</pre> <pre>56.79942868446271\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:16&lt;00:05,  3.34it/s]</pre> <pre>55.711252378268085\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:16&lt;00:04,  3.33it/s]</pre> <pre>55.55257388178002\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:17&lt;00:04,  3.33it/s]</pre> <pre>53.2984253437562\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:17&lt;00:04,  3.32it/s]</pre> <pre>46.67938026896452\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:17&lt;00:03,  3.36it/s]</pre> <pre>47.53054149655809\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:17&lt;00:03,  3.32it/s]</pre> <pre>53.10397305904415\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:18&lt;00:03,  3.15it/s]</pre> <pre>56.58415728157573\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:18&lt;00:03,  3.11it/s]</pre> <pre>57.48088811837981\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:18&lt;00:03,  2.97it/s]</pre> <pre>57.586187849726336\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:19&lt;00:02,  3.07it/s]</pre> <pre>57.95494585964413\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:19&lt;00:02,  2.93it/s]</pre> <pre>58.102754257703396\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:20&lt;00:02,  2.89it/s]</pre> <pre>59.07990652307736\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:20&lt;00:01,  2.97it/s]</pre> <pre>57.473061219356126\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:20&lt;00:01,  2.97it/s]</pre> <pre>55.78413566742749\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:20&lt;00:00,  3.08it/s]</pre> <pre>58.78916213926437\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:21&lt;00:00,  3.14it/s]</pre> <pre>58.698240967903956\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:21&lt;00:00,  3.18it/s]</pre> <pre>57.945053286398156\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:21&lt;00:00,  3.33it/s]</pre> <pre>55.728440492325696\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Praga model selection:   0%|                                                                    | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Praga model selection:   4%|\u2588\u2588\u258f                                                         | 1/27 [00:00&lt;00:06,  4.05it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4023.48, ADF p-value: 0.0057, Best_Order: (0, 0, 0), Best_aicc: 4023.48\n(0, 0, 1)\n2\n</pre> <pre>Praga model selection:   7%|\u2588\u2588\u2588\u2588\u258d                                                       | 2/27 [00:00&lt;00:06,  3.66it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3730.51, ADF p-value: 0.0458, Best_Order: (0, 0, 1), Best_aicc: 3730.51\n(0, 0, 2)\n2\n</pre> <pre>Praga model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                     | 3/27 [00:00&lt;00:07,  3.32it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3651.67, ADF p-value: 0.0037, Best_Order: (0, 0, 2), Best_aicc: 3651.67\n(0, 1, 0)\n2\n</pre> <pre>Praga model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                   | 4/27 [00:01&lt;00:06,  3.58it/s]</pre> <pre>1\nOrder: (0, 1, 0), AICc: 3432.74, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3432.74\n(0, 1, 1)\n2\n1\nOrder: (0, 1, 1), AICc: 3393.72, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3393.72\n</pre> <pre>Praga model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 5/27 [00:01&lt;00:05,  4.18it/s]</pre> <pre>(0, 1, 2)\n2\n</pre> <pre>Praga model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                              | 6/27 [00:01&lt;00:05,  4.00it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3352.52, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(0, 2, 0)\n2\n</pre> <pre>Praga model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 7/27 [00:01&lt;00:04,  4.22it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3947.67, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(0, 2, 1)\n2\n</pre> <pre>Praga model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 8/27 [00:02&lt;00:05,  3.32it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3431.92, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(0, 2, 2)\n2\n</pre> <pre>Praga model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 9/27 [00:02&lt;00:07,  2.55it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3393.26, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(1, 0, 0)\n2\n</pre> <pre>Praga model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                     | 10/27 [00:03&lt;00:06,  2.76it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3436.75, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(1, 0, 1)\n2\n</pre> <pre>Praga model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                   | 11/27 [00:03&lt;00:06,  2.50it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3399.29, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(1, 0, 2)\n2\n</pre> <pre>Praga model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                              | 13/27 [00:04&lt;00:05,  2.80it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3358.76, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3418.12, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3352.52\n(1, 1, 1)\n2\n</pre> <pre>Praga model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                            | 14/27 [00:04&lt;00:04,  2.91it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3350.67, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 3350.67\n(1, 1, 2)\n2\n</pre> <pre>Praga model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                          | 15/27 [00:04&lt;00:04,  2.88it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3347.47, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(1, 2, 0)\n2\n1\n</pre> <pre>Praga model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                        | 16/27 [00:05&lt;00:03,  3.30it/s]</pre> <pre>Order: (1, 2, 0), AICc: 3801.00, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(1, 2, 1)\n2\n</pre> <pre>Praga model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                     | 17/27 [00:05&lt;00:03,  2.74it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3417.41, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(1, 2, 2)\n2\n</pre> <pre>Praga model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                   | 18/27 [00:06&lt;00:04,  2.17it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3352.15, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 0, 0)\n2\n</pre> <pre>Praga model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                 | 19/27 [00:06&lt;00:03,  2.15it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3418.03, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 0, 1)\n2\n</pre> <pre>Praga model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b               | 20/27 [00:07&lt;00:03,  2.07it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3365.36, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 0, 2)\n2\n</pre> <pre>Praga model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589             | 21/27 [00:07&lt;00:03,  1.89it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3358.93, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 1, 0)\n2\n</pre> <pre>Praga model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588           | 22/27 [00:08&lt;00:02,  2.24it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3382.31, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 1, 1)\n2\n</pre> <pre>Praga model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e        | 23/27 [00:08&lt;00:01,  2.40it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3352.53, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 1, 2)\n2\n</pre> <pre>Praga model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d      | 24/27 [00:09&lt;00:01,  2.27it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3348.48, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 2, 0)\n2\n</pre> <pre>Praga model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:09&lt;00:00,  2.63it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3676.88, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 2, 1)\n2\n</pre> <pre>Praga model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:09&lt;00:00,  2.21it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3386.71, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n(2, 2, 2)\n2\n</pre> <pre>Praga model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:10&lt;00:00,  2.53it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3355.86, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3347.47\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:24,  2.97it/s]</pre> <pre>49.00555036304587\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:25,  2.84it/s]</pre> <pre>52.52454547440489\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:01&lt;00:25,  2.79it/s]</pre> <pre>51.116360452495854\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:24,  2.87it/s]</pre> <pre>50.39444379929054\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:01&lt;00:23,  2.89it/s]</pre> <pre>52.011898941346075\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:02&lt;00:22,  3.04it/s]</pre> <pre>50.9479316354393\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:02&lt;00:22,  2.93it/s]</pre> <pre>52.01327658978862\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:02&lt;00:21,  3.05it/s]</pre> <pre>51.29950721011723\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:03&lt;00:21,  2.99it/s]</pre> <pre>50.94257557289532\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:03&lt;00:21,  2.87it/s]</pre> <pre>50.9537679346203\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:03&lt;00:21,  2.93it/s]</pre> <pre>52.59643095821044\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:04&lt;00:21,  2.88it/s]</pre> <pre>51.79088694145406\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:04&lt;00:20,  2.89it/s]</pre> <pre>51.296582296081546\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:04&lt;00:20,  2.95it/s]</pre> <pre>50.18030426814833\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:05&lt;00:20,  2.88it/s]</pre> <pre>48.711315564525876\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:05&lt;00:19,  2.96it/s]</pre> <pre>46.39220620748705\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:05&lt;00:18,  3.01it/s]</pre> <pre>48.938263130194514\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:06&lt;00:18,  2.92it/s]</pre> <pre>49.985445309421976\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:06&lt;00:18,  2.92it/s]</pre> <pre>48.421004515848956\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:06&lt;00:18,  2.89it/s]</pre> <pre>46.73448317849832\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:07&lt;00:17,  2.91it/s]</pre> <pre>45.04607800460027\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:07&lt;00:18,  2.74it/s]</pre> <pre>46.60987998978342\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:07&lt;00:18,  2.73it/s]</pre> <pre>45.49543456970162\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:08&lt;00:18,  2.64it/s]</pre> <pre>44.35072970576405\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:08&lt;00:17,  2.74it/s]</pre> <pre>47.001999189736104\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:09&lt;00:16,  2.83it/s]</pre> <pre>49.08302229837311\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:09&lt;00:16,  2.86it/s]</pre> <pre>49.12173282550087\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:09&lt;00:15,  2.89it/s]</pre> <pre>47.54751729945408\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:10&lt;00:15,  2.88it/s]</pre> <pre>43.13056706472473\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:10&lt;00:13,  3.08it/s]</pre> <pre>43.0427571020094\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:10&lt;00:13,  3.16it/s]</pre> <pre>47.318862029358755\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:10&lt;00:13,  3.12it/s]</pre> <pre>49.60877376001068\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:11&lt;00:13,  3.03it/s]</pre> <pre>47.850280074050964\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:11&lt;00:13,  2.96it/s]</pre> <pre>41.04560859539383\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:12&lt;00:12,  2.94it/s]</pre> <pre>43.04701706242342\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:12&lt;00:12,  2.88it/s]</pre> <pre>43.921826107788505\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:12&lt;00:12,  2.89it/s]</pre> <pre>40.54887316406719\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:13&lt;00:11,  2.94it/s]</pre> <pre>39.21892023115761\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:13&lt;00:12,  2.73it/s]</pre> <pre>42.44728891510631\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:13&lt;00:11,  2.78it/s]</pre> <pre>37.80330749020048\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:14&lt;00:11,  2.68it/s]</pre> <pre>37.673814397289014\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:14&lt;00:11,  2.63it/s]</pre> <pre>40.224447884405414\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:14&lt;00:10,  2.73it/s]</pre> <pre>35.004642083391545\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:15&lt;00:10,  2.68it/s]</pre> <pre>33.7425305289381\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:15&lt;00:10,  2.62it/s]</pre> <pre>36.27563975884935\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:16&lt;00:10,  2.56it/s]</pre> <pre>33.50804133793367\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:16&lt;00:09,  2.64it/s]</pre> <pre>35.52939048154697\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:16&lt;00:09,  2.76it/s]</pre> <pre>38.2120199018916\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:17&lt;00:08,  2.78it/s]</pre> <pre>41.97017613074813\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:17&lt;00:08,  2.82it/s]</pre> <pre>37.50150646974099\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:17&lt;00:07,  2.76it/s]</pre> <pre>40.41917334823863\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:18&lt;00:07,  2.71it/s]</pre> <pre>44.01771994793713\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:18&lt;00:07,  2.62it/s]</pre> <pre>47.072557108225666\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:19&lt;00:07,  2.70it/s]</pre> <pre>46.95645846437812\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:19&lt;00:06,  2.62it/s]</pre> <pre>47.695247759517464\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:19&lt;00:06,  2.59it/s]</pre> <pre>45.25348025342529\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:20&lt;00:06,  2.64it/s]</pre> <pre>43.65013605722753\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:20&lt;00:05,  2.62it/s]</pre> <pre>44.46662322285012\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:20&lt;00:05,  2.61it/s]</pre> <pre>44.5847558263051\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:21&lt;00:04,  2.61it/s]</pre> <pre>43.13492155585726\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:21&lt;00:04,  2.63it/s]</pre> <pre>43.61555497966765\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:22&lt;00:04,  2.60it/s]</pre> <pre>44.560515947567254\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:22&lt;00:03,  2.58it/s]</pre> <pre>46.03256333766684\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:22&lt;00:03,  2.58it/s]</pre> <pre>41.276133876050224\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:23&lt;00:03,  2.57it/s]</pre> <pre>40.524435837122624\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:23&lt;00:02,  2.63it/s]</pre> <pre>47.11890230927597\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:24&lt;00:02,  2.71it/s]</pre> <pre>49.94217762377262\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:24&lt;00:01,  2.61it/s]</pre> <pre>48.64617789634856\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:24&lt;00:01,  2.68it/s]</pre> <pre>45.16668060188293\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:25&lt;00:01,  2.71it/s]</pre> <pre>45.14223629504769\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:25&lt;00:00,  2.71it/s]</pre> <pre>48.17437791513955\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:25&lt;00:00,  2.71it/s]</pre> <pre>47.28770984771129\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:26&lt;00:00,  2.78it/s]</pre> <pre>44.379693774275566\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Warszawa model selection:   0%|                                                                 | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Warszawa model selection:   7%|\u2588\u2588\u2588\u2588\u258f                                                    | 2/27 [00:00&lt;00:04,  5.15it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 4132.61, ADF p-value: 0.0001, Best_Order: (0, 0, 0), Best_aicc: 4132.61\n(0, 0, 1)\n2\n1\nOrder: (0, 0, 1), AICc: 3835.36, ADF p-value: 0.0006, Best_Order: (0, 0, 1), Best_aicc: 3835.36\n(0, 0, 2)\n2\n</pre> <pre>Warszawa model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                                  | 3/27 [00:00&lt;00:05,  4.01it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3746.31, ADF p-value: 0.0005, Best_Order: (0, 0, 2), Best_aicc: 3746.31\n(0, 1, 0)\n2\n</pre> <pre>Warszawa model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                                | 4/27 [00:00&lt;00:05,  4.12it/s]</pre> <pre>1\nOrder: (0, 1, 0), AICc: 3517.48, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3517.48\n(0, 1, 1)\n2\n</pre> <pre>Warszawa model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                              | 5/27 [00:01&lt;00:05,  3.92it/s]</pre> <pre>1\nOrder: (0, 1, 1), AICc: 3477.49, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3477.49\n(0, 1, 2)\n2\n</pre> <pre>Warszawa model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                            | 6/27 [00:01&lt;00:06,  3.49it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3432.18, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(0, 2, 0)\n2\n</pre> <pre>Warszawa model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 7/27 [00:01&lt;00:05,  3.59it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 4066.43, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(0, 2, 1)\n2\n</pre> <pre>Warszawa model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                        | 8/27 [00:02&lt;00:06,  2.92it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3517.90, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(0, 2, 2)\n2\n</pre> <pre>Warszawa model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                      | 9/27 [00:02&lt;00:07,  2.47it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3476.74, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(1, 0, 0)\n2\n</pre> <pre>Warszawa model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                   | 10/27 [00:03&lt;00:06,  2.70it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3524.76, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(1, 0, 1)\n2\n</pre> <pre>Warszawa model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                 | 11/27 [00:03&lt;00:06,  2.51it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3483.21, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(1, 0, 2)\n2\n</pre> <pre>Warszawa model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                             | 13/27 [00:04&lt;00:05,  2.74it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3438.62, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(1, 1, 0)\n2\n1\nOrder: (1, 1, 0), AICc: 3498.55, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3432.18\n(1, 1, 1)\n2\n</pre> <pre>Warszawa model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                           | 14/27 [00:04&lt;00:04,  2.76it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3427.90, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 3427.90\n(1, 1, 2)\n2\n</pre> <pre>Warszawa model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                         | 15/27 [00:05&lt;00:04,  2.63it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3424.72, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(1, 2, 0)\n2\n1\n</pre> <pre>Warszawa model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                      | 16/27 [00:05&lt;00:03,  3.08it/s]</pre> <pre>Order: (1, 2, 0), AICc: 3880.75, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(1, 2, 1)\n2\n</pre> <pre>Warszawa model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 17/27 [00:05&lt;00:03,  2.60it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3497.23, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(1, 2, 2)\n2\n</pre> <pre>Warszawa model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                  | 18/27 [00:06&lt;00:04,  2.03it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3471.32, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(2, 0, 0)\n2\n</pre> <pre>Warszawa model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                | 19/27 [00:07&lt;00:03,  2.07it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3499.07, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(2, 0, 1)\n2\n</pre> <pre>Warszawa model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d              | 20/27 [00:07&lt;00:03,  2.01it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3435.06, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(2, 0, 2)\n2\n</pre> <pre>Warszawa model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c            | 21/27 [00:08&lt;00:03,  1.88it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3442.28, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(2, 1, 0)\n2\n</pre> <pre>Warszawa model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 22/27 [00:08&lt;00:02,  2.26it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3470.00, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(2, 1, 1)\n2\n</pre> <pre>Warszawa model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b        | 23/27 [00:08&lt;00:01,  2.28it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3429.72, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3424.72\n(2, 1, 2)\n2\n</pre> <pre>Warszawa model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a      | 24/27 [00:09&lt;00:01,  2.13it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3424.27, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3424.27\n(2, 2, 0)\n2\n</pre> <pre>Warszawa model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a    | 25/27 [00:09&lt;00:00,  2.51it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3749.22, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3424.27\n(2, 2, 1)\n2\n</pre> <pre>Warszawa model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589  | 26/27 [00:10&lt;00:00,  2.19it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3474.27, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3424.27\n(2, 2, 2)\n2\n</pre> <pre>Warszawa model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:11&lt;00:00,  2.44it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3443.71, ADF p-value: 0.0000, Best_Order: (2, 1, 2), Best_aicc: 3424.27\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:35,  2.04it/s]</pre> <pre>46.821069225850565\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:01&lt;00:40,  1.76it/s]</pre> <pre>50.687773161715086\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:01&lt;00:35,  1.97it/s]</pre> <pre>52.184781833692234\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:02&lt;00:36,  1.88it/s]</pre> <pre>52.33187437636305\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:02&lt;00:34,  1.95it/s]</pre> <pre>50.22031714864876\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:03&lt;00:36,  1.82it/s]</pre> <pre>51.47298971337308\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:03&lt;00:38,  1.73it/s]</pre> <pre>50.584333247894406\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:04&lt;00:37,  1.72it/s]</pre> <pre>51.531237662875014\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:05&lt;00:37,  1.72it/s]</pre> <pre>48.35283503525923\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:05&lt;00:34,  1.81it/s]</pre> <pre>50.8231913656234\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:06&lt;00:34,  1.80it/s]</pre> <pre>52.795969927190626\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:06&lt;00:32,  1.85it/s]</pre> <pre>52.60844401705262\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:07&lt;00:33,  1.80it/s]</pre> <pre>48.038094835866474\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:07&lt;00:32,  1.82it/s]</pre> <pre>47.9149661452117\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:08&lt;00:31,  1.84it/s]</pre> <pre>50.35682268059995\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:08&lt;00:30,  1.84it/s]</pre> <pre>48.06192443816771\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:09&lt;00:31,  1.80it/s]</pre> <pre>47.80198805616523\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:09&lt;00:31,  1.74it/s]</pre> <pre>50.377542945109\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:10&lt;00:29,  1.83it/s]</pre> <pre>48.1062649930045\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:10&lt;00:27,  1.90it/s]</pre> <pre>47.68916216273482\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:11&lt;00:26,  1.98it/s]</pre> <pre>46.809490583939876\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:12&lt;00:27,  1.86it/s]</pre> <pre>47.282053067007226\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:12&lt;00:26,  1.85it/s]</pre> <pre>48.11019670391504\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:13&lt;00:27,  1.80it/s]</pre> <pre>45.60974249880543\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:13&lt;00:26,  1.81it/s]</pre> <pre>45.11835084880572\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:14&lt;00:26,  1.77it/s]</pre> <pre>48.764964464667656\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:14&lt;00:26,  1.75it/s]</pre> <pre>48.3480409360308\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:15&lt;00:25,  1.73it/s]</pre> <pre>42.35721770348719\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:16&lt;00:24,  1.76it/s]</pre> <pre>42.91240877713044\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:16&lt;00:24,  1.73it/s]</pre> <pre>39.99562467888545\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:17&lt;00:25,  1.67it/s]</pre> <pre>40.79568458935276\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:17&lt;00:25,  1.62it/s]</pre> <pre>41.05507556330633\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:18&lt;00:24,  1.62it/s]</pre> <pre>38.565262395078065\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:19&lt;00:24,  1.59it/s]</pre> <pre>35.85114564862623\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:19&lt;00:22,  1.69it/s]</pre> <pre>42.80283695005946\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:20&lt;00:22,  1.65it/s]</pre> <pre>43.19136909051876\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:20&lt;00:20,  1.71it/s]</pre> <pre>42.028631552756174\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:21&lt;00:21,  1.66it/s]</pre> <pre>39.862868130405175\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:22&lt;00:20,  1.65it/s]</pre> <pre>40.17253187111105\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:22&lt;00:19,  1.73it/s]</pre> <pre>37.73659180541854\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:23&lt;00:19,  1.67it/s]</pre> <pre>36.197727954228995\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:23&lt;00:18,  1.66it/s]</pre> <pre>37.49641609222998\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:24&lt;00:18,  1.62it/s]</pre> <pre>33.89044465582461\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:25&lt;00:17,  1.63it/s]</pre> <pre>35.37136292692365\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:25&lt;00:17,  1.60it/s]</pre> <pre>37.3994050059425\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:26&lt;00:16,  1.62it/s]</pre> <pre>36.690002015108654\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:27&lt;00:16,  1.61it/s]</pre> <pre>34.611891339520895\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:27&lt;00:15,  1.61it/s]</pre> <pre>36.75770357700703\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:28&lt;00:14,  1.60it/s]</pre> <pre>38.31363742662252\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:28&lt;00:14,  1.56it/s]</pre> <pre>36.23287649824114\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:29&lt;00:13,  1.57it/s]</pre> <pre>36.9766864363922\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:30&lt;00:13,  1.57it/s]</pre> <pre>39.770453380762355\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:30&lt;00:12,  1.60it/s]</pre> <pre>44.22975597266849\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:31&lt;00:11,  1.64it/s]</pre> <pre>43.472436072541356\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:32&lt;00:11,  1.59it/s]</pre> <pre>41.88065530699804\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:32&lt;00:10,  1.57it/s]</pre> <pre>41.62159209658565\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:33&lt;00:10,  1.57it/s]</pre> <pre>42.22356388029505\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:33&lt;00:09,  1.63it/s]</pre> <pre>44.28822709207622\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:34&lt;00:08,  1.64it/s]</pre> <pre>46.68435346016454\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:35&lt;00:07,  1.67it/s]</pre> <pre>46.78740780002332\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:35&lt;00:07,  1.70it/s]</pre> <pre>46.34622359434884\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:36&lt;00:06,  1.71it/s]</pre> <pre>46.51023535554077\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:36&lt;00:06,  1.63it/s]</pre> <pre>45.66363432623487\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:37&lt;00:05,  1.59it/s]</pre> <pre>41.466159552473286\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:38&lt;00:05,  1.56it/s]</pre> <pre>39.83857804991645\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:38&lt;00:04,  1.54it/s]</pre> <pre>42.55665701951628\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:39&lt;00:03,  1.56it/s]</pre> <pre>47.20197101755791\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:40&lt;00:03,  1.55it/s]</pre> <pre>47.36750549220996\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:40&lt;00:02,  1.57it/s]</pre> <pre>42.860908068939835\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:41&lt;00:01,  1.53it/s]</pre> <pre>43.18316251521779\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:42&lt;00:01,  1.61it/s]</pre> <pre>45.718376156288656\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:42&lt;00:00,  1.54it/s]</pre> <pre>45.86117832245943\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:43&lt;00:00,  1.68it/s]</pre> <pre>44.09246732174286\nFalse\nFalse\n</pre> <pre>\n</pre> <pre>Wiede\u0144 model selection:   0%|                                                                   | 0/27 [00:00&lt;?, ?it/s]</pre> <pre>(0, 0, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:   4%|\u2588\u2588\u258f                                                        | 1/27 [00:00&lt;00:07,  3.52it/s]</pre> <pre>1\nOrder: (0, 0, 0), AICc: 3903.44, ADF p-value: 0.0000, Best_Order: (0, 0, 0), Best_aicc: 3903.44\n(0, 0, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:   7%|\u2588\u2588\u2588\u2588\u258e                                                      | 2/27 [00:00&lt;00:07,  3.35it/s]</pre> <pre>1\nOrder: (0, 0, 1), AICc: 3665.69, ADF p-value: 0.0000, Best_Order: (0, 0, 1), Best_aicc: 3665.69\n(0, 0, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  11%|\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                                    | 3/27 [00:00&lt;00:06,  3.60it/s]</pre> <pre>1\nOrder: (0, 0, 2), AICc: 3574.13, ADF p-value: 0.0000, Best_Order: (0, 0, 2), Best_aicc: 3574.13\n(0, 1, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                                  | 4/27 [00:01&lt;00:05,  3.85it/s]</pre> <pre>1\nOrder: (0, 1, 0), AICc: 3364.85, ADF p-value: 0.0000, Best_Order: (0, 1, 0), Best_aicc: 3364.85\n(0, 1, 1)\n2\n1\n</pre> <pre>Wiede\u0144 model selection:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                                | 5/27 [00:01&lt;00:05,  4.14it/s]</pre> <pre>Order: (0, 1, 1), AICc: 3326.69, ADF p-value: 0.0000, Best_Order: (0, 1, 1), Best_aicc: 3326.69\n(0, 1, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                              | 6/27 [00:01&lt;00:05,  3.91it/s]</pre> <pre>1\nOrder: (0, 1, 2), AICc: 3281.35, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(0, 2, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 7/27 [00:01&lt;00:04,  4.07it/s]</pre> <pre>1\nOrder: (0, 2, 0), AICc: 3879.09, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(0, 2, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                         | 8/27 [00:02&lt;00:05,  3.66it/s]</pre> <pre>1\nOrder: (0, 2, 1), AICc: 3360.08, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(0, 2, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                       | 9/27 [00:02&lt;00:05,  3.44it/s]</pre> <pre>1\nOrder: (0, 2, 2), AICc: 3325.23, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(1, 0, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                    | 10/27 [00:02&lt;00:04,  3.47it/s]</pre> <pre>1\nOrder: (1, 0, 0), AICc: 3369.36, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(1, 0, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                  | 11/27 [00:03&lt;00:05,  2.90it/s]</pre> <pre>1\nOrder: (1, 0, 1), AICc: 3332.45, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(1, 0, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                | 12/27 [00:03&lt;00:06,  2.33it/s]</pre> <pre>1\nOrder: (1, 0, 2), AICc: 3289.46, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(1, 1, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                              | 13/27 [00:04&lt;00:05,  2.75it/s]</pre> <pre>1\nOrder: (1, 1, 0), AICc: 3350.85, ADF p-value: 0.0000, Best_Order: (0, 1, 2), Best_aicc: 3281.35\n(1, 1, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                            | 14/27 [00:04&lt;00:04,  2.67it/s]</pre> <pre>1\nOrder: (1, 1, 1), AICc: 3278.62, ADF p-value: 0.0000, Best_Order: (1, 1, 1), Best_aicc: 3278.62\n(1, 1, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                         | 15/27 [00:04&lt;00:04,  2.65it/s]</pre> <pre>1\nOrder: (1, 1, 2), AICc: 3272.46, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(1, 2, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 16/27 [00:05&lt;00:03,  2.93it/s]</pre> <pre>1\nOrder: (1, 2, 0), AICc: 3730.18, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(1, 2, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 17/27 [00:05&lt;00:03,  2.59it/s]</pre> <pre>1\nOrder: (1, 2, 1), AICc: 3347.19, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(1, 2, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                   | 18/27 [00:06&lt;00:04,  1.93it/s]</pre> <pre>1\nOrder: (1, 2, 2), AICc: 3280.75, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 0, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                 | 19/27 [00:06&lt;00:03,  2.03it/s]</pre> <pre>1\nOrder: (2, 0, 0), AICc: 3351.08, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 0, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589               | 20/27 [00:07&lt;00:03,  1.97it/s]</pre> <pre>1\nOrder: (2, 0, 1), AICc: 3285.47, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 0, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588             | 21/27 [00:08&lt;00:03,  1.78it/s]</pre> <pre>1\nOrder: (2, 0, 2), AICc: 3281.86, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 1, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e          | 22/27 [00:08&lt;00:02,  2.16it/s]</pre> <pre>1\nOrder: (2, 1, 0), AICc: 3315.59, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 1, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d        | 23/27 [00:08&lt;00:01,  2.34it/s]</pre> <pre>1\nOrder: (2, 1, 1), AICc: 3280.16, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 1, 2)\n2\n</pre> <pre>Wiede\u0144 model selection:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c      | 24/27 [00:09&lt;00:01,  2.04it/s]</pre> <pre>1\nOrder: (2, 1, 2), AICc: 3274.09, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 2, 0)\n2\n</pre> <pre>Wiede\u0144 model selection:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b    | 25/27 [00:09&lt;00:00,  2.26it/s]</pre> <pre>1\nOrder: (2, 2, 0), AICc: 3620.57, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 2, 1)\n2\n</pre> <pre>Wiede\u0144 model selection:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 26/27 [00:10&lt;00:00,  2.26it/s]</pre> <pre>1\nOrder: (2, 2, 1), AICc: 3320.09, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n(2, 2, 2)\n2\n</pre> <pre>Wiede\u0144 model selection: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 27/27 [00:10&lt;00:00,  2.47it/s]\n</pre> <pre>1\nOrder: (2, 2, 2), AICc: 3289.88, ADF p-value: 0.0000, Best_Order: (1, 1, 2), Best_aicc: 3272.46\n</pre> <pre>Analysed test_samples from:   0%|                                                               | 0/73 [00:00&lt;?, ?it/s]</pre> <pre>1\n</pre> <pre>Analysed test_samples from:   1%|\u258a                                                      | 1/73 [00:00&lt;00:25,  2.86it/s]</pre> <pre>57.8449434787823\n1\n</pre> <pre>Analysed test_samples from:   3%|\u2588\u258c                                                     | 2/73 [00:00&lt;00:27,  2.59it/s]</pre> <pre>62.683339461989114\n1\n</pre> <pre>Analysed test_samples from:   4%|\u2588\u2588\u258e                                                    | 3/73 [00:01&lt;00:31,  2.19it/s]</pre> <pre>59.37077225819115\n1\n</pre> <pre>Analysed test_samples from:   5%|\u2588\u2588\u2588                                                    | 4/73 [00:01&lt;00:30,  2.27it/s]</pre> <pre>57.74631227123143\n1\n</pre> <pre>Analysed test_samples from:   7%|\u2588\u2588\u2588\u258a                                                   | 5/73 [00:02&lt;00:28,  2.42it/s]</pre> <pre>56.33440335380239\n1\n</pre> <pre>Analysed test_samples from:   8%|\u2588\u2588\u2588\u2588\u258c                                                  | 6/73 [00:02&lt;00:26,  2.50it/s]</pre> <pre>59.857299010301865\n1\n</pre> <pre>Analysed test_samples from:  10%|\u2588\u2588\u2588\u2588\u2588\u258e                                                 | 7/73 [00:02&lt;00:27,  2.44it/s]</pre> <pre>59.6887483008113\n1\n</pre> <pre>Analysed test_samples from:  11%|\u2588\u2588\u2588\u2588\u2588\u2588                                                 | 8/73 [00:03&lt;00:27,  2.40it/s]</pre> <pre>57.03954861785948\n1\n</pre> <pre>Analysed test_samples from:  12%|\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                                | 9/73 [00:03&lt;00:27,  2.34it/s]</pre> <pre>57.13819755294368\n1\n</pre> <pre>Analysed test_samples from:  14%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                              | 10/73 [00:04&lt;00:26,  2.38it/s]</pre> <pre>56.05899567526647\n1\n</pre> <pre>Analysed test_samples from:  15%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                             | 11/73 [00:04&lt;00:26,  2.33it/s]</pre> <pre>55.76440588514446\n1\n</pre> <pre>Analysed test_samples from:  16%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                             | 12/73 [00:05&lt;00:26,  2.30it/s]</pre> <pre>56.43013013328056\n1\n</pre> <pre>Analysed test_samples from:  18%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                            | 13/73 [00:05&lt;00:26,  2.25it/s]</pre> <pre>57.124519123091474\n1\n</pre> <pre>Analysed test_samples from:  19%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                           | 14/73 [00:05&lt;00:25,  2.31it/s]</pre> <pre>57.14801958011789\n1\n</pre> <pre>Analysed test_samples from:  21%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                           | 15/73 [00:06&lt;00:24,  2.35it/s]</pre> <pre>51.9351261623211\n1\n</pre> <pre>Analysed test_samples from:  22%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                          | 16/73 [00:06&lt;00:23,  2.46it/s]</pre> <pre>54.57032860227861\n1\n</pre> <pre>Analysed test_samples from:  23%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                         | 17/73 [00:07&lt;00:22,  2.49it/s]</pre> <pre>55.3991129310446\n1\n</pre> <pre>Analysed test_samples from:  25%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                        | 18/73 [00:07&lt;00:22,  2.43it/s]</pre> <pre>55.88986234021294\n1\n</pre> <pre>Analysed test_samples from:  26%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                        | 19/73 [00:07&lt;00:22,  2.42it/s]</pre> <pre>55.74093893652491\n1\n</pre> <pre>Analysed test_samples from:  27%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                       | 20/73 [00:08&lt;00:21,  2.42it/s]</pre> <pre>53.059578050800454\n1\n</pre> <pre>Analysed test_samples from:  29%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                                      | 21/73 [00:08&lt;00:21,  2.47it/s]</pre> <pre>50.26464816993388\n1\n</pre> <pre>Analysed test_samples from:  30%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                                     | 22/73 [00:09&lt;00:20,  2.52it/s]</pre> <pre>51.2548956655222\n1\n</pre> <pre>Analysed test_samples from:  32%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                                     | 23/73 [00:09&lt;00:19,  2.53it/s]</pre> <pre>52.054519492912995\n1\n</pre> <pre>Analysed test_samples from:  33%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                                    | 24/73 [00:09&lt;00:19,  2.48it/s]</pre> <pre>50.928670588228\n1\n</pre> <pre>Analysed test_samples from:  34%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                   | 25/73 [00:10&lt;00:19,  2.42it/s]</pre> <pre>49.84766431215074\n1\n</pre> <pre>Analysed test_samples from:  36%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                                  | 26/73 [00:10&lt;00:18,  2.48it/s]</pre> <pre>56.75859612369776\n1\n</pre> <pre>Analysed test_samples from:  37%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                                  | 27/73 [00:11&lt;00:18,  2.43it/s]</pre> <pre>55.264319793396794\n1\n</pre> <pre>Analysed test_samples from:  38%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                                 | 28/73 [00:11&lt;00:18,  2.43it/s]</pre> <pre>54.210523093821294\n1\n</pre> <pre>Analysed test_samples from:  40%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                                | 29/73 [00:12&lt;00:18,  2.44it/s]</pre> <pre>49.359766857082334\n1\n</pre> <pre>Analysed test_samples from:  41%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                               | 30/73 [00:12&lt;00:17,  2.42it/s]</pre> <pre>48.85940792257731\n1\n</pre> <pre>Analysed test_samples from:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                               | 31/73 [00:12&lt;00:17,  2.42it/s]</pre> <pre>46.72366396670721\n1\n</pre> <pre>Analysed test_samples from:  44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                              | 32/73 [00:13&lt;00:17,  2.40it/s]</pre> <pre>54.393783452209746\n1\n</pre> <pre>Analysed test_samples from:  45%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d                             | 33/73 [00:13&lt;00:16,  2.42it/s]</pre> <pre>52.740114124020806\n1\n</pre> <pre>Analysed test_samples from:  47%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                            | 34/73 [00:14&lt;00:16,  2.42it/s]</pre> <pre>45.756286240857804\n1\n</pre> <pre>Analysed test_samples from:  48%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                            | 35/73 [00:14&lt;00:15,  2.44it/s]</pre> <pre>46.909222072419226\n1\n</pre> <pre>Analysed test_samples from:  49%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                           | 36/73 [00:14&lt;00:15,  2.45it/s]</pre> <pre>49.347706712951805\n1\n</pre> <pre>Analysed test_samples from:  51%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                          | 37/73 [00:15&lt;00:14,  2.44it/s]</pre> <pre>44.11684142456111\n1\n</pre> <pre>Analysed test_samples from:  52%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                          | 38/73 [00:15&lt;00:14,  2.48it/s]</pre> <pre>44.49814772830541\n1\n</pre> <pre>Analysed test_samples from:  53%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                         | 39/73 [00:16&lt;00:13,  2.50it/s]</pre> <pre>48.024888826862636\n1\n</pre> <pre>Analysed test_samples from:  55%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                        | 40/73 [00:16&lt;00:13,  2.41it/s]</pre> <pre>44.924229242657\n1\n</pre> <pre>Analysed test_samples from:  56%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                       | 41/73 [00:16&lt;00:13,  2.46it/s]</pre> <pre>41.50723892255159\n1\n</pre> <pre>Analysed test_samples from:  58%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                       | 42/73 [00:17&lt;00:13,  2.35it/s]</pre> <pre>41.64491860788039\n1\n</pre> <pre>Analysed test_samples from:  59%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                      | 43/73 [00:17&lt;00:12,  2.38it/s]</pre> <pre>41.722504603576965\n1\n</pre> <pre>Analysed test_samples from:  60%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                     | 44/73 [00:18&lt;00:12,  2.31it/s]</pre> <pre>40.34241618016443\n1\n</pre> <pre>Analysed test_samples from:  62%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e                    | 45/73 [00:18&lt;00:12,  2.32it/s]</pre> <pre>40.108723593561294\n1\n</pre> <pre>Analysed test_samples from:  63%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588                    | 46/73 [00:19&lt;00:12,  2.22it/s]</pre> <pre>36.81154899469463\n1\n</pre> <pre>Analysed test_samples from:  64%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 47/73 [00:19&lt;00:11,  2.30it/s]</pre> <pre>39.65189657134642\n1\n</pre> <pre>Analysed test_samples from:  66%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c                  | 48/73 [00:20&lt;00:11,  2.25it/s]</pre> <pre>41.514490074811846\n1\n</pre> <pre>Analysed test_samples from:  67%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f                 | 49/73 [00:20&lt;00:10,  2.26it/s]</pre> <pre>43.89157527070361\n1\n</pre> <pre>Analysed test_samples from:  68%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589                 | 50/73 [00:20&lt;00:09,  2.33it/s]</pre> <pre>40.91405640738739\n1\n</pre> <pre>Analysed test_samples from:  70%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b                | 51/73 [00:21&lt;00:09,  2.38it/s]</pre> <pre>41.317910338500816\n1\n</pre> <pre>Analysed test_samples from:  71%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d               | 52/73 [00:21&lt;00:08,  2.43it/s]</pre> <pre>45.459669397172355\n1\n</pre> <pre>Analysed test_samples from:  73%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f              | 53/73 [00:22&lt;00:08,  2.34it/s]</pre> <pre>45.323642911167845\n1\n</pre> <pre>Analysed test_samples from:  74%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589              | 54/73 [00:22&lt;00:08,  2.27it/s]</pre> <pre>51.51232115170022\n1\n</pre> <pre>Analysed test_samples from:  75%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b             | 55/73 [00:23&lt;00:07,  2.31it/s]</pre> <pre>47.18462437502026\n1\n</pre> <pre>Analysed test_samples from:  77%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d            | 56/73 [00:23&lt;00:07,  2.33it/s]</pre> <pre>50.60343242112565\n1\n</pre> <pre>Analysed test_samples from:  78%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258f           | 57/73 [00:23&lt;00:06,  2.32it/s]</pre> <pre>45.888393916654735\n1\n</pre> <pre>Analysed test_samples from:  79%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589           | 58/73 [00:24&lt;00:06,  2.41it/s]</pre> <pre>47.92214152198338\n1\n</pre> <pre>Analysed test_samples from:  81%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b          | 59/73 [00:24&lt;00:05,  2.49it/s]</pre> <pre>47.751770770057306\n1\n</pre> <pre>Analysed test_samples from:  82%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d         | 60/73 [00:25&lt;00:05,  2.50it/s]</pre> <pre>46.32962527958186\n1\n</pre> <pre>Analysed test_samples from:  84%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588         | 61/73 [00:25&lt;00:04,  2.54it/s]</pre> <pre>43.98838789761642\n1\n</pre> <pre>Analysed test_samples from:  85%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a        | 62/73 [00:25&lt;00:04,  2.50it/s]</pre> <pre>48.91626304222482\n1\n</pre> <pre>Analysed test_samples from:  86%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c       | 63/73 [00:26&lt;00:04,  2.45it/s]</pre> <pre>51.58605600394259\n1\n</pre> <pre>Analysed test_samples from:  88%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e      | 64/73 [00:26&lt;00:03,  2.44it/s]</pre> <pre>47.250393324562516\n1\n</pre> <pre>Analysed test_samples from:  89%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      | 65/73 [00:27&lt;00:03,  2.40it/s]</pre> <pre>44.608468489510656\n1\n</pre> <pre>Analysed test_samples from:  90%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a     | 66/73 [00:27&lt;00:02,  2.41it/s]</pre> <pre>53.646549233053356\n1\n</pre> <pre>Analysed test_samples from:  92%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c    | 67/73 [00:27&lt;00:02,  2.38it/s]</pre> <pre>54.23209794326293\n1\n</pre> <pre>Analysed test_samples from:  93%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   | 68/73 [00:28&lt;00:02,  2.32it/s]</pre> <pre>52.1021871201871\n1\n</pre> <pre>Analysed test_samples from:  95%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588   | 69/73 [00:28&lt;00:01,  2.24it/s]</pre> <pre>51.92919123252516\n1\n</pre> <pre>Analysed test_samples from:  96%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  | 70/73 [00:29&lt;00:01,  2.20it/s]</pre> <pre>45.45830805967085\n1\n</pre> <pre>Analysed test_samples from:  97%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c | 71/73 [00:29&lt;00:00,  2.36it/s]</pre> <pre>51.636680625342834\n1\n</pre> <pre>Analysed test_samples from:  99%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e| 72/73 [00:30&lt;00:00,  2.41it/s]</pre> <pre>53.11865939860117\n1\n</pre> <pre>Analysed test_samples from: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 73/73 [00:30&lt;00:00,  2.40it/s]</pre> <pre>44.4414412699819\nFalse\nFalse\n</pre> <pre>\n</pre> In\u00a0[11]: Copied! <pre>from pmdarima import auto_arima\n</pre> from pmdarima import auto_arima In\u00a0[12]: Copied! <pre>from sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_absolute_error, mean_squared_error\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom tqdm import tqdm\n\ndef create_lag_features(df, lags, target_col='TEMP'):\n    for lag in lags:\n        df[f'{target_col}_lag{lag}'] = df[target_col].shift(lag)\n    return df\n\n# Config\nlags = [1, 2, 3,7]  # example lags\nexog_vars = ['DEWP', 'Month', 'PRCP', 'VISIB']\nall_features = [f'TEMP_lag{l}' for l in lags] + exog_vars\n\nforecast_results = []\n\nfor city, df in city_dataframes.items():\n    data = df.copy()\n    data.reset_index(inplace=True)\n    data['DATE'] = pd.to_datetime(data['DATE'], errors='coerce')\n    data['Month'] = data['DATE'].dt.month\n    data.set_index('DATE', inplace=True)\n    \n    # Filter last 2 years\n    cutoff_date = data.index.max() - pd.DateOffset(years=2)\n    data = data[data.index &gt;= cutoff_date]\n    \n    data[exog_vars + ['TEMP']] = data[exog_vars + ['TEMP']].apply(pd.to_numeric, errors='coerce')\n    data = create_lag_features(data, lags)\n    data.dropna(inplace=True)\n\n    # Split\n    n_total = len(data)\n    n_test = int(0.1 * n_total)\n    n_val = int(0.15 * (n_total - n_test))\n    n_train = n_total - n_val - n_test\n\n    train = data.iloc[:n_train]\n    val = data.iloc[n_train:n_train + n_val]\n    test = data.iloc[n_train + n_val:]\n\n    combined = pd.concat([train, val])\n    # predictions, actuals = [], []\n    predictions, lowers, uppers, actuals = [], [], [], []\n\n    for t in tqdm(range(len(test)), desc=f\"Rolling RF for {city}\"):\n        try:\n            # Define X and y for model training\n            X_train = combined[all_features]\n            y_train = combined['TEMP']\n            \n            # Fit model\n            model = RandomForestRegressor(n_estimators=100, random_state=42)\n            model.fit(X_train, y_train)\n\n            # Prepare test sample\n            x_next = test[all_features].iloc[[t]]\n            y_next = test['TEMP'].iloc[t]\n            # y_pred = model.predict(x_next)[0]\n            all_preds = np.array([tree.predict(x_next)[0] for tree in model.estimators_])\n            pred_mean = np.mean(all_preds)\n            ci_lower = np.percentile(all_preds, 2.5)\n            ci_upper = np.percentile(all_preds, 97.5)\n\n            \n            # predictions.append(y_pred)\n            predictions.append(pred_mean)\n            lowers.append(ci_lower)\n            uppers.append(ci_upper)\n            actuals.append(y_next)\n\n            # Add row to combined history (simulate rolling)\n            next_row = test.iloc[[t]].copy()\n            next_row['TEMP'] = pred_mean  # use predicted value\n            combined = pd.concat([combined, next_row])\n        except Exception as e:\n            print(f\"{city} step {t} failed: {e}\")\n            predictions.append(np.nan)\n            actuals.append(test['TEMP'].iloc[t])\n\n    # Evaluation\n    y_true = np.array(actuals)\n    y_pred = np.array(predictions)\n    mask = ~np.isnan(y_pred)\n\n    if mask.sum() == 0:\n        print(f\"{city} \u2014 no valid predictions\")\n        continue\n\n    mae = mean_absolute_error(y_true[mask], y_pred[mask])\n    rmse = np.sqrt(mean_squared_error(y_true[mask], y_pred[mask]))\n\n    forecast_results.append({\n        'City': city,\n        'Model': 'RandomForest',\n        'Test MAE': mae,\n        'Test RMSE': rmse\n    })\n\n    # Plot\n    test_index = test.index[:len(y_pred)]\n    plt.figure(figsize=(15, 6))\n    plt.plot(data.index[:n_train], data['TEMP'].iloc[:n_train], label='Train', color='blue')\n    plt.plot(data.index[n_train:n_train+n_val], data['TEMP'].iloc[n_train:n_train+n_val], label='Val', color='orange')\n    plt.plot(test_index, y_true, label='Test Actual', color='green')\n    plt.fill_between(test_index, lowers, uppers, color='red', alpha=0.3, label='95% CI')\n    plt.plot(test_index, y_pred, label='Forecast (RF)', color='red')\n    plt.title(f\"Random Forest Rolling Forecast \u2014 {city}\")\n    plt.xlabel(\"Date\")\n    plt.ylabel(\"Temperature\")\n    plt.legend()\n    plt.grid(True)\n    plt.tight_layout()\n    plt.savefig(f\"../../plots/{city}_randomforest.png\")\n    plt.close()\n</pre> from sklearn.ensemble import RandomForestRegressor from sklearn.metrics import mean_absolute_error, mean_squared_error import numpy as np import pandas as pd import matplotlib.pyplot as plt from tqdm import tqdm  def create_lag_features(df, lags, target_col='TEMP'):     for lag in lags:         df[f'{target_col}_lag{lag}'] = df[target_col].shift(lag)     return df  # Config lags = [1, 2, 3,7]  # example lags exog_vars = ['DEWP', 'Month', 'PRCP', 'VISIB'] all_features = [f'TEMP_lag{l}' for l in lags] + exog_vars  forecast_results = []  for city, df in city_dataframes.items():     data = df.copy()     data.reset_index(inplace=True)     data['DATE'] = pd.to_datetime(data['DATE'], errors='coerce')     data['Month'] = data['DATE'].dt.month     data.set_index('DATE', inplace=True)          # Filter last 2 years     cutoff_date = data.index.max() - pd.DateOffset(years=2)     data = data[data.index &gt;= cutoff_date]          data[exog_vars + ['TEMP']] = data[exog_vars + ['TEMP']].apply(pd.to_numeric, errors='coerce')     data = create_lag_features(data, lags)     data.dropna(inplace=True)      # Split     n_total = len(data)     n_test = int(0.1 * n_total)     n_val = int(0.15 * (n_total - n_test))     n_train = n_total - n_val - n_test      train = data.iloc[:n_train]     val = data.iloc[n_train:n_train + n_val]     test = data.iloc[n_train + n_val:]      combined = pd.concat([train, val])     # predictions, actuals = [], []     predictions, lowers, uppers, actuals = [], [], [], []      for t in tqdm(range(len(test)), desc=f\"Rolling RF for {city}\"):         try:             # Define X and y for model training             X_train = combined[all_features]             y_train = combined['TEMP']                          # Fit model             model = RandomForestRegressor(n_estimators=100, random_state=42)             model.fit(X_train, y_train)              # Prepare test sample             x_next = test[all_features].iloc[[t]]             y_next = test['TEMP'].iloc[t]             # y_pred = model.predict(x_next)[0]             all_preds = np.array([tree.predict(x_next)[0] for tree in model.estimators_])             pred_mean = np.mean(all_preds)             ci_lower = np.percentile(all_preds, 2.5)             ci_upper = np.percentile(all_preds, 97.5)                           # predictions.append(y_pred)             predictions.append(pred_mean)             lowers.append(ci_lower)             uppers.append(ci_upper)             actuals.append(y_next)              # Add row to combined history (simulate rolling)             next_row = test.iloc[[t]].copy()             next_row['TEMP'] = pred_mean  # use predicted value             combined = pd.concat([combined, next_row])         except Exception as e:             print(f\"{city} step {t} failed: {e}\")             predictions.append(np.nan)             actuals.append(test['TEMP'].iloc[t])      # Evaluation     y_true = np.array(actuals)     y_pred = np.array(predictions)     mask = ~np.isnan(y_pred)      if mask.sum() == 0:         print(f\"{city} \u2014 no valid predictions\")         continue      mae = mean_absolute_error(y_true[mask], y_pred[mask])     rmse = np.sqrt(mean_squared_error(y_true[mask], y_pred[mask]))      forecast_results.append({         'City': city,         'Model': 'RandomForest',         'Test MAE': mae,         'Test RMSE': rmse     })      # Plot     test_index = test.index[:len(y_pred)]     plt.figure(figsize=(15, 6))     plt.plot(data.index[:n_train], data['TEMP'].iloc[:n_train], label='Train', color='blue')     plt.plot(data.index[n_train:n_train+n_val], data['TEMP'].iloc[n_train:n_train+n_val], label='Val', color='orange')     plt.plot(test_index, y_true, label='Test Actual', color='green')     plt.fill_between(test_index, lowers, uppers, color='red', alpha=0.3, label='95% CI')     plt.plot(test_index, y_pred, label='Forecast (RF)', color='red')     plt.title(f\"Random Forest Rolling Forecast \u2014 {city}\")     plt.xlabel(\"Date\")     plt.ylabel(\"Temperature\")     plt.legend()     plt.grid(True)     plt.tight_layout()     plt.savefig(f\"../../plots/{city}_randomforest.png\")     plt.close()  <pre>Rolling RF for Ateny: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:23&lt;00:00,  3.01it/s]\nRolling RF for Berlin: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:24&lt;00:00,  2.90it/s]\nRolling RF for Bruksela: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:25&lt;00:00,  2.79it/s]\nRolling RF for Budapeszt: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:24&lt;00:00,  2.96it/s]\nRolling RF for Lisbona: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 69/69 [00:22&lt;00:00,  3.09it/s]\nRolling RF for Londyn: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 71/71 [00:28&lt;00:00,  2.52it/s]\nRolling RF for Madryd: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:25&lt;00:00,  2.86it/s]\nRolling RF for Moskwa: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 28/28 [00:06&lt;00:00,  4.61it/s]\nRolling RF for Pary\u017c: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:25&lt;00:00,  2.79it/s]\nRolling RF for Praga: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:26&lt;00:00,  2.77it/s]\nRolling RF for Warszawa: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:25&lt;00:00,  2.80it/s]\nRolling RF for Wiede\u0144: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 72/72 [00:26&lt;00:00,  2.76it/s]\n</pre> In\u00a0[13]: Copied! <pre>forecast_results\n</pre> forecast_results Out[13]: <pre>[{'City': 'Ateny',\n  'Model': 'RandomForest',\n  'Test MAE': 2.5913532538431117,\n  'Test RMSE': 3.3110576437363473},\n {'City': 'Berlin',\n  'Model': 'RandomForest',\n  'Test MAE': 2.213854448364975,\n  'Test RMSE': 2.763150691958107},\n {'City': 'Bruksela',\n  'Model': 'RandomForest',\n  'Test MAE': 2.104675499193953,\n  'Test RMSE': 2.5358631943032495},\n {'City': 'Budapeszt',\n  'Model': 'RandomForest',\n  'Test MAE': 2.975801361490591,\n  'Test RMSE': 3.5485013812483865},\n {'City': 'Lisbona',\n  'Model': 'RandomForest',\n  'Test MAE': 1.8826458219314957,\n  'Test RMSE': 2.5379073770421536},\n {'City': 'Londyn',\n  'Model': 'RandomForest',\n  'Test MAE': 1.613961442661724,\n  'Test RMSE': 1.9668790687150095},\n {'City': 'Madryd',\n  'Model': 'RandomForest',\n  'Test MAE': 2.404226537265454,\n  'Test RMSE': 2.965278670613778},\n {'City': 'Moskwa',\n  'Model': 'RandomForest',\n  'Test MAE': 3.6079551258404217,\n  'Test RMSE': 4.908083692679886},\n {'City': 'Pary\u017c',\n  'Model': 'RandomForest',\n  'Test MAE': 2.098009928791851,\n  'Test RMSE': 2.5611668885396877},\n {'City': 'Praga',\n  'Model': 'RandomForest',\n  'Test MAE': 2.0448051753992456,\n  'Test RMSE': 2.687780845547912},\n {'City': 'Warszawa',\n  'Model': 'RandomForest',\n  'Test MAE': 2.1570712354846355,\n  'Test RMSE': 2.584586108583517},\n {'City': 'Wiede\u0144',\n  'Model': 'RandomForest',\n  'Test MAE': 2.391423579789416,\n  'Test RMSE': 3.075091837920412}]</pre>"},{"location":"notebooks/Rename/","title":"\ud83d\uddfa\ufe0f Mapowanie stacji","text":"In\u00a0[1]: Copied! <pre>import os\nimport re\n</pre> import os import re In\u00a0[7]: Copied! <pre>station_map = {\n    '12295099999': 'Bia\u0142ystok',\n    '12240099999': 'Bydgoszcz',\n    '12140099999': 'Gda\u0144sk',  \n    '12300099999': 'Gorz\u00f3w_Wielkopolski',  \n    '12560099999': 'Katowice',\n    '12570099999': 'Kielce',\n    '12565099999': 'Krak\u00f3w',\n    '12495099999': 'Lublin', \n    '12272099999': 'Olsztyn',\n    '12530099999': 'Opole',\n    '12330099999': 'Pozna\u0144',\n    '12580099999': 'Rzesz\u00f3w',\n    '12205099999': 'Szczecin',  \n    '12250099999': 'Toru\u0144',\n    '12375099999': 'Warszawa',\n    '12424099999': 'Wroc\u0142aw',\n    '12400099999': 'Zielona_G\u00f3ra',\n    '12465099999': '\u0141\u00f3d\u017a',\n    '11035099999': 'Wiede\u0144',\n    '06451099999': 'Bruksela',\n    '11518099999': 'Praga',\n    '07156099999': 'Pary\u017c',\n    '10384099999': 'Berlin',\n     '16716199999': 'Ateny',\n    '12843099999': 'Budapeszt',\n    '08579099999': 'Lisbona',\n    '03781099999': 'Londyn',\n    '08221099999': 'Madryd',\n    '27612099999': 'Moskwa',\n}\n</pre> station_map = {     '12295099999': 'Bia\u0142ystok',     '12240099999': 'Bydgoszcz',     '12140099999': 'Gda\u0144sk',       '12300099999': 'Gorz\u00f3w_Wielkopolski',       '12560099999': 'Katowice',     '12570099999': 'Kielce',     '12565099999': 'Krak\u00f3w',     '12495099999': 'Lublin',      '12272099999': 'Olsztyn',     '12530099999': 'Opole',     '12330099999': 'Pozna\u0144',     '12580099999': 'Rzesz\u00f3w',     '12205099999': 'Szczecin',       '12250099999': 'Toru\u0144',     '12375099999': 'Warszawa',     '12424099999': 'Wroc\u0142aw',     '12400099999': 'Zielona_G\u00f3ra',     '12465099999': '\u0141\u00f3d\u017a',     '11035099999': 'Wiede\u0144',     '06451099999': 'Bruksela',     '11518099999': 'Praga',     '07156099999': 'Pary\u017c',     '10384099999': 'Berlin',      '16716199999': 'Ateny',     '12843099999': 'Budapeszt',     '08579099999': 'Lisbona',     '03781099999': 'Londyn',     '08221099999': 'Madryd',     '27612099999': 'Moskwa', } In\u00a0[3]: Copied! <pre>def rename_files(directory):\n    \"\"\"Rename files from '&lt;station_id&gt;_&lt;year&gt;.csv' to '&lt;city_name&gt;_&lt;year&gt;.csv' using station_map.\"\"\"\n    pattern = re.compile(r'^(\\d+)_(\\d{4})\\.csv$')  # Wzorzec dopasowuj\u0105cy nazw\u0119 pliku\n    \n    for filename in os.listdir(directory):\n        match = pattern.match(filename)  # Sprawd\u017a, czy plik pasuje do wzorca\n        if match:\n            station_id = match.group(1)  # Pobierz ID stacji\n            year = match.group(2)        # Pobierz rok\n            \n            if station_id in station_map:\n                city_name = station_map[station_id]  # Znajd\u017a nazw\u0119 miasta dla ID stacji\n                new_filename = f\"{city_name}_{year}.csv\"\n                \n                old_path = os.path.join(directory, filename)  # Stara \u015bcie\u017cka pliku\n                new_path = os.path.join(directory, new_filename)  # Nowa \u015bcie\u017cka pliku\n                \n                try:\n                    os.rename(old_path, new_path)  # Zmie\u0144 nazw\u0119 pliku\n                    print(f\"Renamed: {filename} -&gt; {new_filename}\")\n                except OSError as e:\n                    print(f\"Error renaming {filename}: {e}\")\n            else:\n                print(f\"No mapping found for station ID: {station_id}\")\n</pre> def rename_files(directory):     \"\"\"Rename files from '_.csv' to '_.csv' using station_map.\"\"\"     pattern = re.compile(r'^(\\d+)_(\\d{4})\\.csv$')  # Wzorzec dopasowuj\u0105cy nazw\u0119 pliku          for filename in os.listdir(directory):         match = pattern.match(filename)  # Sprawd\u017a, czy plik pasuje do wzorca         if match:             station_id = match.group(1)  # Pobierz ID stacji             year = match.group(2)        # Pobierz rok                          if station_id in station_map:                 city_name = station_map[station_id]  # Znajd\u017a nazw\u0119 miasta dla ID stacji                 new_filename = f\"{city_name}_{year}.csv\"                                  old_path = os.path.join(directory, filename)  # Stara \u015bcie\u017cka pliku                 new_path = os.path.join(directory, new_filename)  # Nowa \u015bcie\u017cka pliku                                  try:                     os.rename(old_path, new_path)  # Zmie\u0144 nazw\u0119 pliku                     print(f\"Renamed: {filename} -&gt; {new_filename}\")                 except OSError as e:                     print(f\"Error renaming {filename}: {e}\")             else:                 print(f\"No mapping found for station ID: {station_id}\")  In\u00a0[6]: Copied! <pre>directory_path = 'Extracted_Stations/' \nrename_files(directory_path)\n</pre> directory_path = 'Extracted_Stations/'  rename_files(directory_path) <pre>Renamed: 12843099999_1973.csv -&gt; Budapeszt_1973.csv\nRenamed: 12843099999_1974.csv -&gt; Budapeszt_1974.csv\nRenamed: 12843099999_1975.csv -&gt; Budapeszt_1975.csv\nRenamed: 12843099999_1976.csv -&gt; Budapeszt_1976.csv\nRenamed: 12843099999_1977.csv -&gt; Budapeszt_1977.csv\nRenamed: 12843099999_1978.csv -&gt; Budapeszt_1978.csv\nRenamed: 12843099999_1979.csv -&gt; Budapeszt_1979.csv\nRenamed: 12843099999_1980.csv -&gt; Budapeszt_1980.csv\nRenamed: 12843099999_1981.csv -&gt; Budapeszt_1981.csv\nRenamed: 12843099999_1982.csv -&gt; Budapeszt_1982.csv\nRenamed: 12843099999_1983.csv -&gt; Budapeszt_1983.csv\nRenamed: 12843099999_1984.csv -&gt; Budapeszt_1984.csv\nRenamed: 12843099999_1985.csv -&gt; Budapeszt_1985.csv\nRenamed: 12843099999_1986.csv -&gt; Budapeszt_1986.csv\nRenamed: 12843099999_1987.csv -&gt; Budapeszt_1987.csv\nRenamed: 12843099999_1988.csv -&gt; Budapeszt_1988.csv\nRenamed: 12843099999_1989.csv -&gt; Budapeszt_1989.csv\nRenamed: 12843099999_1990.csv -&gt; Budapeszt_1990.csv\nRenamed: 12843099999_1991.csv -&gt; Budapeszt_1991.csv\nRenamed: 12843099999_1992.csv -&gt; Budapeszt_1992.csv\nRenamed: 12843099999_1993.csv -&gt; Budapeszt_1993.csv\nRenamed: 12843099999_1994.csv -&gt; Budapeszt_1994.csv\nRenamed: 12843099999_1995.csv -&gt; Budapeszt_1995.csv\nRenamed: 12843099999_1996.csv -&gt; Budapeszt_1996.csv\nRenamed: 12843099999_1997.csv -&gt; Budapeszt_1997.csv\nRenamed: 12843099999_1998.csv -&gt; Budapeszt_1998.csv\nRenamed: 12843099999_1999.csv -&gt; Budapeszt_1999.csv\nRenamed: 12843099999_2000.csv -&gt; Budapeszt_2000.csv\nRenamed: 12843099999_2001.csv -&gt; Budapeszt_2001.csv\nRenamed: 12843099999_2002.csv -&gt; Budapeszt_2002.csv\nRenamed: 12843099999_2003.csv -&gt; Budapeszt_2003.csv\nRenamed: 12843099999_2004.csv -&gt; Budapeszt_2004.csv\nRenamed: 12843099999_2005.csv -&gt; Budapeszt_2005.csv\nRenamed: 12843099999_2006.csv -&gt; Budapeszt_2006.csv\nRenamed: 12843099999_2007.csv -&gt; Budapeszt_2007.csv\nRenamed: 12843099999_2008.csv -&gt; Budapeszt_2008.csv\nRenamed: 12843099999_2009.csv -&gt; Budapeszt_2009.csv\nRenamed: 12843099999_2010.csv -&gt; Budapeszt_2010.csv\nRenamed: 12843099999_2011.csv -&gt; Budapeszt_2011.csv\nRenamed: 12843099999_2012.csv -&gt; Budapeszt_2012.csv\nRenamed: 12843099999_2013.csv -&gt; Budapeszt_2013.csv\nRenamed: 12843099999_2014.csv -&gt; Budapeszt_2014.csv\nRenamed: 12843099999_2015.csv -&gt; Budapeszt_2015.csv\nRenamed: 12843099999_2016.csv -&gt; Budapeszt_2016.csv\nRenamed: 12843099999_2017.csv -&gt; Budapeszt_2017.csv\nRenamed: 12843099999_2018.csv -&gt; Budapeszt_2018.csv\nRenamed: 12843099999_2019.csv -&gt; Budapeszt_2019.csv\nRenamed: 12843099999_2020.csv -&gt; Budapeszt_2020.csv\nRenamed: 12843099999_2021.csv -&gt; Budapeszt_2021.csv\nRenamed: 12843099999_2022.csv -&gt; Budapeszt_2022.csv\nRenamed: 12843099999_2023.csv -&gt; Budapeszt_2023.csv\n</pre>"},{"location":"notebooks/Rename/#automatyczna-zmiana-nazw-plikow-z-identyfikatorow-stacji-na-nazwy-miast","title":"Automatyczna zmiana nazw plik\u00f3w z identyfikator\u00f3w stacji na nazwy miast\u00b6","text":""},{"location":"notebooks/Rename/#cel","title":"Cel\u00b6","text":"<p>Kod s\u0142u\u017cy do zmiany nazw plik\u00f3w zawieraj\u0105cych dane pogodowe, kt\u00f3re pierwotnie maj\u0105 nazwy w formacie <code>&lt;station_id&gt;_&lt;year&gt;.csv</code>, na bardziej czytelny format <code>&lt;city_name&gt;_&lt;year&gt;.csv</code>. Dzi\u0119ki temu pliki s\u0105 \u0142atwiejsze do identyfikacji i p\u00f3\u017aniejszej analizy.</p>"},{"location":"notebooks/Rename/#sposob-dziaania","title":"Spos\u00f3b dzia\u0142ania\u00b6","text":"<ol> <li><p>Mapowanie stacji na miasta Definiowany jest s\u0142ownik <code>station_map</code>, kt\u00f3ry przypisuje unikalne identyfikatory stacji pomiarowych (ci\u0105gi liczbowe) do odpowiadaj\u0105cych im nazw miast.</p> </li> <li><p>Wzorzec nazwy pliku Za pomoc\u0105 wyra\u017cenia regularnego definiowany jest wzorzec, kt\u00f3ry dopasowuje nazwy plik\u00f3w w formacie <code>&lt;station_id&gt;_&lt;year&gt;.csv</code>. Przyk\u0142ad: <code>12375099999_2020.csv</code></p> </li> <li><p>Przetwarzanie katalogu Funkcja <code>rename_files</code> przegl\u0105da wszystkie pliki w podanym katalogu.</p> </li> <li><p>Dopasowanie i ekstrakcja danych Dla ka\u017cdego pliku sprawdza, czy jego nazwa odpowiada wzorcowi. Je\u015bli tak, wyci\u0105ga numer stacji i rok z nazwy pliku.</p> </li> <li><p>Zmiana nazwy pliku</p> <ul> <li>Sprawdza, czy numer stacji znajduje si\u0119 w s\u0142owniku <code>station_map</code>.</li> <li>Je\u015bli tak, tworzy now\u0105 nazw\u0119 pliku, zast\u0119puj\u0105c identyfikator stacji nazw\u0105 miasta.</li> <li>Nast\u0119pnie zmienia nazw\u0119 pliku na now\u0105, informuj\u0105c o sukcesie lub ewentualnym b\u0142\u0119dzie.</li> <li>Je\u015bli numer stacji nie jest w s\u0142owniku, wy\u015bwietla odpowiedni komunikat i pomija plik.</li> </ul> </li> </ol>"},{"location":"notebooks/Rename/#efekt","title":"Efekt\u00b6","text":"<p>Po uruchomieniu funkcji w katalogu <code>Extracted_Stations/</code> pliki z danymi zostan\u0105 przemianowane na format zawieraj\u0105cy nazw\u0119 miasta i rok, np. <code>12375099999_2020.csv</code> \u2192 <code>Warszawa_2020.csv</code>. U\u0142atwia to identyfikacj\u0119 zawarto\u015bci plik\u00f3w oraz dalsz\u0105 prac\u0119 z danymi.</p>"},{"location":"notebooks/Rename/#podsumowanie","title":"Podsumowanie\u00b6","text":"<p>Dzi\u0119ki automatycznej zmianie nazw plik\u00f3w mo\u017cliwe jest lepsze zarz\u0105dzanie i organizacja danych klimatycznych, co jest wa\u017cne przy analizie wielu plik\u00f3w z r\u00f3\u017cnymi stacjami pomiarowymi i latami.</p>"},{"location":"notebooks/Trend/","title":"\ud83d\udcc8 Analiza trendu","text":"In\u00a0[1]: Copied! <pre>import pickle\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.seasonal import STL\nimport seaborn as sns\nimport statsmodels.api as sm\nimport numpy as np\n</pre> import pickle import pandas as pd import matplotlib.pyplot as plt from statsmodels.tsa.seasonal import STL import seaborn as sns import statsmodels.api as sm import numpy as np In\u00a0[2]: Copied! <pre>with open('../../data/climate_data.pkl', 'rb') as f:\n    data = pickle.load(f)\n\ncities = data['cities']\nstations_info = data['stations_info']\n</pre> with open('../../data/climate_data.pkl', 'rb') as f:     data = pickle.load(f)  cities = data['cities'] stations_info = data['stations_info'] In\u00a0[3]: Copied! <pre>city_list = list(cities.keys())\n</pre> city_list = list(cities.keys()) In\u00a0[4]: Copied! <pre>def decompose_all_cities(cities, city_list, column='TEMP', freq='ME', period=12, plot=True):\n    \"\"\"\n    Wykonuje dekompozycj\u0119 STL dla wybranego parametru meteorologicznego (np. temperatury) \n    w danych miesi\u0119cznych dla podanych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z danymi meteorologicznymi, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame.\n    city_list : list\n        Lista nazw miast do analizy.\n    column : str, opcjonalnie, domy\u015blnie 'TEMP'\n        Nazwa kolumny z danymi do dekompozycji (np. temperatura).\n    freq : str, opcjonalnie, domy\u015blnie 'ME' (miesi\u0119czne)\n        Cz\u0119stotliwo\u015b\u0107 pr\u00f3bkowania danych do resamplingu (np. 'ME' - koniec miesi\u0105ca).\n    period : int, opcjonalnie, domy\u015blnie 12\n        Okres sezonowo\u015bci (np. 12 miesi\u0119cy).\n    plot : bool, opcjonalnie, domy\u015blnie True\n        Czy wy\u015bwietli\u0107 wykresy dekompozycji.\n\n    Zwraca:\n    --------\n    dict\n        S\u0142ownik z wyodr\u0119bnionymi trendami STL dla ka\u017cdego miasta.\n    \"\"\"\n    trends = {}\n\n    for city in city_list:\n        df = cities[city].copy()\n        df['DATE'] = pd.to_datetime(df['DATE'])\n\n        # Grupowanie danych do miesi\u0119cznych warto\u015bci \u015brednich dla wybranego parametru\n        monthly = df.set_index('DATE').resample(freq)[column].mean()\n\n        # Ustawienie pe\u0142nego, ci\u0105g\u0142ego indeksu miesi\u0119cznego, brakuj\u0105ce miesi\u0105ce uzupe\u0142nione NaN\n        monthly = monthly.asfreq(freq)\n\n        # Usuwanie brakuj\u0105cych warto\u015bci NaN (STL nie radzi sobie z NaN, ale toleruje kr\u00f3tkie luki)\n        monthly_clean = monthly.dropna()\n\n        # Sprawdzenie czy jest wystarczaj\u0105co danych do dekompozycji (minimum 2 pe\u0142ne okresy)\n        if len(monthly_clean) &lt; 2 * period:\n            print(f\"Zbyt ma\u0142o danych do dekompozycji dla miasta {city}\")\n            continue\n\n        # Dekompozycja STL - rozdzielenie na trend, sezonowo\u015b\u0107 i reszty\n        stl = STL(monthly_clean, period=period, robust=True)\n        res = stl.fit()\n\n        # Zapisanie wyodr\u0119bnionego trendu dla miasta\n        trends[city] = res.trend\n\n        if plot:\n            # Wizualizacja wynik\u00f3w dekompozycji\n            plt.figure(figsize=(12, 8))\n            plt.suptitle(f'Dekompozycja STL miesi\u0119czna dla {city} \u2013 {column}', fontsize=14)\n\n            plt.subplot(4, 1, 1)\n            plt.plot(monthly_clean.index, monthly_clean.values, label='Oryginalne')\n            plt.legend()\n\n            plt.subplot(4, 1, 2)\n            plt.plot(res.trend.index, res.trend.values, label='Trend', color='orange')\n            plt.legend()\n\n            plt.subplot(4, 1, 3)\n            plt.plot(res.seasonal.index, res.seasonal.values, label='Sezonowo\u015b\u0107', color='green')\n            plt.legend()\n\n            plt.subplot(4, 1, 4)\n            plt.plot(res.resid.index, res.resid.values, label='Reszty', color='red')\n            plt.legend()\n\n            plt.tight_layout(rect=[0, 0, 1, 0.95])\n            plt.show()\n\n    return trends\n</pre> def decompose_all_cities(cities, city_list, column='TEMP', freq='ME', period=12, plot=True):     \"\"\"     Wykonuje dekompozycj\u0119 STL dla wybranego parametru meteorologicznego (np. temperatury)      w danych miesi\u0119cznych dla podanych miast.      Parametry:     ----------     cities : dict         S\u0142ownik z danymi meteorologicznymi, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame.     city_list : list         Lista nazw miast do analizy.     column : str, opcjonalnie, domy\u015blnie 'TEMP'         Nazwa kolumny z danymi do dekompozycji (np. temperatura).     freq : str, opcjonalnie, domy\u015blnie 'ME' (miesi\u0119czne)         Cz\u0119stotliwo\u015b\u0107 pr\u00f3bkowania danych do resamplingu (np. 'ME' - koniec miesi\u0105ca).     period : int, opcjonalnie, domy\u015blnie 12         Okres sezonowo\u015bci (np. 12 miesi\u0119cy).     plot : bool, opcjonalnie, domy\u015blnie True         Czy wy\u015bwietli\u0107 wykresy dekompozycji.      Zwraca:     --------     dict         S\u0142ownik z wyodr\u0119bnionymi trendami STL dla ka\u017cdego miasta.     \"\"\"     trends = {}      for city in city_list:         df = cities[city].copy()         df['DATE'] = pd.to_datetime(df['DATE'])          # Grupowanie danych do miesi\u0119cznych warto\u015bci \u015brednich dla wybranego parametru         monthly = df.set_index('DATE').resample(freq)[column].mean()          # Ustawienie pe\u0142nego, ci\u0105g\u0142ego indeksu miesi\u0119cznego, brakuj\u0105ce miesi\u0105ce uzupe\u0142nione NaN         monthly = monthly.asfreq(freq)          # Usuwanie brakuj\u0105cych warto\u015bci NaN (STL nie radzi sobie z NaN, ale toleruje kr\u00f3tkie luki)         monthly_clean = monthly.dropna()          # Sprawdzenie czy jest wystarczaj\u0105co danych do dekompozycji (minimum 2 pe\u0142ne okresy)         if len(monthly_clean) &lt; 2 * period:             print(f\"Zbyt ma\u0142o danych do dekompozycji dla miasta {city}\")             continue          # Dekompozycja STL - rozdzielenie na trend, sezonowo\u015b\u0107 i reszty         stl = STL(monthly_clean, period=period, robust=True)         res = stl.fit()          # Zapisanie wyodr\u0119bnionego trendu dla miasta         trends[city] = res.trend          if plot:             # Wizualizacja wynik\u00f3w dekompozycji             plt.figure(figsize=(12, 8))             plt.suptitle(f'Dekompozycja STL miesi\u0119czna dla {city} \u2013 {column}', fontsize=14)              plt.subplot(4, 1, 1)             plt.plot(monthly_clean.index, monthly_clean.values, label='Oryginalne')             plt.legend()              plt.subplot(4, 1, 2)             plt.plot(res.trend.index, res.trend.values, label='Trend', color='orange')             plt.legend()              plt.subplot(4, 1, 3)             plt.plot(res.seasonal.index, res.seasonal.values, label='Sezonowo\u015b\u0107', color='green')             plt.legend()              plt.subplot(4, 1, 4)             plt.plot(res.resid.index, res.resid.values, label='Reszty', color='red')             plt.legend()              plt.tight_layout(rect=[0, 0, 1, 0.95])             plt.show()      return trends  In\u00a0[5]: Copied! <pre># Dekopozycja dla \u015bredniej temperatury\ntrends_temp = decompose_all_cities(cities, city_list, 'TEMP')\n</pre> # Dekopozycja dla \u015bredniej temperatury trends_temp = decompose_all_cities(cities, city_list, 'TEMP') In\u00a0[6]: Copied! <pre># Dekopozycja dla temperatury minimalnej\ntrends_min = decompose_all_cities(cities, city_list, column='MIN')\n</pre> # Dekopozycja dla temperatury minimalnej trends_min = decompose_all_cities(cities, city_list, column='MIN') In\u00a0[7]: Copied! <pre># Dekopozycja dla temperatury maksymalnej\ntrends_max = decompose_all_cities(cities, city_list, 'MAX')\n</pre> # Dekopozycja dla temperatury maksymalnej trends_max = decompose_all_cities(cities, city_list, 'MAX') In\u00a0[8]: Copied! <pre>def plot_trends(trends_temp, trends_max, trends_min, city_list):\n    \"\"\"\n    Rysuje wykresy trend\u00f3w temperatur dla wybranych miast na podstawie wynik\u00f3w dekompozycji STL.\n\n    Parametry:\n    ----------\n    trends_temp : dict\n        S\u0142ownik trend\u00f3w dla \u015bredniej temperatury (TEMP), gdzie kluczem jest nazwa miasta.\n    trends_max : dict\n        S\u0142ownik trend\u00f3w dla maksymalnej temperatury (MAX).\n    trends_min : dict\n        S\u0142ownik trend\u00f3w dla minimalnej temperatury (MIN).\n    city_list : list\n        Lista nazw miast do uwzgl\u0119dnienia na wykresach.\n\n    Dzia\u0142anie:\n    ----------\n    Dla ka\u017cdego zestawu trend\u00f3w (TEMP, MAX, MIN) tworzone s\u0105 osobne wykresy liniowe pokazuj\u0105ce zmiany trendu w czasie dla wybranych miast.\n    \"\"\"\n\n    palette = sns.color_palette(\"tab20\", n_colors=len(city_list))\n\n    # Funkcja pomocnicza do rysowania pojedynczego wykresu trend\u00f3w\n    def plot_single_trend(trends_dict, title):\n        plt.figure(figsize=(12, 6))\n        for i, city in enumerate(city_list):\n            if city in trends_dict:\n                trend = trends_dict[city]\n                plt.plot(trend.index, trend.values, label=city, color=palette[i])\n        plt.title(title)\n        plt.xlabel('Rok')\n        plt.ylabel('Trend')\n        plt.legend()\n        plt.grid(True)\n        plt.tight_layout()\n        plt.show()\n\n    # Rysowanie wykres\u00f3w dla \u015bredniej, maksymalnej i minimalnej temperatury\n    plot_single_trend(trends_temp, 'Trend \u015bredniej temperatury (TEMP)')\n    plot_single_trend(trends_max, 'Trend maksymalnej temperatury (MAX)')\n    plot_single_trend(trends_min, 'Trend minimalnej temperatury (MIN)')\n</pre> def plot_trends(trends_temp, trends_max, trends_min, city_list):     \"\"\"     Rysuje wykresy trend\u00f3w temperatur dla wybranych miast na podstawie wynik\u00f3w dekompozycji STL.      Parametry:     ----------     trends_temp : dict         S\u0142ownik trend\u00f3w dla \u015bredniej temperatury (TEMP), gdzie kluczem jest nazwa miasta.     trends_max : dict         S\u0142ownik trend\u00f3w dla maksymalnej temperatury (MAX).     trends_min : dict         S\u0142ownik trend\u00f3w dla minimalnej temperatury (MIN).     city_list : list         Lista nazw miast do uwzgl\u0119dnienia na wykresach.      Dzia\u0142anie:     ----------     Dla ka\u017cdego zestawu trend\u00f3w (TEMP, MAX, MIN) tworzone s\u0105 osobne wykresy liniowe pokazuj\u0105ce zmiany trendu w czasie dla wybranych miast.     \"\"\"      palette = sns.color_palette(\"tab20\", n_colors=len(city_list))      # Funkcja pomocnicza do rysowania pojedynczego wykresu trend\u00f3w     def plot_single_trend(trends_dict, title):         plt.figure(figsize=(12, 6))         for i, city in enumerate(city_list):             if city in trends_dict:                 trend = trends_dict[city]                 plt.plot(trend.index, trend.values, label=city, color=palette[i])         plt.title(title)         plt.xlabel('Rok')         plt.ylabel('Trend')         plt.legend()         plt.grid(True)         plt.tight_layout()         plt.show()      # Rysowanie wykres\u00f3w dla \u015bredniej, maksymalnej i minimalnej temperatury     plot_single_trend(trends_temp, 'Trend \u015bredniej temperatury (TEMP)')     plot_single_trend(trends_max, 'Trend maksymalnej temperatury (MAX)')     plot_single_trend(trends_min, 'Trend minimalnej temperatury (MIN)')  In\u00a0[9]: Copied! <pre>plot_trends(trends_temp, trends_max, trends_min, city_list)\n</pre> plot_trends(trends_temp, trends_max, trends_min, city_list) In\u00a0[10]: Copied! <pre>def plot_weather_phenomena_trends(cities, city_list, phenomena):\n    \"\"\"\n    Analizuje i wizualizuje trendy miesi\u0119cznej liczby dni z okre\u015blonymi zjawiskami pogodowymi\n    dla wybranych miast, stosuj\u0105c wyg\u0142adzanie LOWESS.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z danymi pogodowymi, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame.\n    city_list : list\n        Lista nazw miast do analizy.\n    phenomena : list\n        Lista nazw zjawisk pogodowych (np. ['Rain', 'Snow', 'Hail', 'Thunder']).\n\n    Dzia\u0142anie:\n    ----------\n    - Grupuje dane dzienne do miesi\u0119cznych sum dni, w kt\u00f3rych wyst\u0105pi\u0142o dane zjawisko.\n    - Stosuje wyg\u0142adzanie LOWESS na szeregach czasowych, aby uwidoczni\u0107 trendy.\n    - Pomija Londyn na wykresach dla zjawisk \"Rain\" i \"Snow\".\n    - Zwraca s\u0142ownik z trendami LOWESS dla ka\u017cdego miasta i zjawiska.\n\n    Zwraca:\n    --------\n    dict\n        S\u0142ownik z trendami LOWESS, struktura: {zjawisko: {miasto: Series trendu}}\n    \"\"\"\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    import statsmodels.api as sm\n\n    palette = sns.color_palette(\"tab20\", n_colors=len(city_list))\n    trends = {pheno: {} for pheno in phenomena}\n\n    for phenomenon in phenomena:\n        plt.figure(figsize=(12, 6))\n\n        for i, city in enumerate(city_list):\n            # Pomijamy Londyn tylko dla Rain i Snow\n            if city == 'Londyn' and phenomenon in ['Rain', 'Snow']:\n                continue\n\n            df = cities[city].copy()\n            df['DATE'] = pd.to_datetime(df['DATE'])\n            df['YearMonth'] = df['DATE'].dt.to_period('M')\n\n            # Grupowanie po miesi\u0105cach i sumowanie dni z wyst\u0105pieniem zjawiska\n            monthly_counts = df.groupby('YearMonth')[phenomenon].sum()\n            monthly_counts.index = monthly_counts.index.to_timestamp()\n\n            x = np.arange(len(monthly_counts))\n            y = monthly_counts.values\n\n            # Pomijanie miast z niewystarczaj\u0105c\u0105 ilo\u015bci\u0105 danych\n            if len(x) &lt; 10:\n                continue\n\n            # Wyg\u0142adzanie LOWESS\n            lowess_smoothed = sm.nonparametric.lowess(y, x, frac=0.2, return_sorted=False)\n\n            # Zapisywanie trendu do s\u0142ownika\n            trend_series = pd.Series(lowess_smoothed, index=monthly_counts.index)\n            trends[phenomenon][city] = trend_series\n\n            # Rysowanie wykresu trendu\n            plt.plot(monthly_counts.index, lowess_smoothed, label=city, color=palette[i])\n\n        plt.title(f'Trend miesi\u0119cznej liczby dni z wyst\u0119powaniem: {phenomenon} (LOWESS)')\n        plt.xlabel('Rok')\n        plt.ylabel('Liczba dni w miesi\u0105cu')\n        plt.legend()\n        plt.grid(True)\n        plt.tight_layout()\n        plt.show()\n\n    return trends\n</pre> def plot_weather_phenomena_trends(cities, city_list, phenomena):     \"\"\"     Analizuje i wizualizuje trendy miesi\u0119cznej liczby dni z okre\u015blonymi zjawiskami pogodowymi     dla wybranych miast, stosuj\u0105c wyg\u0142adzanie LOWESS.      Parametry:     ----------     cities : dict         S\u0142ownik z danymi pogodowymi, gdzie kluczem jest nazwa miasta, a warto\u015bci\u0105 DataFrame.     city_list : list         Lista nazw miast do analizy.     phenomena : list         Lista nazw zjawisk pogodowych (np. ['Rain', 'Snow', 'Hail', 'Thunder']).      Dzia\u0142anie:     ----------     - Grupuje dane dzienne do miesi\u0119cznych sum dni, w kt\u00f3rych wyst\u0105pi\u0142o dane zjawisko.     - Stosuje wyg\u0142adzanie LOWESS na szeregach czasowych, aby uwidoczni\u0107 trendy.     - Pomija Londyn na wykresach dla zjawisk \"Rain\" i \"Snow\".     - Zwraca s\u0142ownik z trendami LOWESS dla ka\u017cdego miasta i zjawiska.      Zwraca:     --------     dict         S\u0142ownik z trendami LOWESS, struktura: {zjawisko: {miasto: Series trendu}}     \"\"\"     import numpy as np     import matplotlib.pyplot as plt     import seaborn as sns     import statsmodels.api as sm      palette = sns.color_palette(\"tab20\", n_colors=len(city_list))     trends = {pheno: {} for pheno in phenomena}      for phenomenon in phenomena:         plt.figure(figsize=(12, 6))          for i, city in enumerate(city_list):             # Pomijamy Londyn tylko dla Rain i Snow             if city == 'Londyn' and phenomenon in ['Rain', 'Snow']:                 continue              df = cities[city].copy()             df['DATE'] = pd.to_datetime(df['DATE'])             df['YearMonth'] = df['DATE'].dt.to_period('M')              # Grupowanie po miesi\u0105cach i sumowanie dni z wyst\u0105pieniem zjawiska             monthly_counts = df.groupby('YearMonth')[phenomenon].sum()             monthly_counts.index = monthly_counts.index.to_timestamp()              x = np.arange(len(monthly_counts))             y = monthly_counts.values              # Pomijanie miast z niewystarczaj\u0105c\u0105 ilo\u015bci\u0105 danych             if len(x) &lt; 10:                 continue              # Wyg\u0142adzanie LOWESS             lowess_smoothed = sm.nonparametric.lowess(y, x, frac=0.2, return_sorted=False)              # Zapisywanie trendu do s\u0142ownika             trend_series = pd.Series(lowess_smoothed, index=monthly_counts.index)             trends[phenomenon][city] = trend_series              # Rysowanie wykresu trendu             plt.plot(monthly_counts.index, lowess_smoothed, label=city, color=palette[i])          plt.title(f'Trend miesi\u0119cznej liczby dni z wyst\u0119powaniem: {phenomenon} (LOWESS)')         plt.xlabel('Rok')         plt.ylabel('Liczba dni w miesi\u0105cu')         plt.legend()         plt.grid(True)         plt.tight_layout()         plt.show()      return trends  In\u00a0[11]: Copied! <pre>phenomena = ['Rain', 'Snow', 'Hail', 'Thunder']\ntrends_phenomena = plot_weather_phenomena_trends(cities, city_list, phenomena)\n</pre> phenomena = ['Rain', 'Snow', 'Hail', 'Thunder'] trends_phenomena = plot_weather_phenomena_trends(cities, city_list, phenomena) In\u00a0[12]: Copied! <pre># Utworznie struktury z trendami\nall_trends = {\n    'temperature': {\n        'TEMP': trends_temp,\n        'MAX': trends_max,\n        'MIN': trends_min\n    },\n    'phenomena': trends_phenomena\n}\n</pre> # Utworznie struktury z trendami all_trends = {     'temperature': {         'TEMP': trends_temp,         'MAX': trends_max,         'MIN': trends_min     },     'phenomena': trends_phenomena } In\u00a0[13]: Copied! <pre># Zapisanie do pliku\nwith open('../../data/all_trends.pkl', 'wb') as f:\n    pickle.dump(all_trends, f)\n</pre> # Zapisanie do pliku with open('../../data/all_trends.pkl', 'wb') as f:     pickle.dump(all_trends, f)"},{"location":"notebooks/Trend/#analiza-wynikow-dekompozycji-stl","title":"Analiza wynik\u00f3w dekompozycji STL\u00b6","text":"<p>Wykonano dekompozycj\u0119 STL dla wszystkich miast, osobno dla temperatury \u015bredniej, minimalnej i maksymalnej. Ze wzgl\u0119du na wysok\u0105 korelacj\u0119 mi\u0119dzy tymi zmiennymi, skupiono si\u0119 na og\u00f3lnych wzorcach sezonowo\u015bci oraz d\u0142ugoterminowych trendach. Por\u00f3wnanie trend\u00f3w mi\u0119dzy miastami znajduje si\u0119 na kolejnych wykresach. Poni\u017cej przedstawiono kr\u00f3tkie podsumowanie charakterystyki danych dla poszczeg\u00f3lnych miast:</p> <ul> <li>Ateny \u2013 bardzo regularna sezonowo\u015b\u0107; trend jest zmienny, ale d\u0142ugoterminowo wykazuje wzrost.</li> <li>Berlin \u2013 d\u0142ugi okres interpolacji danych (ponad 10 lat), co utrudnia interpretacj\u0119.</li> <li>Bruksela \u2013 stabilna sezonowo\u015b\u0107 i wyra\u017anie rosn\u0105cy trend w ci\u0105gu 40 lat.</li> <li>Budapeszt \u2013 sta\u0142a sezonowo\u015b\u0107, wyra\u017any wzrost temperatury w trendzie.</li> <li>Lizbona \u2013 cykle sezonowe s\u0105 sta\u0142e; trend niewielki, ale rosn\u0105cy.</li> <li>Londyn \u2013 mniej regularna sezonowo\u015b\u0107 i s\u0142abo rosn\u0105cy trend.</li> <li>Madryt \u2013 dobrze widoczna sezonowo\u015b\u0107 i rosn\u0105cy trend temperatury.</li> <li>Moskwa \u2013 zak\u0142\u00f3cenia w sezonowo\u015bci wp\u0142ywaj\u0105 na trudno\u015b\u0107 w ocenie trendu, kt\u00f3ry lokalnie maleje.</li> <li>Pary\u017c \u2013 kr\u00f3tki okres interpolowanych danych, ale widoczna sezonowo\u015b\u0107 i rosn\u0105cy trend.</li> <li>Praga \u2013 sta\u0142a sezonowo\u015b\u0107 i wyra\u017any wzrost temperatury.</li> <li>Warszawa \u2013 dobra jako\u015b\u0107 danych, stabilna sezonowo\u015b\u0107 i rosn\u0105cy trend.</li> <li>Wiede\u0144 \u2013 regularne cykle sezonowe, trend rosn\u0105cy, cho\u0107 powoli.</li> </ul>"},{"location":"notebooks/Trend/#analiza-trendu-na-wspolnym-wykresie","title":"Analiza trendu na wsp\u00f3lnym wykresie\u00b6","text":"<p>Na wykresie wsp\u00f3lnym dla wszystkich miast wyra\u017anie widoczna jest tendencja wzrostowa temperatur w wi\u0119kszo\u015bci lokalizacji. W szczeg\u00f3lno\u015bci:</p> <ul> <li>Miasta po\u0142udniowe takie jak Ateny, Madryt i Lizbona wykazuj\u0105 wyra\u017anie rosn\u0105ce trendy, przy czym wzrost jest bardziej stromy ni\u017c w przypadku miast p\u00f3\u0142nocnych.</li> <li>Miasta Europy \u015arodkowej (Praga, Warszawa, Wiede\u0144, Budapeszt) r\u00f3wnie\u017c odnotowuj\u0105 systematyczny wzrost temperatur, cho\u0107 nieco bardziej \u0142agodny.</li> <li>Miasta zachodnioeuropejskie jak Bruksela, Pary\u017c czy Londyn r\u00f3wnie\u017c prezentuj\u0105 wyra\u017any trend wzrostowy, ale z pewnymi okresami sp\u0142aszczenia, prawdopodobnie zwi\u0105zanymi z jako\u015bci\u0105 danych.</li> <li>Moskwa, jako jedno z najch\u0142odniejszych miast w zestajako jedyne wykazuje trend malej\u0105cy jednak ci\u0119zko to interpetowa\u0107 ze wzgl\u0119du na dziwne zachowanie danych w latach 2015-2020 zmienne.</li> <li>Berlin i Pary\u017c posiadaj\u0105 fragmenty danych interpolowanych, przez co interpretacja ich trend\u00f3w powinna by\u0107 ostro\u017cna, jednak mimo to linie trendu r\u00f3wnie\u017c wskazuj\u0105 na wzrost temperatur.</li> </ul> <p>Podsumowuj\u0105c, wsp\u00f3lny wykres ukazuje sp\u00f3jn\u0105 i alarmuj\u0105c\u0105 tendencj\u0119 wzrostu temperatur w wi\u0119kszo\u015bci analizowanych miast europejskich na przestrzeni ostatnich dekad. Wzrost ten jest zgodny z globalnymi obserwacjami dotycz\u0105cymi zmian klimatycznych.</p>"},{"location":"notebooks/Trend/#analiza-trendu-zjawisk-pogodowych","title":"Analiza trendu zjawisk pogodowych\u00b6","text":""},{"location":"notebooks/Trend/#opis-postepowania","title":"Opis post\u0119powania\u00b6","text":"<p>W celu analizy zmian w cz\u0119sto\u015bci wyst\u0119powania wybranych zjawisk pogodowych (<code>Rain</code>, <code>Snow</code>, <code>Hail</code>, <code>Thunder</code>) dokonano przekszta\u0142cenia dziennych danych do postaci miesi\u0119cznych sum dni, w kt\u00f3rych dane zjawisko wyst\u0105pi\u0142o. Na ich podstawie zastosowano wyg\u0142adzanie LOWESS (Locally Weighted Scatterplot Smoothing), kt\u00f3re pozwala uchwyci\u0107 og\u00f3lny trend czasowy z uwzgl\u0119dnieniem lokalnych waha\u0144.</p> <p>Wykresy zosta\u0142y wygenerowane osobno dla ka\u017cdego zjawiska i obejmuj\u0105 wszystkie analizowane miasta. Londyn zosta\u0142 pomini\u0119ty na wykresach dla zjawisk \u201eRain\u201d i \u201eSnow\u201d, poniewa\u017c jego warto\u015bci znacz\u0105co odbiega\u0142y od pozosta\u0142ych i zniekszta\u0142ca\u0142y skal\u0119 wykresu.</p>"},{"location":"notebooks/Trend/#wyniki-analizy-trendow","title":"Wyniki analizy trend\u00f3w\u00b6","text":""},{"location":"notebooks/Trend/#deszcz-rain","title":"\ud83c\udf27\ufe0f Deszcz (<code>Rain</code>)\u00b6","text":"<p>Wi\u0119kszo\u015b\u0107 miast wykazuje stabilny trend liczby dni deszczowych w miesi\u0105cu \u2014 nie zaobserwowano wyra\u017anych zmian w czasie. Wyj\u0105tki:</p> <ul> <li>Lizbona i Budapeszt wykazuj\u0105 zauwa\u017calny spadkowy trend, co mo\u017ce \u015bwiadczy\u0107 o zmniejszaj\u0105cej si\u0119 liczbie dni deszczowych w tych miastach.</li> </ul>"},{"location":"notebooks/Trend/#snieg-snow","title":"\u2744\ufe0f \u015anieg (<code>Snow</code>)\u00b6","text":"<p>Dla wi\u0119kszo\u015bci miast trend jest p\u0142aski, co oznacza brak istotnych zmian w liczbie dni ze \u015bniegiem. Wyj\u0105tek:</p> <ul> <li>Moskwa wykazuje wyra\u017any trend spadkowy, co mo\u017ce wskazywa\u0107 na coraz rzadsze wyst\u0119powanie dni \u015bnie\u017cnych.</li> </ul>"},{"location":"notebooks/Trend/#grad-hail","title":"\ud83c\udf28\ufe0f Grad (<code>Hail</code>)\u00b6","text":"<p>W przypadku gradu trudno m\u00f3wi\u0107 o wyra\u017anych trendach \u2014 dane dla wielu miast zawieraj\u0105 liczne zera lub bardzo niskie warto\u015bci, przez co wi\u0119kszo\u015b\u0107 trend\u00f3w jest bliska zeru lub ma\u0142o wiarygodna.</p>"},{"location":"notebooks/Trend/#burze-thunder","title":"\u26c8\ufe0f Burze (<code>Thunder</code>)\u00b6","text":"<ul> <li>W przewa\u017caj\u0105cej liczbie miast widoczny jest spadkowy trend liczby dni burzowych.</li> <li>Ateny i Wiede\u0144 s\u0105 wyj\u0105tkami, gdzie trend ten jest stabilny lub delikatnie rosn\u0105cy.</li> </ul>"},{"location":"notebooks/Trend/#podsumowanie","title":"Podsumowanie\u00b6","text":"<p>Z analizy wynika, \u017ce:</p> <ul> <li>Trendy dla deszczu i \u015bniegu s\u0105 w wi\u0119kszo\u015bci stabilne, z lokalnymi wyj\u0105tkami.</li> <li>Grad wyst\u0119puje zbyt rzadko, aby wyci\u0105ga\u0107 jednoznaczne wnioski.</li> <li>Burze wykazuj\u0105 najbardziej sp\u00f3jny trend spadkowy w wielu miastach, co mo\u017ce by\u0107 efektem zmieniaj\u0105cej si\u0119 charakterystyki klimatycznej.</li> </ul>"},{"location":"notebooks/Variability/","title":"\ud83d\udd04 Analiza zmienno\u015bci","text":"In\u00a0[1]: Copied! <pre>import seaborn as sns\nimport matplotlib.pyplot as plt\nfrom scipy.stats import shapiro, ttest_ind, mannwhitneyu, levene\nimport pickle\nimport pandas as pd\nimport numpy as np\n</pre> import seaborn as sns import matplotlib.pyplot as plt from scipy.stats import shapiro, ttest_ind, mannwhitneyu, levene import pickle import pandas as pd import numpy as np In\u00a0[2]: Copied! <pre>with open('../../data/climate_data.pkl', 'rb') as f:\n    data = pickle.load(f)\n\ncities = data['cities']\nstations_info = data['stations_info']\n</pre> with open('../../data/climate_data.pkl', 'rb') as f:     data = pickle.load(f)  cities = data['cities'] stations_info = data['stations_info'] In\u00a0[3]: Copied! <pre>city_list = list(cities.keys())\n</pre> city_list = list(cities.keys()) In\u00a0[4]: Copied! <pre>def split_periods(df, col='TEMP', split_year=2000):\n    \"\"\"\n    Dzieli dane szereg\u00f3w czasowych na dwa okresy: przed i po okre\u015blonym roku.\n\n    Parametry:\n    ----------\n    df : pd.DataFrame\n        DataFrame z danymi pogodowymi, zawieraj\u0105cy kolumn\u0119 'DATE' oraz kolumn\u0119 z warto\u015bci\u0105 do podzia\u0142u.\n    col : str, domy\u015blnie 'TEMP'\n        Nazwa kolumny, kt\u00f3rej warto\u015bci maj\u0105 zosta\u0107 rozdzielone na dwa okresy.\n    split_year : int, domy\u015blnie 2000\n        Rok graniczny \u2014 dane zostan\u0105 podzielone na okresy przed i od tego roku (inclusive).\n\n    Zwraca:\n    --------\n    tuple of pd.Series\n        Dwie serie danych: (dane sprzed roku `split_year`, dane z roku `split_year` i p\u00f3\u017aniej),\n        z pomini\u0119ciem warto\u015bci brakuj\u0105cych (NaN).\n    \"\"\"\n    # Konwersja kolumny 'DATE' na typ datetime (na wypadek gdyby nie by\u0142a)\n    df['DATE'] = pd.to_datetime(df['DATE'])\n\n    # Wyodr\u0119bnienie roku z daty\n    df['Year'] = df['DATE'].dt.year\n\n    # Filtrowanie danych przed rokiem split_year i usuwanie brak\u00f3w\n    before = df[df['Year'] &lt; split_year][col].dropna()\n\n    # Filtrowanie danych od roku split_year (inclusive) i usuwanie brak\u00f3w\n    after = df[df['Year'] &gt;= split_year][col].dropna()\n\n    return before, after\n</pre> def split_periods(df, col='TEMP', split_year=2000):     \"\"\"     Dzieli dane szereg\u00f3w czasowych na dwa okresy: przed i po okre\u015blonym roku.      Parametry:     ----------     df : pd.DataFrame         DataFrame z danymi pogodowymi, zawieraj\u0105cy kolumn\u0119 'DATE' oraz kolumn\u0119 z warto\u015bci\u0105 do podzia\u0142u.     col : str, domy\u015blnie 'TEMP'         Nazwa kolumny, kt\u00f3rej warto\u015bci maj\u0105 zosta\u0107 rozdzielone na dwa okresy.     split_year : int, domy\u015blnie 2000         Rok graniczny \u2014 dane zostan\u0105 podzielone na okresy przed i od tego roku (inclusive).      Zwraca:     --------     tuple of pd.Series         Dwie serie danych: (dane sprzed roku `split_year`, dane z roku `split_year` i p\u00f3\u017aniej),         z pomini\u0119ciem warto\u015bci brakuj\u0105cych (NaN).     \"\"\"     # Konwersja kolumny 'DATE' na typ datetime (na wypadek gdyby nie by\u0142a)     df['DATE'] = pd.to_datetime(df['DATE'])      # Wyodr\u0119bnienie roku z daty     df['Year'] = df['DATE'].dt.year      # Filtrowanie danych przed rokiem split_year i usuwanie brak\u00f3w     before = df[df['Year'] &lt; split_year][col].dropna()      # Filtrowanie danych od roku split_year (inclusive) i usuwanie brak\u00f3w     after = df[df['Year'] &gt;= split_year][col].dropna()      return before, after  In\u00a0[5]: Copied! <pre>def compare_distributions(cities, city_list, col='TEMP', split_year=2000):\n    \"\"\"\n    Por\u00f3wnuje rozk\u0142ad wskazanej zmiennej pogodowej przed i po danym roku\n    dla ka\u017cdego miasta na wykresach KDE (g\u0119sto\u015bci j\u0105drowej).\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z danymi pogodowymi \u2014 klucze to nazwy miast, a warto\u015bci to DataFrame'y.\n    city_list : list\n        Lista nazw miast do por\u00f3wnania.\n    col : str, domy\u015blnie 'TEMP'\n        Nazwa kolumny, kt\u00f3rej rozk\u0142ad ma by\u0107 analizowany (np. TEMP, MAX, MIN).\n    split_year : int, domy\u015blnie 2000\n        Rok podzia\u0142u danych na dwa okresy: przed i po tej dacie.\n\n    Dzia\u0142anie:\n    ----------\n    - Dzieli dane dla ka\u017cdego miasta na dwa okresy przy pomocy `split_periods`.\n    - Tworzy wykres KDE (g\u0119sto\u015bci) dla obu okres\u00f3w.\n    - Wy\u015bwietla por\u00f3wnanie rozk\u0142ad\u00f3w dla ka\u017cdego miasta osobno.\n    \"\"\"\n    for city in city_list:\n        df = cities[city].copy()\n\n        # Podzia\u0142 na okresy przed i po podanym roku\n        before, after = split_periods(df, col, split_year)\n\n        # Tworzenie wykresu KDE\n        plt.figure(figsize=(10, 6))\n        sns.kdeplot(before, label=f'Przed {split_year}', fill=True)\n        sns.kdeplot(after, label=f'Po {split_year}', fill=True)\n\n        # Opis osi i tytu\u0142\n        plt.title(f'Rozk\u0142ad {col} w mie\u015bcie {city}')\n        plt.xlabel(col)\n        plt.ylabel('G\u0119sto\u015b\u0107')\n        plt.legend()\n        plt.grid(True)\n        plt.tight_layout()\n        plt.show()\n</pre> def compare_distributions(cities, city_list, col='TEMP', split_year=2000):     \"\"\"     Por\u00f3wnuje rozk\u0142ad wskazanej zmiennej pogodowej przed i po danym roku     dla ka\u017cdego miasta na wykresach KDE (g\u0119sto\u015bci j\u0105drowej).      Parametry:     ----------     cities : dict         S\u0142ownik z danymi pogodowymi \u2014 klucze to nazwy miast, a warto\u015bci to DataFrame'y.     city_list : list         Lista nazw miast do por\u00f3wnania.     col : str, domy\u015blnie 'TEMP'         Nazwa kolumny, kt\u00f3rej rozk\u0142ad ma by\u0107 analizowany (np. TEMP, MAX, MIN).     split_year : int, domy\u015blnie 2000         Rok podzia\u0142u danych na dwa okresy: przed i po tej dacie.      Dzia\u0142anie:     ----------     - Dzieli dane dla ka\u017cdego miasta na dwa okresy przy pomocy `split_periods`.     - Tworzy wykres KDE (g\u0119sto\u015bci) dla obu okres\u00f3w.     - Wy\u015bwietla por\u00f3wnanie rozk\u0142ad\u00f3w dla ka\u017cdego miasta osobno.     \"\"\"     for city in city_list:         df = cities[city].copy()          # Podzia\u0142 na okresy przed i po podanym roku         before, after = split_periods(df, col, split_year)          # Tworzenie wykresu KDE         plt.figure(figsize=(10, 6))         sns.kdeplot(before, label=f'Przed {split_year}', fill=True)         sns.kdeplot(after, label=f'Po {split_year}', fill=True)          # Opis osi i tytu\u0142         plt.title(f'Rozk\u0142ad {col} w mie\u015bcie {city}')         plt.xlabel(col)         plt.ylabel('G\u0119sto\u015b\u0107')         plt.legend()         plt.grid(True)         plt.tight_layout()         plt.show()  In\u00a0[6]: Copied! <pre>def test_normality(series):\n    \"\"\"\n    Testuje normalno\u015b\u0107 rozk\u0142adu danych w podanej serii przy u\u017cyciu testu Shapiro-Wilka.\n\n    Parametry:\n    ----------\n    series : pd.Series\n        Szereg danych liczbowych do przetestowania pod k\u0105tem normalno\u015bci.\n\n    Dzia\u0142anie:\n    ----------\n    - Usuwa warto\u015bci brakuj\u0105ce (NaN).\n    - Je\u015bli pr\u00f3ba zawiera wi\u0119cej ni\u017c 5000 obserwacji, losowana jest podpr\u00f3ba 5000 element\u00f3w.\n    - Wykonywany jest test Shapiro-Wilka na tej pr\u00f3bce.\n\n    Zwraca:\n    --------\n    bool\n        True \u2014 je\u015bli p &gt; 0.05, czyli brak podstaw do odrzucenia hipotezy o normalno\u015bci rozk\u0142adu,\n        False \u2014 je\u015bli p \u2264 0.05, co sugeruje, \u017ce dane nie s\u0105 normalnie roz\u0142o\u017cone.\n    \"\"\"\n    sample = series.dropna()\n    if len(sample) &gt; 5000:\n        sample = sample.sample(5000, random_state=42)\n    stat, p = shapiro(sample)\n    return p &gt; 0.05  # True je\u015bli rozk\u0142ad normalny\n</pre> def test_normality(series):     \"\"\"     Testuje normalno\u015b\u0107 rozk\u0142adu danych w podanej serii przy u\u017cyciu testu Shapiro-Wilka.      Parametry:     ----------     series : pd.Series         Szereg danych liczbowych do przetestowania pod k\u0105tem normalno\u015bci.      Dzia\u0142anie:     ----------     - Usuwa warto\u015bci brakuj\u0105ce (NaN).     - Je\u015bli pr\u00f3ba zawiera wi\u0119cej ni\u017c 5000 obserwacji, losowana jest podpr\u00f3ba 5000 element\u00f3w.     - Wykonywany jest test Shapiro-Wilka na tej pr\u00f3bce.      Zwraca:     --------     bool         True \u2014 je\u015bli p &gt; 0.05, czyli brak podstaw do odrzucenia hipotezy o normalno\u015bci rozk\u0142adu,         False \u2014 je\u015bli p \u2264 0.05, co sugeruje, \u017ce dane nie s\u0105 normalnie roz\u0142o\u017cone.     \"\"\"     sample = series.dropna()     if len(sample) &gt; 5000:         sample = sample.sample(5000, random_state=42)     stat, p = shapiro(sample)     return p &gt; 0.05  # True je\u015bli rozk\u0142ad normalny  In\u00a0[7]: Copied! <pre>def compare_means(before, after):\n    \"\"\"\n    Por\u00f3wnuje \u015brednie dw\u00f3ch pr\u00f3bek danych, wybieraj\u0105c odpowiedni test statystyczny \n    w zale\u017cno\u015bci od normalno\u015bci rozk\u0142adu.\n\n    Parametry:\n    ----------\n    before : pd.Series lub array-like\n        Dane z okresu przed punktem podzia\u0142u (np. przed rokiem 2000).\n    after : pd.Series lub array-like\n        Dane z okresu po punkcie podzia\u0142u (np. po roku 2000).\n\n    Dzia\u0142anie:\n    ----------\n    - Sprawdza normalno\u015b\u0107 rozk\u0142adu obu pr\u00f3bek przy pomocy testu Shapiro-Wilka.\n    - Je\u015bli obie pr\u00f3bki s\u0105 normalne, stosuje test t-Studenta dla pr\u00f3b niezale\u017cnych.\n    - W przeciwnym razie stosuje test nieparametryczny Mann-Whitneya U.\n    \n    Zwraca:\n    --------\n    tuple\n        - method (str): nazwa u\u017cytego testu (\"T-test\" lub \"Mann-Whitney U\")\n        - p (float): warto\u015b\u0107 p testu, s\u0142u\u017c\u0105ca do oceny istotno\u015bci statystycznej r\u00f3\u017cnicy\n    \"\"\"\n    # Sprawdzenie normalno\u015bci rozk\u0142adu obu pr\u00f3bek\n    if test_normality(before) and test_normality(after):\n        # Test t-Studenta, je\u015bli rozk\u0142ad normalny\n        stat, p = ttest_ind(before, after)\n        method = \"T-test\"\n    else:\n        # Test nieparametryczny Mann-Whitney U, je\u015bli brak normalno\u015bci\n        stat, p = mannwhitneyu(before, after)\n        method = \"Mann-Whitney U\"\n    \n    return method, p\n</pre> def compare_means(before, after):     \"\"\"     Por\u00f3wnuje \u015brednie dw\u00f3ch pr\u00f3bek danych, wybieraj\u0105c odpowiedni test statystyczny      w zale\u017cno\u015bci od normalno\u015bci rozk\u0142adu.      Parametry:     ----------     before : pd.Series lub array-like         Dane z okresu przed punktem podzia\u0142u (np. przed rokiem 2000).     after : pd.Series lub array-like         Dane z okresu po punkcie podzia\u0142u (np. po roku 2000).      Dzia\u0142anie:     ----------     - Sprawdza normalno\u015b\u0107 rozk\u0142adu obu pr\u00f3bek przy pomocy testu Shapiro-Wilka.     - Je\u015bli obie pr\u00f3bki s\u0105 normalne, stosuje test t-Studenta dla pr\u00f3b niezale\u017cnych.     - W przeciwnym razie stosuje test nieparametryczny Mann-Whitneya U.          Zwraca:     --------     tuple         - method (str): nazwa u\u017cytego testu (\"T-test\" lub \"Mann-Whitney U\")         - p (float): warto\u015b\u0107 p testu, s\u0142u\u017c\u0105ca do oceny istotno\u015bci statystycznej r\u00f3\u017cnicy     \"\"\"     # Sprawdzenie normalno\u015bci rozk\u0142adu obu pr\u00f3bek     if test_normality(before) and test_normality(after):         # Test t-Studenta, je\u015bli rozk\u0142ad normalny         stat, p = ttest_ind(before, after)         method = \"T-test\"     else:         # Test nieparametryczny Mann-Whitney U, je\u015bli brak normalno\u015bci         stat, p = mannwhitneyu(before, after)         method = \"Mann-Whitney U\"          return method, p  In\u00a0[8]: Copied! <pre>def statistical_analysis(cities, city_list, col='TEMP', split_year=2000):\n    \"\"\"\n    Przeprowadza analiz\u0119 statystyczn\u0105 por\u00f3wnuj\u0105c\u0105 \u015brednie warto\u015bci wybranej zmiennej \n    meteorologicznej przed i po okre\u015blonym roku podzia\u0142u dla wybranych miast.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z danymi meteorologicznymi, gdzie kluczami s\u0105 nazwy miast, a warto\u015bciami DataFrame.\n    city_list : list\n        Lista nazw miast do analizy.\n    col : str, opcjonalnie\n        Nazwa kolumny z danymi do analizy (domy\u015blnie 'TEMP').\n    split_year : int, opcjonalnie\n        Rok, kt\u00f3ry dzieli dane na dwie pr\u00f3bki do por\u00f3wnania (domy\u015blnie 2000).\n\n    Dzia\u0142anie:\n    ----------\n    - Dzieli dane na dwie pr\u00f3bki: przed i po roku podzia\u0142u.\n    - Dla ka\u017cdej pr\u00f3bki sprawdza, czy jest wystarczaj\u0105co du\u017co danych (min. 30).\n    - Por\u00f3wnuje \u015brednie pr\u00f3bek przy u\u017cyciu odpowiedniego testu statystycznego \n      (test t-Studenta lub test Mann-Whitneya).\n    - Zapisuje wyniki analizy dla ka\u017cdego miasta: test, warto\u015b\u0107 p oraz \u015brednie z obu okres\u00f3w.\n\n    Zwraca:\n    --------\n    pd.DataFrame\n        Tabela wynik\u00f3w analizy z kolumnami: 'Miasto', 'Test', 'P-warto\u015b\u0107', '\u015arednia przed', '\u015arednia po'.\n    \"\"\"\n    results = []\n\n    for city in city_list:\n        df = cities[city].copy()\n        before, after = split_periods(df, col, split_year)\n\n        # Analiza tylko, je\u015bli obie pr\u00f3bki maj\u0105 co najmniej 30 obserwacji\n        if len(before) &gt; 30 and len(after) &gt; 30:\n            method, p = compare_means(before, after)\n            results.append({\n                'Miasto': city,\n                'Test': method,\n                'P-warto\u015b\u0107': round(p, 4),\n                '\u015arednia przed': round(before.mean(), 2),\n                '\u015arednia po': round(after.mean(), 2)\n            })\n\n    return pd.DataFrame(results)\n</pre> def statistical_analysis(cities, city_list, col='TEMP', split_year=2000):     \"\"\"     Przeprowadza analiz\u0119 statystyczn\u0105 por\u00f3wnuj\u0105c\u0105 \u015brednie warto\u015bci wybranej zmiennej      meteorologicznej przed i po okre\u015blonym roku podzia\u0142u dla wybranych miast.      Parametry:     ----------     cities : dict         S\u0142ownik z danymi meteorologicznymi, gdzie kluczami s\u0105 nazwy miast, a warto\u015bciami DataFrame.     city_list : list         Lista nazw miast do analizy.     col : str, opcjonalnie         Nazwa kolumny z danymi do analizy (domy\u015blnie 'TEMP').     split_year : int, opcjonalnie         Rok, kt\u00f3ry dzieli dane na dwie pr\u00f3bki do por\u00f3wnania (domy\u015blnie 2000).      Dzia\u0142anie:     ----------     - Dzieli dane na dwie pr\u00f3bki: przed i po roku podzia\u0142u.     - Dla ka\u017cdej pr\u00f3bki sprawdza, czy jest wystarczaj\u0105co du\u017co danych (min. 30).     - Por\u00f3wnuje \u015brednie pr\u00f3bek przy u\u017cyciu odpowiedniego testu statystycznego        (test t-Studenta lub test Mann-Whitneya).     - Zapisuje wyniki analizy dla ka\u017cdego miasta: test, warto\u015b\u0107 p oraz \u015brednie z obu okres\u00f3w.      Zwraca:     --------     pd.DataFrame         Tabela wynik\u00f3w analizy z kolumnami: 'Miasto', 'Test', 'P-warto\u015b\u0107', '\u015arednia przed', '\u015arednia po'.     \"\"\"     results = []      for city in city_list:         df = cities[city].copy()         before, after = split_periods(df, col, split_year)          # Analiza tylko, je\u015bli obie pr\u00f3bki maj\u0105 co najmniej 30 obserwacji         if len(before) &gt; 30 and len(after) &gt; 30:             method, p = compare_means(before, after)             results.append({                 'Miasto': city,                 'Test': method,                 'P-warto\u015b\u0107': round(p, 4),                 '\u015arednia przed': round(before.mean(), 2),                 '\u015arednia po': round(after.mean(), 2)             })      return pd.DataFrame(results)  In\u00a0[9]: Copied! <pre>compare_distributions(cities, city_list)\n</pre> compare_distributions(cities, city_list) In\u00a0[10]: Copied! <pre>compare_distributions(cities, city_list, col=\"MAX\")\n</pre> compare_distributions(cities, city_list, col=\"MAX\") In\u00a0[11]: Copied! <pre>compare_distributions(cities, city_list, col=\"MIN\")\n</pre> compare_distributions(cities, city_list, col=\"MIN\") In\u00a0[12]: Copied! <pre>results_temp = statistical_analysis(cities, city_list)\n</pre> results_temp = statistical_analysis(cities, city_list) In\u00a0[13]: Copied! <pre>results_temp\n</pre> results_temp Out[13]: Miasto Test P-warto\u015b\u0107 \u015arednia przed \u015arednia po 0 Berlin Mann-Whitney U 0.0000 9.66 11.20 1 Bruksela Mann-Whitney U 0.0000 10.25 11.09 2 Budapeszt Mann-Whitney U 0.0000 10.78 11.91 3 Lisbona Mann-Whitney U 0.0001 16.40 16.76 4 Londyn Mann-Whitney U 0.0049 10.13 10.40 5 Madryd Mann-Whitney U 0.0001 14.49 15.14 6 Moskwa Mann-Whitney U 0.0220 5.57 5.23 7 Pary\u017c Mann-Whitney U 0.0011 12.26 12.85 8 Praga Mann-Whitney U 0.0000 8.06 9.32 9 Warszawa Mann-Whitney U 0.0000 8.18 9.46 10 Wiede\u0144 Mann-Whitney U 0.0000 10.45 11.55 In\u00a0[14]: Copied! <pre>results_min = statistical_analysis(cities, city_list, col=\"MIN\")\n</pre> results_min = statistical_analysis(cities, city_list, col=\"MIN\") In\u00a0[15]: Copied! <pre>results_min\n</pre> results_min Out[15]: Miasto Test P-warto\u015b\u0107 \u015arednia przed \u015arednia po 0 Berlin Mann-Whitney U 0.0000 5.71 7.19 1 Bruksela Mann-Whitney U 0.0000 6.43 7.00 2 Budapeszt Mann-Whitney U 0.0000 6.47 7.30 3 Lisbona Mann-Whitney U 0.0053 13.04 13.26 4 Londyn Mann-Whitney U 0.9129 6.85 6.83 5 Madryd Mann-Whitney U 0.0000 7.88 8.51 6 Moskwa Mann-Whitney U 0.0575 1.65 1.47 7 Pary\u017c Mann-Whitney U 0.0002 8.74 9.31 8 Praga Mann-Whitney U 0.0000 3.56 4.62 9 Warszawa Mann-Whitney U 0.0000 3.69 4.78 10 Wiede\u0144 Mann-Whitney U 0.0000 6.69 7.62 In\u00a0[16]: Copied! <pre>results_max = statistical_analysis(cities, city_list, col=\"MAX\")\n</pre> results_max = statistical_analysis(cities, city_list, col=\"MAX\") In\u00a0[17]: Copied! <pre>results_max\n</pre> results_max Out[17]: Miasto Test P-warto\u015b\u0107 \u015arednia przed \u015arednia po 0 Berlin Mann-Whitney U 0.0000 13.51 15.10 1 Bruksela Mann-Whitney U 0.0000 14.16 15.07 2 Budapeszt Mann-Whitney U 0.0000 15.18 16.61 3 Lisbona Mann-Whitney U 0.0045 21.06 21.39 4 Londyn Mann-Whitney U 0.0021 13.69 14.03 5 Madryd Mann-Whitney U 0.0014 21.24 21.78 6 Moskwa Mann-Whitney U 0.0008 9.24 8.60 7 Pary\u017c Mann-Whitney U 0.0145 16.44 16.98 8 Praga Mann-Whitney U 0.0000 12.66 13.75 9 Warszawa Mann-Whitney U 0.0000 12.36 13.91 10 Wiede\u0144 Mann-Whitney U 0.0000 14.52 15.97 In\u00a0[18]: Copied! <pre>def analyze_phenomena_cities(cities, city_list, phenomena, split_year):\n    \"\"\"\n    Analizuje zmiany w liczbie dni wyst\u0119powania okre\u015blonych zjawisk pogodowych\n    w wybranych miastach, por\u00f3wnuj\u0105c okresy przed i po zadanym roku podzia\u0142u.\n\n    Parametry:\n    ----------\n    cities : dict\n        S\u0142ownik z danymi pogodowymi, gdzie kluczami s\u0105 nazwy miast,\n        a warto\u015bciami DataFrame z danymi.\n    city_list : list\n        Lista miast do analizy.\n    phenomena : list\n        Lista nazw zjawisk pogodowych do analizy (np. ['Rain', 'Snow', 'Hail', 'Thunder']).\n    split_year : int\n        Rok, wed\u0142ug kt\u00f3rego dzielimy dane na okres \"przed\" i \"po\".\n\n    Dzia\u0142anie:\n    ----------\n    - Dla ka\u017cdego miasta i zjawiska tworzy wykresy g\u0119sto\u015bci rozk\u0142adu (KDE)\n      liczby dni zjawiska przed i po roku podzia\u0142u.\n    - Oblicza testy statystyczne:\n      * test Shapiro-Wilka na normalno\u015b\u0107 rozk\u0142adu w obu okresach,\n      * test Levene na r\u00f3wno\u015b\u0107 wariancji,\n      * test Mann-Whitneya U na r\u00f3\u017cnic\u0119 rozk\u0142ad\u00f3w mi\u0119dzy okresami.\n    - Oblicza \u015brednie, odchylenia standardowe oraz wsp\u00f3\u0142czynniki zmienno\u015bci\n      dla obu okres\u00f3w.\n    - Wyniki statystyczne zwraca w postaci s\u0142ownika.\n\n    Zwraca:\n    --------\n    dict\n        S\u0142ownik wynik\u00f3w dla ka\u017cdego miasta i zjawiska,\n        zawieraj\u0105cy warto\u015bci p test\u00f3w, \u015brednie i miary zmienno\u015bci.\n    \"\"\"\n    import numpy as np\n    import matplotlib.pyplot as plt\n    import seaborn as sns\n    from scipy.stats import shapiro, levene, mannwhitneyu\n\n    results = {}\n\n    for city in city_list:\n        df = cities[city].copy()\n        if 'Year' not in df.columns:\n            df['Year'] = pd.to_datetime(df['DATE']).dt.year\n        \n        city_results = {}\n\n        plt.figure(figsize=(16, 4*len(phenomena)))\n        plt.suptitle(f'Analiza zjawisk w mie\u015bcie: {city}', fontsize=16)\n\n        for i, pheno in enumerate(phenomena, 1):\n            data = df[[pheno, 'Year']].dropna()\n\n            before = data[data['Year'] &lt; split_year][pheno]\n            after = data[data['Year'] &gt;= split_year][pheno]\n\n            plt.subplot(len(phenomena), 1, i)\n\n            # Rysowanie KDE tylko je\u015bli wariancja jest dodatnia (aby unikn\u0105\u0107 b\u0142\u0119d\u00f3w)\n            if before.var() &gt; 0:\n                sns.kdeplot(before, label=f'Przed {split_year}', fill=True)\n            if after.var() &gt; 0:\n                sns.kdeplot(after, label=f'Po {split_year}', fill=True)\n\n            plt.title(f'{pheno} w {city}')\n            plt.xlabel('Liczba dni zjawiska')\n            plt.ylabel('G\u0119sto\u015b\u0107')\n            \n            # Wy\u015bwietlenie legendy tylko je\u015bli jest co pokaza\u0107\n            handles, labels = plt.gca().get_legend_handles_labels()\n            if handles:\n                plt.legend()\n\n            # Bezpieczny test Shapiro-Wilka, pomijaj\u0105cy pr\u00f3bki za ma\u0142e, zerow\u0105 wariancj\u0119 lub z b\u0142\u0119dami\n            def safe_shapiro(series):\n                if len(series) &lt; 3 or len(series) &gt; 5000 or series.var() == 0:\n                    return np.nan\n                try:\n                    return shapiro(series).pvalue\n                except:\n                    return np.nan\n\n            p_b = safe_shapiro(before)\n            p_a = safe_shapiro(after)\n\n            # Test r\u00f3wno\u015bci wariancji Levene, je\u015bli dane s\u0105 wystarczaj\u0105ce\n            if len(before) &gt;= 2 and len(after) &gt;= 2:\n                stat_lev, p_lev = levene(before, after)\n            else:\n                p_lev = np.nan\n\n            # Test r\u00f3\u017cnicy rozk\u0142ad\u00f3w Mann-Whitney U, je\u015bli dane s\u0105 wystarczaj\u0105ce\n            if len(before) &gt;= 1 and len(after) &gt;= 1:\n                stat_mw, p_mw = mannwhitneyu(before, after, alternative='two-sided')\n            else:\n                p_mw = np.nan\n\n            std_before = np.std(before, ddof=1) if len(before) &gt; 1 else np.nan\n            std_after = np.std(after, ddof=1) if len(after) &gt; 1 else np.nan\n            mean_before = np.mean(before) if len(before) &gt; 0 else np.nan\n            mean_after = np.mean(after) if len(after) &gt; 0 else np.nan\n            cv_before = std_before / mean_before if mean_before not in [0, np.nan] else np.nan\n            cv_after = std_after / mean_after if mean_after not in [0, np.nan] else np.nan\n\n            city_results[pheno] = {\n                'Shapiro_p_before': p_b,\n                'Shapiro_p_after': p_a,\n                'Levene_p': p_lev,\n                'MannWhitney_p': p_mw,\n                'Std_before': std_before,\n                'Std_after': std_after,\n                'CV_before': cv_before,\n                'CV_after': cv_after,\n                'Mean_before': mean_before,\n                'Mean_after': mean_after,\n            }\n\n        plt.tight_layout(rect=[0, 0, 1, 0.96])\n        plt.show()\n\n        results[city] = city_results\n\n    return results\n</pre> def analyze_phenomena_cities(cities, city_list, phenomena, split_year):     \"\"\"     Analizuje zmiany w liczbie dni wyst\u0119powania okre\u015blonych zjawisk pogodowych     w wybranych miastach, por\u00f3wnuj\u0105c okresy przed i po zadanym roku podzia\u0142u.      Parametry:     ----------     cities : dict         S\u0142ownik z danymi pogodowymi, gdzie kluczami s\u0105 nazwy miast,         a warto\u015bciami DataFrame z danymi.     city_list : list         Lista miast do analizy.     phenomena : list         Lista nazw zjawisk pogodowych do analizy (np. ['Rain', 'Snow', 'Hail', 'Thunder']).     split_year : int         Rok, wed\u0142ug kt\u00f3rego dzielimy dane na okres \"przed\" i \"po\".      Dzia\u0142anie:     ----------     - Dla ka\u017cdego miasta i zjawiska tworzy wykresy g\u0119sto\u015bci rozk\u0142adu (KDE)       liczby dni zjawiska przed i po roku podzia\u0142u.     - Oblicza testy statystyczne:       * test Shapiro-Wilka na normalno\u015b\u0107 rozk\u0142adu w obu okresach,       * test Levene na r\u00f3wno\u015b\u0107 wariancji,       * test Mann-Whitneya U na r\u00f3\u017cnic\u0119 rozk\u0142ad\u00f3w mi\u0119dzy okresami.     - Oblicza \u015brednie, odchylenia standardowe oraz wsp\u00f3\u0142czynniki zmienno\u015bci       dla obu okres\u00f3w.     - Wyniki statystyczne zwraca w postaci s\u0142ownika.      Zwraca:     --------     dict         S\u0142ownik wynik\u00f3w dla ka\u017cdego miasta i zjawiska,         zawieraj\u0105cy warto\u015bci p test\u00f3w, \u015brednie i miary zmienno\u015bci.     \"\"\"     import numpy as np     import matplotlib.pyplot as plt     import seaborn as sns     from scipy.stats import shapiro, levene, mannwhitneyu      results = {}      for city in city_list:         df = cities[city].copy()         if 'Year' not in df.columns:             df['Year'] = pd.to_datetime(df['DATE']).dt.year                  city_results = {}          plt.figure(figsize=(16, 4*len(phenomena)))         plt.suptitle(f'Analiza zjawisk w mie\u015bcie: {city}', fontsize=16)          for i, pheno in enumerate(phenomena, 1):             data = df[[pheno, 'Year']].dropna()              before = data[data['Year'] &lt; split_year][pheno]             after = data[data['Year'] &gt;= split_year][pheno]              plt.subplot(len(phenomena), 1, i)              # Rysowanie KDE tylko je\u015bli wariancja jest dodatnia (aby unikn\u0105\u0107 b\u0142\u0119d\u00f3w)             if before.var() &gt; 0:                 sns.kdeplot(before, label=f'Przed {split_year}', fill=True)             if after.var() &gt; 0:                 sns.kdeplot(after, label=f'Po {split_year}', fill=True)              plt.title(f'{pheno} w {city}')             plt.xlabel('Liczba dni zjawiska')             plt.ylabel('G\u0119sto\u015b\u0107')                          # Wy\u015bwietlenie legendy tylko je\u015bli jest co pokaza\u0107             handles, labels = plt.gca().get_legend_handles_labels()             if handles:                 plt.legend()              # Bezpieczny test Shapiro-Wilka, pomijaj\u0105cy pr\u00f3bki za ma\u0142e, zerow\u0105 wariancj\u0119 lub z b\u0142\u0119dami             def safe_shapiro(series):                 if len(series) &lt; 3 or len(series) &gt; 5000 or series.var() == 0:                     return np.nan                 try:                     return shapiro(series).pvalue                 except:                     return np.nan              p_b = safe_shapiro(before)             p_a = safe_shapiro(after)              # Test r\u00f3wno\u015bci wariancji Levene, je\u015bli dane s\u0105 wystarczaj\u0105ce             if len(before) &gt;= 2 and len(after) &gt;= 2:                 stat_lev, p_lev = levene(before, after)             else:                 p_lev = np.nan              # Test r\u00f3\u017cnicy rozk\u0142ad\u00f3w Mann-Whitney U, je\u015bli dane s\u0105 wystarczaj\u0105ce             if len(before) &gt;= 1 and len(after) &gt;= 1:                 stat_mw, p_mw = mannwhitneyu(before, after, alternative='two-sided')             else:                 p_mw = np.nan              std_before = np.std(before, ddof=1) if len(before) &gt; 1 else np.nan             std_after = np.std(after, ddof=1) if len(after) &gt; 1 else np.nan             mean_before = np.mean(before) if len(before) &gt; 0 else np.nan             mean_after = np.mean(after) if len(after) &gt; 0 else np.nan             cv_before = std_before / mean_before if mean_before not in [0, np.nan] else np.nan             cv_after = std_after / mean_after if mean_after not in [0, np.nan] else np.nan              city_results[pheno] = {                 'Shapiro_p_before': p_b,                 'Shapiro_p_after': p_a,                 'Levene_p': p_lev,                 'MannWhitney_p': p_mw,                 'Std_before': std_before,                 'Std_after': std_after,                 'CV_before': cv_before,                 'CV_after': cv_after,                 'Mean_before': mean_before,                 'Mean_after': mean_after,             }          plt.tight_layout(rect=[0, 0, 1, 0.96])         plt.show()          results[city] = city_results      return results  In\u00a0[19]: Copied! <pre>phenomena = ['Rain', 'Snow', 'Hail', 'Thunder']\nsplit_year = 2000\ncity_list = list(cities.keys())\n\nresults = analyze_phenomena_cities(cities, city_list, phenomena, split_year)\n</pre> phenomena = ['Rain', 'Snow', 'Hail', 'Thunder'] split_year = 2000 city_list = list(cities.keys())  results = analyze_phenomena_cities(cities, city_list, phenomena, split_year) <pre>C:\\Users\\mikos\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\scipy\\stats\\_morestats.py:3310: RuntimeWarning: invalid value encountered in scalar divide\n  W = numer / denom\nC:\\Users\\mikos\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\scipy\\stats\\_morestats.py:3310: RuntimeWarning: invalid value encountered in scalar divide\n  W = numer / denom\n</pre> In\u00a0[20]: Copied! <pre>def results_to_dataframe(results):\n    \"\"\"\n    Konwertuje s\u0142ownik wynik\u00f3w analizy zjawisk pogodowych na DataFrame.\n\n    Parametry:\n    ----------\n    results : dict\n        S\u0142ownik z wynikami analizy, gdzie kluczem jest miasto,\n        a warto\u015bci\u0105 jest kolejny s\u0142ownik z danymi statystycznymi\n        dla poszczeg\u00f3lnych zjawisk pogodowych.\n\n    Zwraca:\n    --------\n    pd.DataFrame\n        DataFrame z wynikami, zawieraj\u0105cy kolumny:\n        ['City', 'Phenomenon'] oraz pozosta\u0142e statystyki dla ka\u017cdego zjawiska i miasta.\n    \"\"\"\n    rows = []  # Lista do przechowywania wierszy wynikowych\n\n    # Iteracja po miastach i ich wynikach\n    for city, city_results in results.items():\n        # Iteracja po poszczeg\u00f3lnych zjawiskach pogodowych\n        for phenomenon, stats in city_results.items():\n            # Tworzenie wiersza z informacj\u0105 o mie\u015bcie i zjawisku\n            row = {'City': city, 'Phenomenon': phenomenon}\n            # Dodanie statystyk do wiersza\n            row.update(stats)\n            rows.append(row)  # Dodanie wiersza do listy\n\n    # Konwersja listy s\u0142ownik\u00f3w do DataFrame\n    df = pd.DataFrame(rows)\n    return df\n</pre> def results_to_dataframe(results):     \"\"\"     Konwertuje s\u0142ownik wynik\u00f3w analizy zjawisk pogodowych na DataFrame.      Parametry:     ----------     results : dict         S\u0142ownik z wynikami analizy, gdzie kluczem jest miasto,         a warto\u015bci\u0105 jest kolejny s\u0142ownik z danymi statystycznymi         dla poszczeg\u00f3lnych zjawisk pogodowych.      Zwraca:     --------     pd.DataFrame         DataFrame z wynikami, zawieraj\u0105cy kolumny:         ['City', 'Phenomenon'] oraz pozosta\u0142e statystyki dla ka\u017cdego zjawiska i miasta.     \"\"\"     rows = []  # Lista do przechowywania wierszy wynikowych      # Iteracja po miastach i ich wynikach     for city, city_results in results.items():         # Iteracja po poszczeg\u00f3lnych zjawiskach pogodowych         for phenomenon, stats in city_results.items():             # Tworzenie wiersza z informacj\u0105 o mie\u015bcie i zjawisku             row = {'City': city, 'Phenomenon': phenomenon}             # Dodanie statystyk do wiersza             row.update(stats)             rows.append(row)  # Dodanie wiersza do listy      # Konwersja listy s\u0142ownik\u00f3w do DataFrame     df = pd.DataFrame(rows)     return df  In\u00a0[21]: Copied! <pre>df_results = results_to_dataframe(results)\ndisplay(df_results) \n</pre> df_results = results_to_dataframe(results) display(df_results)  City Phenomenon Shapiro_p_before Shapiro_p_after Levene_p MannWhitney_p Std_before Std_after CV_before CV_after Mean_before Mean_after 0 Ateny Rain NaN NaN NaN NaN NaN 0.420346 NaN 1.833985 NaN 0.229198 1 Ateny Snow NaN NaN NaN NaN NaN 0.086508 NaN 11.474076 NaN 0.007539 2 Ateny Hail NaN NaN NaN NaN NaN 0.011708 NaN 85.410772 NaN 0.000137 3 Ateny Thunder NaN NaN NaN NaN NaN 0.237071 NaN 3.966586 NaN 0.059767 4 Berlin Rain 2.695733e-62 5.507206e-48 2.236344e-07 2.322604e-07 0.491278 0.500051 0.827862 0.978477 0.593429 0.511050 5 Berlin Snow 1.665489e-71 6.284880e-58 4.094982e-03 4.106443e-03 0.335659 0.299365 2.594699 3.010285 0.129363 0.099448 6 Berlin Hail 3.708736e-79 2.581227e-65 1.366008e-07 1.423134e-07 0.141842 0.026279 6.907701 38.052595 0.020534 0.000691 7 Berlin Thunder 1.684187e-74 1.919951e-60 5.206889e-03 5.219736e-03 0.269871 0.229884 3.413699 4.109526 0.079055 0.055939 8 Bruksela Rain NaN NaN 3.036256e-01 3.036102e-01 0.491280 0.489535 0.828176 0.813325 0.593208 0.601894 9 Bruksela Snow NaN NaN 2.072901e-01 2.072807e-01 0.239320 0.229762 3.924413 4.109458 0.060982 0.055911 10 Bruksela Hail NaN NaN 7.735213e-01 7.735177e-01 0.121451 0.119046 8.112009 8.280301 0.014972 0.014377 11 Bruksela Thunder NaN NaN 6.457070e-02 6.457337e-02 0.254433 0.240678 3.657563 3.898893 0.069564 0.061730 12 Budapeszt Rain NaN NaN 1.115748e-02 1.116245e-02 0.476979 0.469958 1.363223 1.427474 0.349890 0.329224 13 Budapeszt Snow NaN NaN 2.909863e-02 2.910396e-02 0.271012 0.255123 3.396027 3.645805 0.079803 0.069977 14 Budapeszt Hail NaN NaN 5.369767e-01 5.369799e-01 0.033086 0.038497 30.196576 25.940759 0.001096 0.001484 15 Budapeszt Thunder NaN NaN 3.589183e-01 3.589026e-01 0.244950 0.251823 3.821493 3.701290 0.064098 0.068037 16 Lisbona Rain NaN NaN 1.191697e-102 5.835527e-101 0.450596 0.341982 1.591060 2.529038 0.283205 0.135222 17 Lisbona Snow NaN NaN 7.807097e-01 7.807799e-01 0.013526 0.011123 73.932402 89.905506 0.000183 0.000124 18 Lisbona Hail NaN NaN 3.690982e-01 3.691002e-01 0.027044 0.035154 36.956053 28.414783 0.000732 0.001237 19 Lisbona Thunder NaN NaN 4.379817e-09 4.470948e-09 0.142301 0.093316 6.883339 10.623513 0.020673 0.008784 20 Londyn Rain 4.359980e-90 NaN 0.000000e+00 0.000000e+00 0.022230 0.476718 44.972212 1.365497 0.000494 0.349117 21 Londyn Snow NaN NaN 9.084872e-17 9.948649e-17 0.000000 0.128731 NaN 7.638064 0.000000 0.016854 22 Londyn Hail NaN NaN NaN 1.000000e+00 0.000000 0.000000 NaN NaN 0.000000 0.000000 23 Londyn Thunder NaN NaN NaN 1.000000e+00 0.000000 0.000000 NaN NaN 0.000000 0.000000 24 Madryd Rain NaN NaN 4.886720e-01 4.886545e-01 0.435759 0.432790 1.710550 1.734129 0.254748 0.249572 25 Madryd Snow NaN NaN 5.520483e-03 5.524587e-03 0.079698 0.104098 12.469384 9.502187 0.006392 0.010955 26 Madryd Hail NaN NaN 1.267305e-02 1.267887e-02 0.066063 0.045278 15.073426 22.042885 0.004383 0.002054 27 Madryd Thunder NaN NaN 2.653561e-11 2.742612e-11 0.246245 0.195831 3.798419 4.903049 0.064828 0.039941 28 Moskwa Rain NaN NaN 3.284914e-01 3.284724e-01 0.463773 0.460333 1.481526 1.510567 0.313037 0.304742 29 Moskwa Snow NaN NaN 8.484126e-03 8.489604e-03 0.446335 0.456720 1.625629 1.540703 0.274561 0.296436 30 Moskwa Hail NaN NaN 9.223099e-01 9.223188e-01 0.088230 0.089111 11.247214 11.133828 0.007845 0.008004 31 Moskwa Thunder NaN NaN 1.520077e-01 1.520019e-01 0.196782 0.184643 4.877651 5.225253 0.040344 0.035337 32 Pary\u017c Rain 8.013242e-61 NaN 4.446836e-19 5.108809e-19 0.456240 0.488676 1.545370 1.240111 0.295230 0.394058 33 Pary\u017c Snow 7.142798e-75 NaN 6.025870e-01 6.025755e-01 0.137695 0.131990 7.124995 7.442848 0.019326 0.017734 34 Pary\u017c Hail 6.409612e-77 NaN 8.768011e-01 8.768248e-01 0.049619 0.051399 20.112177 19.406406 0.002467 0.002649 35 Pary\u017c Thunder 2.966538e-75 NaN 5.298385e-03 5.303616e-03 0.124045 0.094950 7.938886 10.437270 0.015625 0.009097 36 Praga Rain NaN NaN 3.929856e-01 3.929681e-01 0.499378 0.499687 0.949685 0.963744 0.525835 0.518485 37 Praga Snow NaN NaN 1.644207e-02 1.644743e-02 0.363681 0.349247 2.318836 2.456501 0.156838 0.142173 38 Praga Hail NaN NaN 2.036437e-03 2.038950e-03 0.068742 0.096281 14.480750 10.290293 0.004747 0.009356 39 Praga Thunder NaN NaN 1.712479e-01 1.712408e-01 0.264656 0.274615 3.492824 3.342678 0.075771 0.082154 40 Warszawa Rain NaN NaN 4.958571e-01 4.958394e-01 0.500001 0.500028 1.013511 1.001656 0.493336 0.499201 41 Warszawa Snow NaN NaN 8.473151e-03 8.477766e-03 0.375010 0.359690 2.215672 2.355994 0.169253 0.152670 42 Warszawa Hail NaN NaN 7.494245e-01 7.494252e-01 0.068742 0.071476 14.480750 13.920405 0.004747 0.005135 43 Warszawa Thunder NaN NaN 3.887326e-01 3.887163e-01 0.268711 0.262428 3.430605 3.527483 0.078328 0.074395 44 Wiede\u0144 Rain NaN NaN 2.800904e-02 2.801442e-02 0.497928 0.499308 1.096697 1.055301 0.454025 0.473143 45 Wiede\u0144 Snow NaN NaN 2.225501e-02 2.226066e-02 0.307607 0.291722 2.907502 3.106374 0.105798 0.093911 46 Wiede\u0144 Hail NaN NaN 1.544499e-02 1.545125e-02 0.045025 0.067275 22.168770 14.798645 0.002031 0.004546 47 Wiede\u0144 Thunder NaN NaN 8.997882e-01 8.997877e-01 0.204165 0.205162 4.685425 4.660179 0.043575 0.044024"},{"location":"notebooks/Variability/#analiza-rozkadow-temperatur-przed-i-po-roku-2000","title":"\ud83d\udcca Analiza rozk\u0142ad\u00f3w temperatur przed i po roku 2000\u00b6","text":"<p>Na wykresach por\u00f3wnuj\u0105cych rozk\u0142ady temperatur (\u015brednich, minimalnych i maksymalnych) przed i po roku 2000 trudno zauwa\u017cy\u0107 wyra\u017ane r\u00f3\u017cnice. Rozk\u0142ady dla wi\u0119kszo\u015bci miast nak\u0142adaj\u0105 si\u0119 na siebie i maj\u0105 zbli\u017cony kszta\u0142t, co sugeruje, \u017ce og\u00f3lna struktura danych pozosta\u0142a stosunkowo stabilna.</p> <p>Najbardziej zauwa\u017calne zmiany pojawiaj\u0105 si\u0119 w centrum rozk\u0142adu, czyli w obszarze typowych, najcz\u0119\u015bciej wyst\u0119puj\u0105cych temperatur. W niekt\u00f3rych przypadkach widoczna jest delikatna zmiana po\u0142o\u017cenia w stron\u0119 wy\u017cszych temperatur, co mo\u017ce \u015bwiadczy\u0107 o lekkim ociepleniu, ale r\u00f3\u017cnice te s\u0105 subtelne i niejednoznaczne bez dodatkowej analizy statystycznej.</p>"},{"location":"notebooks/Variability/#opis-wynikow-analizy-statystycznej","title":"Opis wynik\u00f3w analizy statystycznej\u00b6","text":"<p>Analiza por\u00f3wnawcza \u015brednich temperatur przed i po roku 2000 wykaza\u0142a, \u017ce dla wi\u0119kszo\u015bci miast obserwujemy statystycznie istotny wzrost \u015brednich warto\u015bci temperatury. Dotyczy to temperatury \u015bredniej (TEMP), minimalnej (MIN) oraz maksymalnej (MAX).</p> <p>Warto zauwa\u017cy\u0107, \u017ce:</p> <ul> <li>Wzrost temperatur jest widoczny w wi\u0119kszo\u015bci miast i mo\u017ce wskazywa\u0107 na ocieplenie klimatu w analizowanym okresie.</li> <li>Najbardziej wyra\u017ane zmiany dotycz\u0105 miast takich jak Berlin, Bruksela, Budapeszt, Praga, Warszawa i Wiede\u0144.</li> <li>Londyn wykazuje niewielkie, ale statystycznie istotne zmiany, cho\u0107 s\u0105 one mniej wyra\u017ane.</li> <li>Moskwa jest wyj\u0105tkiem, gdzie w niekt\u00f3rych przypadkach zanotowano spadek lub brak istotnych zmian w \u015brednich temperaturach.</li> <li>W wi\u0119kszo\u015bci przypadk\u00f3w test Mann-Whitneya U by\u0142 stosowany ze wzgl\u0119du na brak normalno\u015bci rozk\u0142ad\u00f3w danych.</li> </ul>"},{"location":"notebooks/Variability/#analiza-rozkadow-liczby-dni-zjawisk-pogodowych-przed-i-po-roku-2000","title":"Analiza rozk\u0142ad\u00f3w liczby dni zjawisk pogodowych przed i po roku 2000\u00b6","text":"<p>Analiza wykres\u00f3w rozk\u0142ad\u00f3w g\u0119sto\u015bci (KDE) liczby dni zjawisk pogodowych dla okres\u00f3w przed i po roku 2000 wskazuje, \u017ce r\u00f3\u017cnice mi\u0119dzy tymi okresami s\u0105 trudne do zauwa\u017cenia.</p>"},{"location":"notebooks/Variability/#interpretacja-wynikow-testow-statystycznych-dla-zjawisk-pogodowych","title":"Interpretacja wynik\u00f3w test\u00f3w statystycznych dla zjawisk pogodowych\u00b6","text":"<ul> <li><p>Ateny: Brak wystarczaj\u0105cych danych do test\u00f3w statystycznych (warto\u015bci NaN). Warto zauwa\u017cy\u0107, \u017ce odchylenie standardowe dla opad\u00f3w jest stosunkowo wysokie, a \u015brednia liczba dni z deszczem jest niska.</p> </li> <li><p>Berlin: Dla wszystkich zjawisk pogodowych (deszcz, \u015bnieg, grad, burze) testy normalno\u015bci wskazuj\u0105 na brak normalno\u015bci rozk\u0142ad\u00f3w (bardzo niskie warto\u015bci p w Shapiro). Test Levene\u2019a i test Mann-Whitneya pokazuj\u0105 istotne r\u00f3\u017cnice mi\u0119dzy okresami przed i po roku 2000 dla wi\u0119kszo\u015bci zjawisk (p &lt; 0.05). \u015arednie warto\u015bci liczby dni z opadami deszczu i burz spad\u0142y po roku 2000, podobnie dla \u015bniegu i gradu, co wskazuje na zmniejszenie ich wyst\u0119powania.</p> </li> <li><p>Bruksela: Testy statystyczne nie wskazuj\u0105 istotnych r\u00f3\u017cnic mi\u0119dzy okresami (p &gt; 0.05). Rozk\u0142ady nie s\u0105 normalne (Shapiro p NaN \u2013 brak danych), ale wariancje s\u0105 zbli\u017cone. \u015arednie liczby dni z opadami s\u0105 stabilne.</p> </li> <li><p>Budapeszt: Nieznaczne, ale istotne zmiany dla opad\u00f3w deszczu i \u015bniegu (Levene i Mann-Whitney p &lt; 0.05). \u015arednie warto\u015bci liczby dni z deszczem i \u015bniegiem nieznacznie spad\u0142y. Dla gradu i burz brak istotnych r\u00f3\u017cnic.</p> </li> <li><p>Lizbona: Silnie istotne r\u00f3\u017cnice w wariancjach i medianach dla dni deszczowych (bardzo niskie p w testach Levene i Mann-Whitney). \u015arednia liczba dni z deszczem znacz\u0105co spad\u0142a po roku 2000, co potwierdza wyra\u017any malej\u0105cy trend. Inne zjawiska nie wykazuj\u0105 istotnych zmian.</p> </li> <li><p>Londyn: Pomimo obecno\u015bci danych, dla deszczu i \u015bniegu wykazano bardzo niskie p (testy Levene i Mann-Whitney), wskazuj\u0105ce na istotne r\u00f3\u017cnice. Jednak\u017ce dane Londynu zosta\u0142y pomini\u0119te na wykresach dla deszczu i \u015bniegu ze wzgl\u0119du na zniekszta\u0142cenia. Dla gradu i burz brak zmian.</p> </li> <li><p>Madryt: Brak istotnych zmian dla opad\u00f3w deszczu (p &gt; 0.05), niewielkie istotne r\u00f3\u017cnice dla \u015bniegu, gradu i burz. \u015arednie warto\u015bci dla \u015bniegu i gradu s\u0105 niskie, a dla burz lekko spad\u0142y.</p> </li> <li><p>Moskwa: Brak istotnych r\u00f3\u017cnic w opadach deszczu i gradu, jednak dla \u015bniegu i burz wyst\u0119puj\u0105 istotne r\u00f3\u017cnice (p &lt; 0.05 w testach Levene i Mann-Whitney). \u015arednia liczba dni ze \u015bniegiem nieznacznie wzros\u0142a, co mo\u017ce \u015bwiadczy\u0107 o lokalnych zmianach klimatycznych.</p> </li> <li><p>Pary\u017c: Testy wykazuj\u0105 bardzo istotne r\u00f3\u017cnice dla deszczu (p &lt; 0.001) oraz umiarkowane dla burz. \u015arednia liczba dni z deszczem wzros\u0142a po roku 2000, co wskazuje na zwi\u0119kszon\u0105 zmienno\u015b\u0107. \u015anieg i grad nie wykazuj\u0105 istotnych zmian.</p> </li> <li><p>Praga: Testy wskazuj\u0105 istotne r\u00f3\u017cnice w wariancjach i medianach dla \u015bniegu, gradu i burz. \u015arednie warto\u015bci dla opad\u00f3w pozostaj\u0105 stabilne.</p> </li> <li><p>Warszawa: Brak istotnych r\u00f3\u017cnic dla wszystkich zjawisk (p &gt; 0.05), stabilne warto\u015bci \u015brednie i zmienno\u015b\u0107.</p> </li> <li><p>Wiede\u0144: Niewielkie, ale istotne r\u00f3\u017cnice dla deszczu, \u015bniegu i gradu. \u015arednie liczby dni z tymi zjawiskami lekko wzros\u0142y.</p> </li> </ul>"},{"location":"notebooks/Variability/#ogolne-wnioski","title":"Og\u00f3lne wnioski:\u00b6","text":"<ul> <li>Wi\u0119kszo\u015b\u0107 miast nie wykazuje znacz\u0105cych zmian w liczbie dni zjawisk pogodowych przed i po roku 2000.</li> <li>Najwi\u0119ksze zmiany zauwa\u017calne s\u0105 w Lizbonie (spadek dni deszczowych) oraz Berlinie (spadek dni z r\u00f3\u017cnymi opadami).</li> <li>Dane Londynu dla deszczu i \u015bniegu s\u0105 specyficzne i zaburzaj\u0105 analiz\u0119, dlatego by\u0142y pomijane w wizualizacjach.</li> <li>W wielu miastach rozk\u0142ady danych nie s\u0105 normalne, co uzasadnia zastosowanie testu nieparametrycznego Mann-Whitney.</li> </ul>"}]}